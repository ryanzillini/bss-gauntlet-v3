{
    "apis": [
      {
        "name": "Customdatasource",
        "source_file": "CustomDataSource",
        "endpoints": [
          {
            "name": "getByconnectionById",
            "method": "GET",
            "path": "CustomDataSource/ByConnection/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ByconnectionByIdResult",
              "description": "Returns getByconnectionById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {}
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CustomDataSource object."
              }
            ],
            "description": "Retrieve an instance of the CustomDataSource object by its ID."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "CustomDataSource/ByConnection/{id}/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CustomDataSource object."
              }
            ],
            "description": "Retrieve all of the / objects for a specified CustomDataSource in a paged fashion."
          },
          {
            "name": "getCustomdatasourceById",
            "method": "GET",
            "path": "CustomDataSource/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CustomdatasourceByIdResult",
              "description": "Returns getCustomdatasourceById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {}
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CustomDataSource object."
              }
            ],
            "description": "Retrieve an instance of the CustomDataSource object by its ID."
          },
          {
            "name": "getMetadata",
            "method": "GET",
            "path": "CustomDataSource/{id}/Metadata",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "MetadataResult",
              "description": "Returns getMetadata information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {}
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CustomDataSource object."
              }
            ],
            "description": "Retrieve all of the Metadata objects for the specified CustomDataSource."
          },
          {
            "name": "getSql",
            "method": "GET",
            "path": "CustomDataSource/{id}/Metadata/sql",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "SqlResult",
              "description": "Returns getSql information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {}
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CustomDataSource object."
              }
            ],
            "description": "Retrieve all of the Metadata/sql objects for the specified CustomDataSource."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "CustomDataSource/{id}/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CustomDataSource object."
              }
            ],
            "description": "Retrieve all the data from the Custom Data Source in a paged fashion by specifying the {id} of the data source."
          }
        ]
      },
      {
        "name": "Account Package",
        "source_file": "Account-Package",
        "endpoints": [
          {
            "name": "deletePackageById",
            "method": "DELETE",
            "path": "Account/Package/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PackageByIdResult",
              "description": "Returns deletePackageById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "package"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountPackage object."
              }
            ],
            "description": "Delete an instance of the AccountPackage object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "deleteCancelsetting",
            "method": "DELETE",
            "path": "Account/Package/{id}/CancelSetting",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CancelsettingResult",
              "description": "Returns deleteCancelsetting information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "accountPackage"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountPackage object."
              },
              {
                "name": "cancelsettingId",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CancelSetting object sent down in the body of the request in JSON format.{\n    \"details\": {\n        \"items\": [\n            {\n                \"identity\": 1\n            }\n        ]\n    }\n}"
              }
            ],
            "description": "Delete a CancelSetting object from the AccountPackage. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Account/Package/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountPackage objects."
          },
          {
            "name": "getByextension",
            "method": "GET",
            "path": "Account/Package/ByExtension",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ByextensionResult",
              "description": "Returns getByextension information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "accountId": 22,
                    "accountName": "Sample Text Data",
                    "created": "2021-04-26T15:25:27.587Z",
                    "nextBill": "2021-04-26T15:25:27.587Z",
                    "name": "Sample Text Data",
                    "lastStatusChanged": "2021-04-26T15:25:27.587Z",
                    "effective": "2021-04-26T15:25:27.587Z",
                    "updated": "2021-04-26T15:25:27.587Z",
                    "effectiveCancel": "2021-04-26T15:25:27.587Z",
                    "packageFrequencyId": 7,
                    "packageFrequencyName": "Sample Text Data",
                    "createdByUserId": 16,
                    "createdByUserName": "Sample Text Data",
                    "billDay": 7,
                    "updatedByUserId": 7,
                    "updatedByUserName": "Sample Text Data",
                    "usageBillDay": 7,
                    "activation": "2021-04-26T15:25:27.587Z",
                    "finalBill": "2021-04-26T15:25:27.587Z",
                    "lastBilled": "2021-04-26T15:25:27.587Z",
                    "accountSharePlanId": 6,
                    "accountSharePlanName": "Sample Text Data",
                    "lastUsageBilled": "2021-04-26T15:25:27.587Z",
                    "accountProductCodeId": 6,
                    "accountProductCodeName": "Sample Text Data",
                    "packageCategoryId": 0,
                    "packageCategoryName": "Sample Text Data",
                    "chargeRecurringIfUsage": true,
                    "updatedByPortalUserId": 25,
                    "updatedByPortalUserName": "Sample Text Data",
                    "pendingBillDay": "15",
                    "pendingUsageBillDay": "15",
                    "billCancelOptionTypeId": 26,
                    "billCancelOptionTypeName": "Sample Text Data",
                    "waiveEarlyTerminationFee": false,
                    "billingActivationTypeId": 13,
                    "billingActivationTypeName": "Sample Text Data",
                    "quantity": "1",
                    "isQuantityAllowed": false,
                    "importLastBilled": "2021-04-26T15:25:27.587Z",
                    "priceBookId": 19,
                    "priceBookName": "Sample Text Data",
                    "accountContractId": 5,
                    "accountContractName": "Sample Text Data",
                    "taxAddressId": 26,
                    "taxAddressName": "Sample Text Data",
                    "id": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountPackage objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/Package/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountPackage objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Account/Package/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountPackage objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getPackageById",
            "method": "GET",
            "path": "Account/Package/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PackageByIdResult",
              "description": "Returns getPackageById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Gold Service Plan",
                  "ownerId": 0,
                  "ownerName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "start": "2021-04-26T15:25:27.587Z",
                  "expiry": "2021-04-26T15:25:27.587Z",
                  "fullPeriod": true,
                  "invoiceDetail": "Sample Text Data",
                  "postPaid": true,
                  "billOnAccountBillDay": true,
                  "defaultAccountPackageStatusTypeId": 8,
                  "defaultAccountPackageStatusTypeName": "Sample Text Data",
                  "packageCategoryId": 27,
                  "packageCategoryName": "Sample Text Data",
                  "chargeRecurringIfUsage": true,
                  "isGlobalAddOnEligible": true,
                  "description": "The best service plan available",
                  "isQuantityAllowed": false,
                  "id": 15
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountPackage object."
              }
            ],
            "description": "Retrieve an instance of the AccountPackage object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Account/Package/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountPackage object."
              }
            ],
            "description": "Retrieve deep detail of the AccountPackage object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getHasbucketedusage",
            "method": "GET",
            "path": "Account/Package/{id}/HasBucketedUsage",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "HasbucketedusageResult",
              "description": "Returns getHasbucketedusage information"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountPackage object."
              }
            ],
            "description": "Returns a boolean value depending on whether an account package has Usage Buckets."
          },
          {
            "name": "patchPackageById",
            "method": "PATCH",
            "path": "Account/Package/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchPackageByIdResult",
              "description": "Returns patchPackageById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "package",
                      "instance": {
                        "identity": 1,
                        "name": "Gold Service Plan",
                        "ownerId": 7,
                        "ownerName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "start": "2021-04-26T15:25:27.587Z",
                        "expiry": "2021-04-26T15:25:27.587Z",
                        "fullPeriod": true,
                        "invoiceDetail": "Sample Text Data",
                        "postPaid": true,
                        "billOnAccountBillDay": true,
                        "defaultAccountPackageStatusTypeId": 8,
                        "defaultAccountPackageStatusTypeName": "Sample Text Data",
                        "packageCategoryId": 7,
                        "packageCategoryName": "Sample Text Data",
                        "chargeRecurringIfUsage": true,
                        "isGlobalAddOnEligible": true,
                        "description": "The best service plan available",
                        "isQuantityAllowed": false,
                        "id": 7
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountPackage object."
              }
            ],
            "properties": {
              "details": {},
              "accountPackages": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "accountId": 16,
                    "name": "Sample Text Data",
                    "lastStatusChanged": "2021-04-26T15:25:27.587Z",
                    "effective": "2021-04-26T15:25:27.587Z",
                    "updated": "2021-04-26T15:25:27.587Z",
                    "effectiveCancel": "2021-04-26T15:25:27.587Z",
                    "packageFrequencyId": 6,
                    "billDay": 7,
                    "usageBillDay": 7,
                    "activation": "2021-04-26T15:25:27.587Z",
                    "accountSharePlanId": 22,
                    "accountProductCodeId": 8,
                    "packageCategoryId": 27,
                    "pendingBillDay": "15",
                    "pendingUsageBillDay": "15",
                    "billCancelOptionTypeId": 18,
                    "waiveEarlyTerminationFee": false,
                    "billingActivationTypeId": 20,
                    "quantity": "1",
                    "isQuantityAllowed": false,
                    "importLastBilled": "2021-04-26T15:25:27.587Z",
                    "priceBookId": 16,
                    "accountContractId": 14,
                    "taxAddressId": 5,
                    "id": "Sample Text Data"
                  }
                ]
              }
            },
            "description": "Update or Add the AccountPackage object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Account/Package/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "accountId": 20,
              "name": "Sample Text Data",
              "lastStatusChanged": "2021-04-26T15:25:27.587Z",
              "effective": "2021-04-26T15:25:27.587Z",
              "updated": "2021-04-26T15:25:27.587Z",
              "effectiveCancel": "2021-04-26T15:25:27.587Z",
              "packageFrequencyId": 23,
              "billDay": 7,
              "usageBillDay": 7,
              "activation": "2021-04-26T15:25:27.587Z",
              "accountSharePlanId": 2,
              "accountProductCodeId": 27,
              "packageCategoryId": 18,
              "pendingBillDay": "15",
              "pendingUsageBillDay": "15",
              "billCancelOptionTypeId": 9,
              "waiveEarlyTerminationFee": false,
              "billingActivationTypeId": 19,
              "quantity": "1",
              "isQuantityAllowed": false,
              "importLastBilled": "2021-04-26T15:25:27.587Z",
              "priceBookId": 21,
              "accountContractId": 14,
              "taxAddressId": 9,
              "id": "Sample Text Data"
            },
            "description": "Create a new instance of the AccountPackage object."
          },
          {
            "name": "createFromcatalog",
            "method": "POST",
            "path": "Account/Package/FromCatalog",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "FromcatalogResult",
              "description": "Returns createFromcatalog information"
            },
            "parameters": [],
            "description": "Adds an AccountPackage to the Account and inherits all of the Package properties from the product catalog."
          },
          {
            "name": "createCancelsetting",
            "method": "POST",
            "path": "Account/Package/{id}/CancelSetting",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CancelsettingResult",
              "description": "Returns createCancelsetting information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "accountId": 27,
                      "accountName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "nextBill": "2021-04-26T15:25:27.587Z",
                      "name": "Sample Text Data",
                      "lastStatusChanged": "2021-04-26T15:25:27.587Z",
                      "effective": "2021-04-26T15:25:27.587Z",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "effectiveCancel": "2021-04-26T15:25:27.587Z",
                      "packageFrequencyId": 27,
                      "packageFrequencyName": "Sample Text Data",
                      "createdByUserId": 0,
                      "createdByUserName": "Sample Text Data",
                      "billDay": 7,
                      "updatedByUserId": 26,
                      "updatedByUserName": "Sample Text Data",
                      "usageBillDay": 7,
                      "activation": "2021-04-26T15:25:27.587Z",
                      "finalBill": "2021-04-26T15:25:27.587Z",
                      "lastBilled": "2021-04-26T15:25:27.587Z",
                      "accountSharePlanId": 10,
                      "accountSharePlanName": "Sample Text Data",
                      "lastUsageBilled": "2021-04-26T15:25:27.587Z",
                      "accountProductCodeId": 9,
                      "accountProductCodeName": "Sample Text Data",
                      "packageCategoryId": 0,
                      "packageCategoryName": "Sample Text Data",
                      "chargeRecurringIfUsage": true,
                      "updatedByPortalUserId": 1,
                      "updatedByPortalUserName": "Sample Text Data",
                      "pendingBillDay": "15",
                      "pendingUsageBillDay": "15",
                      "billCancelOptionTypeId": 1,
                      "billCancelOptionTypeName": "Sample Text Data",
                      "waiveEarlyTerminationFee": false,
                      "billingActivationTypeId": 6,
                      "billingActivationTypeName": "Sample Text Data",
                      "quantity": "1",
                      "isQuantityAllowed": false,
                      "importLastBilled": "2021-04-26T15:25:27.587Z",
                      "priceBookId": 16,
                      "priceBookName": "Sample Text Data",
                      "accountContractId": 23,
                      "accountContractName": "Sample Text Data",
                      "taxAddressId": 13,
                      "taxAddressName": "Sample Text Data",
                      "id": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountPackage object."
              }
            ],
            "properties": {
              "accountId": 5,
              "name": "Sample Text Data",
              "lastStatusChanged": "2021-04-26T15:25:27.587Z",
              "effective": "2021-04-26T15:25:27.587Z",
              "updated": "2021-04-26T15:25:27.587Z",
              "effectiveCancel": "2021-04-26T15:25:27.587Z",
              "packageFrequencyId": 23,
              "billDay": 7,
              "usageBillDay": 7,
              "activation": "2021-04-26T15:25:27.587Z",
              "accountSharePlanId": 13,
              "accountProductCodeId": 27,
              "packageCategoryId": 16,
              "pendingBillDay": "15",
              "pendingUsageBillDay": "15",
              "billCancelOptionTypeId": 2,
              "waiveEarlyTerminationFee": false,
              "billingActivationTypeId": 8,
              "quantity": "1",
              "isQuantityAllowed": false,
              "importLastBilled": "2021-04-26T15:25:27.587Z",
              "priceBookId": 0,
              "accountContractId": 25,
              "taxAddressId": 13,
              "id": "Sample Text Data"
            },
            "description": "Create a new instance of a CancelSetting object that belongs to the AccountPackage."
          },
          {
            "name": "updatePackageById",
            "method": "PUT",
            "path": "Account/Package/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PackageByIdResult",
              "description": "Returns updatePackageById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Gold Service Plan",
                      "ownerId": 18,
                      "ownerName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "start": "2021-04-26T15:25:27.587Z",
                      "expiry": "2021-04-26T15:25:27.587Z",
                      "fullPeriod": true,
                      "invoiceDetail": "Sample Text Data",
                      "postPaid": true,
                      "billOnAccountBillDay": true,
                      "defaultAccountPackageStatusTypeId": 11,
                      "defaultAccountPackageStatusTypeName": "Sample Text Data",
                      "packageCategoryId": 16,
                      "packageCategoryName": "Sample Text Data",
                      "chargeRecurringIfUsage": true,
                      "isGlobalAddOnEligible": true,
                      "description": "The best service plan available",
                      "isQuantityAllowed": false,
                      "id": 5
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "accountId": 12,
              "name": "Sample Text Data",
              "lastStatusChanged": "2021-04-26T15:25:27.587Z",
              "effective": "2021-04-26T15:25:27.587Z",
              "updated": "2021-04-26T15:25:27.587Z",
              "effectiveCancel": "2021-04-26T15:25:27.587Z",
              "packageFrequencyId": 18,
              "billDay": 7,
              "usageBillDay": 7,
              "activation": "2021-04-26T15:25:27.587Z",
              "accountSharePlanId": 24,
              "accountProductCodeId": 22,
              "packageCategoryId": 20,
              "pendingBillDay": "15",
              "pendingUsageBillDay": "15",
              "billCancelOptionTypeId": 21,
              "waiveEarlyTerminationFee": false,
              "billingActivationTypeId": 0,
              "quantity": "1",
              "isQuantityAllowed": false,
              "importLastBilled": "2021-04-26T15:25:27.587Z",
              "priceBookId": 25,
              "accountContractId": 15,
              "taxAddressId": 23,
              "id": "Sample Text Data"
            },
            "description": "Update an existing instance of the AccountPackage object."
          },
          {
            "name": "updateCancelsetting",
            "method": "PUT",
            "path": "Account/Package/{id}/CancelSetting",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CancelsettingResult",
              "description": "Returns updateCancelsetting information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "accountId": 11,
                      "accountName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "nextBill": "2021-04-26T15:25:27.587Z",
                      "name": "Sample Text Data",
                      "lastStatusChanged": "2021-04-26T15:25:27.587Z",
                      "effective": "2021-04-26T15:25:27.587Z",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "effectiveCancel": "2021-04-26T15:25:27.587Z",
                      "packageFrequencyId": 22,
                      "packageFrequencyName": "Sample Text Data",
                      "createdByUserId": 18,
                      "createdByUserName": "Sample Text Data",
                      "billDay": 7,
                      "updatedByUserId": 23,
                      "updatedByUserName": "Sample Text Data",
                      "usageBillDay": 7,
                      "activation": "2021-04-26T15:25:27.587Z",
                      "finalBill": "2021-04-26T15:25:27.587Z",
                      "lastBilled": "2021-04-26T15:25:27.587Z",
                      "accountSharePlanId": 26,
                      "accountSharePlanName": "Sample Text Data",
                      "lastUsageBilled": "2021-04-26T15:25:27.587Z",
                      "accountProductCodeId": 13,
                      "accountProductCodeName": "Sample Text Data",
                      "packageCategoryId": 14,
                      "packageCategoryName": "Sample Text Data",
                      "chargeRecurringIfUsage": true,
                      "updatedByPortalUserId": 10,
                      "updatedByPortalUserName": "Sample Text Data",
                      "pendingBillDay": "15",
                      "pendingUsageBillDay": "15",
                      "billCancelOptionTypeId": 17,
                      "billCancelOptionTypeName": "Sample Text Data",
                      "waiveEarlyTerminationFee": false,
                      "billingActivationTypeId": 25,
                      "billingActivationTypeName": "Sample Text Data",
                      "quantity": "1",
                      "isQuantityAllowed": false,
                      "importLastBilled": "2021-04-26T15:25:27.587Z",
                      "priceBookId": 5,
                      "priceBookName": "Sample Text Data",
                      "accountContractId": 4,
                      "accountContractName": "Sample Text Data",
                      "taxAddressId": 20,
                      "taxAddressName": "Sample Text Data",
                      "id": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountPackage object."
              }
            ],
            "properties": {
              "identity": 1,
              "accountId": 2,
              "name": "Sample Text Data",
              "lastStatusChanged": "2021-04-26T15:25:27.587Z",
              "effective": "2021-04-26T15:25:27.587Z",
              "updated": "2021-04-26T15:25:27.587Z",
              "effectiveCancel": "2021-04-26T15:25:27.587Z",
              "packageFrequencyId": 11,
              "billDay": 7,
              "usageBillDay": 7,
              "activation": "2021-04-26T15:25:27.587Z",
              "accountSharePlanId": 25,
              "accountProductCodeId": 12,
              "packageCategoryId": 19,
              "pendingBillDay": "15",
              "pendingUsageBillDay": "15",
              "billCancelOptionTypeId": 0,
              "waiveEarlyTerminationFee": false,
              "billingActivationTypeId": 15,
              "quantity": "1",
              "isQuantityAllowed": false,
              "importLastBilled": "2021-04-26T15:25:27.587Z",
              "priceBookId": 13,
              "accountContractId": 23,
              "taxAddressId": 0,
              "id": "Sample Text Data"
            },
            "description": "Update an existing instance of a CancelSetting object that belongs to the AccountPackage."
          }
        ]
      },
      {
        "name": "Usage Bucket Tier",
        "source_file": "Usage-Bucket-Tier",
        "endpoints": [
          {
            "name": "deleteTierById",
            "method": "DELETE",
            "path": "Usage/Bucket/Tier/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TierByIdResult",
              "description": "Returns deleteTierById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "usageBucketTier"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageBucketTier object."
              }
            ],
            "description": "Delete an instance of the UsageBucketTier object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Usage/Bucket/Tier/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageBucketTier objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Usage/Bucket/Tier/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageBucketTier objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getTierById",
            "method": "GET",
            "path": "Usage/Bucket/Tier/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TierByIdResult",
              "description": "Returns getTierById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "usageBucketId": 15,
                  "usageBucketName": "Sample Text Data",
                  "threshold": 1,
                  "flatCharge": 8,
                  "usageUnitId": 10,
                  "usageUnitName": "Sample Text Data",
                  "packageFrequencyId": 11,
                  "packageFrequencyName": "Sample Text Data",
                  "packageServiceId": 7,
                  "packageServiceName": "Sample Text Data",
                  "currencyId": 2,
                  "currencyName": "Sample Text Data",
                  "money": 26,
                  "priceBookId": 9,
                  "priceBookName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageBucketTier object."
              }
            ],
            "description": "Retrieve an instance of the UsageBucketTier object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Usage/Bucket/Tier/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "usageBucketId": 16,
              "threshold": 0,
              "flatCharge": 17,
              "usageUnitId": 27,
              "packageFrequencyId": 11,
              "packageServiceId": 21,
              "currencyId": 19,
              "money": 22,
              "priceBookId": 10
            },
            "description": "Create a new instance of the UsageBucketTier object."
          },
          {
            "name": "updateTierById",
            "method": "PUT",
            "path": "Usage/Bucket/Tier/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TierByIdResult",
              "description": "Returns updateTierById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "usageBucketId": 11,
                      "usageBucketName": "Sample Text Data",
                      "threshold": 6,
                      "flatCharge": 12,
                      "usageUnitId": 0,
                      "usageUnitName": "Sample Text Data",
                      "packageFrequencyId": 18,
                      "packageFrequencyName": "Sample Text Data",
                      "packageServiceId": 25,
                      "packageServiceName": "Sample Text Data",
                      "currencyId": 3,
                      "currencyName": "Sample Text Data",
                      "money": 8,
                      "priceBookId": 8,
                      "priceBookName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "usageBucketId": 15,
              "threshold": 12,
              "flatCharge": 7,
              "usageUnitId": 26,
              "packageFrequencyId": 24,
              "packageServiceId": 27,
              "currencyId": 13,
              "money": 6,
              "priceBookId": 17
            },
            "description": "Update an existing instance of the UsageBucketTier object."
          }
        ]
      },
      {
        "name": "Account Parent",
        "source_file": "Account-Parent",
        "endpoints": [
          {
            "name": "deleteParentById",
            "method": "DELETE",
            "path": "Account/Parent/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ParentByIdResult",
              "description": "Returns deleteParentById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "accountParent"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountParent object."
              }
            ],
            "description": "Delete an instance of the AccountParent object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Account/Parent/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountParent objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/Parent/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountParent objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getParentById",
            "method": "GET",
            "path": "Account/Parent/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ParentByIdResult",
              "description": "Returns getParentById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "accountId": 6,
                  "accountName": "Sample Text Data",
                  "parentAccountId": 22,
                  "parentAccountName": "Sample Text Data",
                  "topAccountId": 5,
                  "topAccountName": "Sample Text Data",
                  "updated": "2021-04-26T15:25:27.587Z"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountParent object."
              }
            ],
            "description": "Retrieve an instance of the AccountParent object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Account/Parent/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Create a new instance of the AccountParent object."
          },
          {
            "name": "updateParentById",
            "method": "PUT",
            "path": "Account/Parent/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ParentByIdResult",
              "description": "Returns updateParentById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "accountId": 8,
                      "accountName": "Sample Text Data",
                      "parentAccountId": 4,
                      "parentAccountName": "Sample Text Data",
                      "topAccountId": 14,
                      "topAccountName": "Sample Text Data",
                      "updated": "2021-04-26T15:25:27.587Z"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Update an existing instance of the AccountParent object."
          }
        ]
      },
      {
        "name": "Rerate Pending",
        "source_file": "Rerate-Pending",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Rerate/Pending/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ViewReratePending objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Rerate/Pending/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ViewReratePending objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          }
        ]
      },
      {
        "name": "Usage Bucket Base",
        "source_file": "Usage-Bucket-Base",
        "endpoints": [
          {
            "name": "deleteBaseById",
            "method": "DELETE",
            "path": "Usage/Bucket/Base/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BaseByIdResult",
              "description": "Returns deleteBaseById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "usageBucketBase"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageBucketBase object."
              }
            ],
            "description": "Delete an instance of the UsageBucketBase object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Usage/Bucket/Base/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageBucketBase objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Usage/Bucket/Base/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageBucketBase objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Usage/Bucket/Base/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageBucketBase objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getBaseById",
            "method": "GET",
            "path": "Usage/Bucket/Base/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BaseByIdResult",
              "description": "Returns getBaseById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 5,
                  "ownerName": "Sample Text Data",
                  "name": "Data Bucket for Western Europe",
                  "start": "2021-04-26T15:25:27.587Z",
                  "end": "2021-04-26T15:25:27.587Z",
                  "retired": true,
                  "usageBucketBaseUnitId": 19,
                  "usageBucketBaseUnitName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageBucketBase object."
              }
            ],
            "description": "Retrieve an instance of the UsageBucketBase object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Usage/Bucket/Base/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageBucketBase object."
              }
            ],
            "description": "Retrieve deep detail of the UsageBucketBase object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchBaseById",
            "method": "PATCH",
            "path": "Usage/Bucket/Base/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchBaseByIdResult",
              "description": "Returns patchBaseById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "usageBucketBase",
                      "instance": {
                        "identity": 1,
                        "ownerId": 24,
                        "ownerName": "Sample Text Data",
                        "name": "Data Bucket for Western Europe",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "retired": true,
                        "usageBucketBaseUnitId": 22,
                        "usageBucketBaseUnitName": "Sample Text Data"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageBucketBase object."
              }
            ],
            "properties": {
              "details": {},
              "usageBucketBases": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "Data Bucket for Western Europe",
                    "start": "2021-04-26T15:25:27.587Z",
                    "end": "2021-04-26T15:25:27.587Z",
                    "retired": true,
                    "usageBucketBaseUnitId": 19
                  }
                ]
              }
            },
            "description": "Update or Add the UsageBucketBase object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Usage/Bucket/Base/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Data Bucket for Western Europe",
              "start": "2021-04-26T15:25:27.587Z",
              "end": "2021-04-26T15:25:27.587Z",
              "retired": true,
              "usageBucketBaseUnitId": 14
            },
            "description": "Create a new instance of the UsageBucketBase object."
          },
          {
            "name": "updateBaseById",
            "method": "PUT",
            "path": "Usage/Bucket/Base/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BaseByIdResult",
              "description": "Returns updateBaseById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 7,
                      "ownerName": "Sample Text Data",
                      "name": "Data Bucket for Western Europe",
                      "start": "2021-04-26T15:25:27.587Z",
                      "end": "2021-04-26T15:25:27.587Z",
                      "retired": true,
                      "usageBucketBaseUnitId": 26,
                      "usageBucketBaseUnitName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Data Bucket for Western Europe",
              "start": "2021-04-26T15:25:27.587Z",
              "end": "2021-04-26T15:25:27.587Z",
              "retired": true,
              "usageBucketBaseUnitId": 3
            },
            "description": "Update an existing instance of the UsageBucketBase object."
          }
        ]
      },
      {
        "name": "Order",
        "source_file": "Order",
        "endpoints": [
          {
            "name": "deleteOrderById",
            "method": "DELETE",
            "path": "Order/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "OrderByIdResult",
              "description": "Returns deleteOrderById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "order"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Order object."
              }
            ],
            "description": "Delete an instance of the Order object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Order/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Order objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Order/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Order objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Order/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Order objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getOrderById",
            "method": "GET",
            "path": "Order/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "OrderByIdResult",
              "description": "Returns getOrderById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 9,
                  "ownerName": "Sample Text Data",
                  "accountId": 16,
                  "accountName": "Sample Text Data",
                  "contactId": 9,
                  "contactName": "Sample Text Data",
                  "invoiceId": 21,
                  "invoiceName": "Sample Text Data",
                  "orderStatusTypeId": 27,
                  "orderStatusTypeName": "Sample Text Data",
                  "companyName": "Acme Co.",
                  "externalIdentifier": "124567-23",
                  "completed": "2021-04-26T15:25:27.587Z",
                  "purchaseOrderNumber": "PO123454",
                  "totalAmountEstimate": 456.67,
                  "preAuthTransactionIdentifier": "236958",
                  "created": "2021-04-26T15:25:27.587Z",
                  "createdByUserId": 26,
                  "createdByUserName": "Sample Text Data",
                  "statusUpdated": "2021-04-26T15:25:27.587Z",
                  "priceBookId": 25,
                  "priceBookName": "Sample Text Data",
                  "accountContractId": 26,
                  "accountContractName": "Sample Text Data",
                  "discountPromoCodeId": 14,
                  "discountPromoCodeName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Order object."
              }
            ],
            "description": "Retrieve an instance of the Order object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Order/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Order object."
              }
            ],
            "description": "Retrieve deep detail of the Order object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getPackagetracking",
            "method": "GET",
            "path": "Order/{orderId}/PackageTracking",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PackarackingResult",
              "description": "Returns getPackagetracking information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "ownerId": 24,
                    "ownerName": "Sample Text Data",
                    "accountId": 26,
                    "accountName": "Sample Text Data",
                    "contactId": 25,
                    "contactName": "Sample Text Data",
                    "invoiceId": 24,
                    "invoiceName": "Sample Text Data",
                    "orderStatusTypeId": 7,
                    "orderStatusTypeName": "Sample Text Data",
                    "companyName": "Acme Co.",
                    "externalIdentifier": "124567-23",
                    "completed": "2021-04-26T15:25:27.587Z",
                    "purchaseOrderNumber": "PO123454",
                    "totalAmountEstimate": 456.67,
                    "preAuthTransactionIdentifier": "236958",
                    "created": "2021-04-26T15:25:27.587Z",
                    "createdByUserId": 8,
                    "createdByUserName": "Sample Text Data",
                    "statusUpdated": "2021-04-26T15:25:27.587Z",
                    "priceBookId": 8,
                    "priceBookName": "Sample Text Data",
                    "accountContractId": 21,
                    "accountContractName": "Sample Text Data",
                    "discountPromoCodeId": 2,
                    "discountPromoCodeName": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Order objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Order/{orderId}/PackageTracking/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Order objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getStatus",
            "method": "GET",
            "path": "Order/{orderId}/Status",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "StatusResult",
              "description": "Returns getStatus information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "ownerId": 8,
                    "ownerName": "Sample Text Data",
                    "accountId": 2,
                    "accountName": "Sample Text Data",
                    "contactId": 25,
                    "contactName": "Sample Text Data",
                    "invoiceId": 11,
                    "invoiceName": "Sample Text Data",
                    "orderStatusTypeId": 22,
                    "orderStatusTypeName": "Sample Text Data",
                    "companyName": "Acme Co.",
                    "externalIdentifier": "124567-23",
                    "completed": "2021-04-26T15:25:27.587Z",
                    "purchaseOrderNumber": "PO123454",
                    "totalAmountEstimate": 456.67,
                    "preAuthTransactionIdentifier": "236958",
                    "created": "2021-04-26T15:25:27.587Z",
                    "createdByUserId": 23,
                    "createdByUserName": "Sample Text Data",
                    "statusUpdated": "2021-04-26T15:25:27.587Z",
                    "priceBookId": 7,
                    "priceBookName": "Sample Text Data",
                    "accountContractId": 7,
                    "accountContractName": "Sample Text Data",
                    "discountPromoCodeId": 13,
                    "discountPromoCodeName": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Order objects."
          },
          {
            "name": "patchOrderById",
            "method": "PATCH",
            "path": "Order/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchOrderByIdResult",
              "description": "Returns patchOrderById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "order",
                      "instance": {
                        "identity": 1,
                        "ownerId": 22,
                        "ownerName": "Sample Text Data",
                        "accountId": 8,
                        "accountName": "Sample Text Data",
                        "contactId": 7,
                        "contactName": "Sample Text Data",
                        "invoiceId": 8,
                        "invoiceName": "Sample Text Data",
                        "orderStatusTypeId": 9,
                        "orderStatusTypeName": "Sample Text Data",
                        "companyName": "Acme Co.",
                        "externalIdentifier": "124567-23",
                        "completed": "2021-04-26T15:25:27.587Z",
                        "purchaseOrderNumber": "PO123454",
                        "totalAmountEstimate": 456.67,
                        "preAuthTransactionIdentifier": "236958",
                        "created": "2021-04-26T15:25:27.587Z",
                        "createdByUserId": 5,
                        "createdByUserName": "Sample Text Data",
                        "statusUpdated": "2021-04-26T15:25:27.587Z",
                        "priceBookId": 5,
                        "priceBookName": "Sample Text Data",
                        "accountContractId": 0,
                        "accountContractName": "Sample Text Data",
                        "discountPromoCodeId": 0,
                        "discountPromoCodeName": "Sample Text Data"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Order object."
              }
            ],
            "properties": {
              "details": {},
              "orders": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "accountId": 11,
                    "contactId": 16,
                    "invoiceId": 24,
                    "orderStatusTypeId": 23,
                    "companyName": "Acme Co.",
                    "externalIdentifier": "124567-23",
                    "completed": "2021-04-26T15:25:27.587Z",
                    "purchaseOrderNumber": "PO123454",
                    "totalAmountEstimate": 456.67,
                    "preAuthTransactionIdentifier": "236958",
                    "createdByUserId": 8,
                    "statusUpdated": "2021-04-26T15:25:27.587Z",
                    "priceBookId": 10,
                    "accountContractId": 23,
                    "discountPromoCodeId": 25
                  }
                ]
              }
            },
            "description": "Update or Add the Order object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Order/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "accountId": 25,
              "contactId": 4,
              "invoiceId": 8,
              "orderStatusTypeId": 23,
              "companyName": "Acme Co.",
              "externalIdentifier": "124567-23",
              "completed": "2021-04-26T15:25:27.587Z",
              "purchaseOrderNumber": "PO123454",
              "totalAmountEstimate": 456.67,
              "preAuthTransactionIdentifier": "236958",
              "createdByUserId": 1,
              "statusUpdated": "2021-04-26T15:25:27.587Z",
              "details": {
                "orderPackages": {
                  "items": [
                    {
                      "packageName": "DSL Package",
                      "packageFrequencyName": "DSL Package - 1 Month",
                      "quantity": 50
                    }
                  ]
                }
              }
            },
            "description": "Create a new instance of the Order object."
          },
          {
            "name": "createProcess",
            "method": "POST",
            "path": "Order/Process",
            "errors": [
              "InternalServerError",
              "Fail",
              "Required"
            ],
            "response": {
              "type": "ProcessResult",
              "description": "Returns createProcess information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data",
                      "priceChangeStatusTypeId": 0,
                      "priceChangeStatusTypeName": "Sample Text Data",
                      "priceBookId": 12,
                      "priceBookName": "Sample Text Data",
                      "effective": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "createdByUserId": 14,
                      "createdByUserName": "Sample Text Data",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "updatedByUserId": 10,
                      "updatedByUserName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1234,
              "billNow": true
            },
            "description": "Process an existing draft Order or re-process an existing failed Order. Optionally, the order can be billed immediately via billNow: true. Billing now is required if there are manual charges that need to be included, otherwise they are not billed."
          },
          {
            "name": "updateOrderById",
            "method": "PUT",
            "path": "Order/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "OrderByIdResult",
              "description": "Returns updateOrderById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 21,
                      "ownerName": "Sample Text Data",
                      "accountId": 13,
                      "accountName": "Sample Text Data",
                      "contactId": 2,
                      "contactName": "Sample Text Data",
                      "invoiceId": 4,
                      "invoiceName": "Sample Text Data",
                      "orderStatusTypeId": 27,
                      "orderStatusTypeName": "Sample Text Data",
                      "companyName": "Acme Co.",
                      "externalIdentifier": "124567-23",
                      "completed": "2021-04-26T15:25:27.587Z",
                      "purchaseOrderNumber": "PO123454",
                      "totalAmountEstimate": 456.67,
                      "preAuthTransactionIdentifier": "236958",
                      "created": "2021-04-26T15:25:27.587Z",
                      "createdByUserId": 12,
                      "createdByUserName": "Sample Text Data",
                      "statusUpdated": "2021-04-26T15:25:27.587Z",
                      "priceBookId": 13,
                      "priceBookName": "Sample Text Data",
                      "accountContractId": 6,
                      "accountContractName": "Sample Text Data",
                      "discountPromoCodeId": 2,
                      "discountPromoCodeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "accountId": 8,
              "contactId": 7,
              "invoiceId": 27,
              "orderStatusTypeId": 5,
              "companyName": "Acme Co.",
              "externalIdentifier": "124567-23",
              "completed": "2021-04-26T15:25:27.587Z",
              "purchaseOrderNumber": "PO123454",
              "totalAmountEstimate": 456.67,
              "preAuthTransactionIdentifier": "236958",
              "createdByUserId": 20,
              "statusUpdated": "2021-04-26T15:25:27.587Z",
              "priceBookId": 24,
              "accountContractId": 5,
              "discountPromoCodeId": 20
            },
            "description": "Update an existing instance of the Order object."
          }
        ]
      },
      {
        "name": "Note",
        "source_file": "Note",
        "endpoints": [
          {
            "name": "deleteNoteById",
            "method": "DELETE",
            "path": "Note/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "NoteByIdResult",
              "description": "Returns deleteNoteById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "note"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Note object."
              }
            ],
            "description": "Delete an instance of the Note object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Note/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Note objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Note/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Note objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getNoteById",
            "method": "GET",
            "path": "Note/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "NoteByIdResult",
              "description": "Returns getNoteById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "subject": "Delivery Instuctions",
                  "text": "Drop off at rear door.",
                  "noteTypeId": 21,
                  "noteTypeName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "createdByUserId": 27,
                  "createdByUserName": "Sample Text Data",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "updatedByUserId": 15,
                  "updatedByUserName": "Sample Text Data",
                  "showOnOverview": true,
                  "isImportant": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Note object."
              }
            ],
            "description": "Retrieve an instance of the Note object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Note/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "subject": "Delivery Instuctions",
              "text": "Drop off at rear door.",
              "noteTypeId": 24,
              "createdByUserId": 0,
              "updatedByUserId": 22,
              "showOnOverview": true,
              "isImportant": true
            },
            "description": "Create a new instance of the Note object."
          },
          {
            "name": "updateNoteById",
            "method": "PUT",
            "path": "Note/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "NoteByIdResult",
              "description": "Returns updateNoteById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "subject": "Delivery Instuctions",
                      "text": "Drop off at rear door.",
                      "noteTypeId": 22,
                      "noteTypeName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "createdByUserId": 8,
                      "createdByUserName": "Sample Text Data",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "updatedByUserId": 13,
                      "updatedByUserName": "Sample Text Data",
                      "showOnOverview": true,
                      "isImportant": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "subject": "Delivery Instuctions",
              "text": "Drop off at rear door.",
              "noteTypeId": 8,
              "createdByUserId": 9,
              "updatedByUserId": 14,
              "showOnOverview": true,
              "isImportant": true
            },
            "description": "Update an existing instance of the Note object."
          }
        ]
      },
      {
        "name": "Shareplantype",
        "source_file": "SharePlanType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "SharePlanType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the SharePlanType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "SharePlanType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the SharePlanType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getShareplantypeById",
            "method": "GET",
            "path": "SharePlanType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ShareplantypeByIdResult",
              "description": "Returns getShareplantypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Usage"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the SharePlanType object."
              }
            ],
            "description": "Retrieve an instance of the SharePlanType object by its ID."
          }
        ]
      },
      {
        "name": "Collectiontype",
        "source_file": "CollectionType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "CollectionType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the CollectionType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "CollectionType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the CollectionType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getCollectiontypeById",
            "method": "GET",
            "path": "CollectionType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CollectiontypeByIdResult",
              "description": "Returns getCollectiontypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Credit Card",
                  "sortOrder": 26
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CollectionType object."
              }
            ],
            "description": "Retrieve an instance of the CollectionType object by its ID."
          }
        ]
      },
      {
        "name": "Tax Vendor Type",
        "source_file": "Tax-Vendor-Type",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Tax/Vendor/Type/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TaxVendorType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Tax/Vendor/Type/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TaxVendorType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getTypeById",
            "method": "GET",
            "path": "Tax/Vendor/Type/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TypeByIdResult",
              "description": "Returns getTypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Avalara",
                  "sortOrder": 17
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the TaxVendorType object."
              }
            ],
            "description": "Retrieve an instance of the TaxVendorType object by its ID."
          }
        ]
      },
      {
        "name": "Usage Class",
        "source_file": "Usage-Class",
        "endpoints": [
          {
            "name": "deleteClassById",
            "method": "DELETE",
            "path": "Usage/Class/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ClassByIdResult",
              "description": "Returns deleteClassById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "usageClass"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageClass object."
              }
            ],
            "description": "Delete an instance of the UsageClass object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Usage/Class/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageClass objects."
          },
          {
            "name": "getUsagebaseunitid",
            "method": "GET",
            "path": "Usage/Class/AvailableFor/RateGroup/{id}/BaseUnit/{usageBaseUnitId}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "UsagebaseunitidResult",
              "description": "Returns getUsagebaseunitid information"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the RateGroup object."
              },
              {
                "name": "usageBaseUnitId",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the BaseUnit object."
              }
            ],
            "description": "For a given RateGroup and BaseUnit return the UsageClass objects that are available."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Usage/Class/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageClass objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getClassById",
            "method": "GET",
            "path": "Usage/Class/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ClassByIdResult",
              "description": "Returns getClassById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Roaming Voice",
                  "usageRaterTypeId": 7,
                  "usageRaterTypeName": "Sample Text Data",
                  "usageBaseUnitId": 12,
                  "usageBaseUnitName": "Sample Text Data",
                  "usageClassTypeId": 18,
                  "usageClassTypeName": "Sample Text Data",
                  "serviceTaxCategoryId": 3,
                  "serviceTaxCategoryName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "createdByUserId": 15,
                  "createdByUserName": "Sample Text Data",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "updatedByUserId": 17,
                  "updatedByUserName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageClass object."
              }
            ],
            "description": "Retrieve an instance of the UsageClass object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Usage/Class/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Roaming Voice",
              "usageRaterTypeId": 7,
              "usageBaseUnitId": 22,
              "usageClassTypeId": 23,
              "serviceTaxCategoryId": 18,
              "createdByUserId": 20,
              "updated": "2021-04-26T15:25:27.587Z",
              "updatedByUserId": 25
            },
            "description": "Create a new instance of the UsageClass object."
          },
          {
            "name": "updateClassById",
            "method": "PUT",
            "path": "Usage/Class/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ClassByIdResult",
              "description": "Returns updateClassById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Roaming Voice",
                      "usageRaterTypeId": 15,
                      "usageRaterTypeName": "Sample Text Data",
                      "usageBaseUnitId": 11,
                      "usageBaseUnitName": "Sample Text Data",
                      "usageClassTypeId": 3,
                      "usageClassTypeName": "Sample Text Data",
                      "serviceTaxCategoryId": 11,
                      "serviceTaxCategoryName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "createdByUserId": 19,
                      "createdByUserName": "Sample Text Data",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "updatedByUserId": 3,
                      "updatedByUserName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Roaming Voice",
              "usageRaterTypeId": 23,
              "usageBaseUnitId": 15,
              "usageClassTypeId": 11,
              "serviceTaxCategoryId": 14,
              "createdByUserId": 24,
              "updated": "2021-04-26T15:25:27.587Z",
              "updatedByUserId": 2
            },
            "description": "Update an existing instance of the UsageClass object."
          }
        ]
      },
      {
        "name": "Gatewaytype",
        "source_file": "GatewayType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "GatewayType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the GatewayType objects."
          },
          {
            "name": "getDetailsById",
            "method": "GET",
            "path": "GatewayType/Details/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailsByIdResult",
              "description": "Returns getDetailsById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Authorize.net",
                  "vendorGatewayTypeName": "authorize_net",
                  "paymentProviderId": 6,
                  "paymentProviderName": "Sample Text Data",
                  "details": {
                    "sampleSingleObject": {
                      "identity": 2,
                      "property1": "Sample Text",
                      "property2": "2021-04-26T15:25:29.117Z",
                      "property3": 2
                    },
                    "sampleMultipleObjects": {
                      "totalCount": 1,
                      "items": [
                        {
                          "identity": 2,
                          "property1": "Sample Text",
                          "property2": "2021-04-26T15:25:29.117Z",
                          "property3": 2
                        }
                      ]
                    }
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the GatewayType object."
              }
            ],
            "description": "Retrieve deep detail of the GatewayType object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "GatewayType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the GatewayType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getGatewaytypeById",
            "method": "GET",
            "path": "GatewayType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "GatewaytypeByIdResult",
              "description": "Returns getGatewaytypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Authorize.net",
                  "vendorGatewayTypeName": "authorize_net",
                  "paymentProviderId": 8,
                  "paymentProviderName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the GatewayType object."
              }
            ],
            "description": "Retrieve an instance of the GatewayType object by its ID."
          }
        ]
      },
      {
        "name": "Account Service Usage Bucket",
        "source_file": "Account-Service-Usage-Bucket",
        "endpoints": [
          {
            "name": "deleteBucketById",
            "method": "DELETE",
            "path": "Account/Service/Usage/Bucket/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BucketByIdResult",
              "description": "Returns deleteBucketById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "usageBucket"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountServiceUsageBucket object."
              }
            ],
            "description": "Delete an instance of the AccountServiceUsageBucket object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Account/Service/Usage/Bucket/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountServiceUsageBucket objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/Service/Usage/Bucket/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountServiceUsageBucket objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Account/Service/Usage/Bucket/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountServiceUsageBucket objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getBucketById",
            "method": "GET",
            "path": "Account/Service/Usage/Bucket/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BucketByIdResult",
              "description": "Returns getBucketById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 15,
                  "ownerName": "Sample Text Data",
                  "name": "100 minutes",
                  "prorate": true,
                  "isInfiniteLastTier": true,
                  "isThresholdPerAccountService": true,
                  "usageBucketRefillTypeId": 9,
                  "usageBucketRefillTypeName": "Sample Text Data",
                  "refillFrequency": 23,
                  "refillFrequencyTypeId": 12,
                  "refillFrequencyTypeName": "Sample Text Data",
                  "expireAfterFrequency": 22,
                  "expireAfterFrequencyTypeId": 10,
                  "expireAfterFrequencyTypeName": "Sample Text Data",
                  "isAssociatedWithSharePlan": true,
                  "expireAfterRecurrence": 20,
                  "accountPackageActivation": true,
                  "usageBucketBaseUnitId": 22,
                  "usageBucketBaseUnitName": "Sample Text Data",
                  "overageUsageRatePlanId": 12,
                  "overageUsageRatePlanName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountServiceUsageBucket object."
              }
            ],
            "description": "Retrieve an instance of the AccountServiceUsageBucket object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Account/Service/Usage/Bucket/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountServiceUsageBucket object."
              }
            ],
            "description": "Retrieve deep detail of the AccountServiceUsageBucket object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchBucketById",
            "method": "PATCH",
            "path": "Account/Service/Usage/Bucket/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchBucketByIdResult",
              "description": "Returns patchBucketById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "usageBucket",
                      "instance": {
                        "identity": 1,
                        "ownerId": 14,
                        "ownerName": "Sample Text Data",
                        "name": "100 minutes",
                        "prorate": true,
                        "isInfiniteLastTier": true,
                        "isThresholdPerAccountService": true,
                        "usageBucketRefillTypeId": 8,
                        "usageBucketRefillTypeName": "Sample Text Data",
                        "refillFrequency": 5,
                        "refillFrequencyTypeId": 0,
                        "refillFrequencyTypeName": "Sample Text Data",
                        "expireAfterFrequency": 19,
                        "expireAfterFrequencyTypeId": 17,
                        "expireAfterFrequencyTypeName": "Sample Text Data",
                        "isAssociatedWithSharePlan": true,
                        "expireAfterRecurrence": 4,
                        "accountPackageActivation": true,
                        "usageBucketBaseUnitId": 20,
                        "usageBucketBaseUnitName": "Sample Text Data",
                        "overageUsageRatePlanId": 5,
                        "overageUsageRatePlanName": "Sample Text Data"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountServiceUsageBucket object."
              }
            ],
            "properties": {
              "details": {},
              "accountServiceUsageBuckets": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "usageBucketId": 18,
                    "accountServiceId": "Sample Text Data",
                    "refillFrequencyTypeId": 27,
                    "isThresholdPerAccountService": true,
                    "usageBucketRefillTypeId": 17,
                    "expireAfterFrequencyTypeId": 6,
                    "overageUsageRatePlanId": 14
                  }
                ]
              }
            },
            "description": "Update or Add the AccountServiceUsageBucket object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Account/Service/Usage/Bucket/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "usageBucketId": 23,
              "accountServiceId": "Sample Text Data",
              "refillFrequencyTypeId": 4,
              "isThresholdPerAccountService": true,
              "usageBucketRefillTypeId": 25,
              "expireAfterFrequencyTypeId": 6,
              "overageUsageRatePlanId": 9
            },
            "description": "Create a new instance of the AccountServiceUsageBucket object."
          },
          {
            "name": "updateBucketById",
            "method": "PUT",
            "path": "Account/Service/Usage/Bucket/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BucketByIdResult",
              "description": "Returns updateBucketById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 17,
                      "ownerName": "Sample Text Data",
                      "name": "100 minutes",
                      "prorate": true,
                      "isInfiniteLastTier": true,
                      "isThresholdPerAccountService": true,
                      "usageBucketRefillTypeId": 18,
                      "usageBucketRefillTypeName": "Sample Text Data",
                      "refillFrequency": 21,
                      "refillFrequencyTypeId": 17,
                      "refillFrequencyTypeName": "Sample Text Data",
                      "expireAfterFrequency": 24,
                      "expireAfterFrequencyTypeId": 25,
                      "expireAfterFrequencyTypeName": "Sample Text Data",
                      "isAssociatedWithSharePlan": true,
                      "expireAfterRecurrence": 23,
                      "accountPackageActivation": true,
                      "usageBucketBaseUnitId": 4,
                      "usageBucketBaseUnitName": "Sample Text Data",
                      "overageUsageRatePlanId": 24,
                      "overageUsageRatePlanName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "usageBucketId": 22,
              "accountServiceId": "Sample Text Data",
              "refillFrequencyTypeId": 17,
              "isThresholdPerAccountService": true,
              "usageBucketRefillTypeId": 7,
              "expireAfterFrequencyTypeId": 2,
              "overageUsageRatePlanId": 26
            },
            "description": "Update an existing instance of the AccountServiceUsageBucket object."
          }
        ]
      },
      {
        "name": "Pricechangecriteriapricetype",
        "source_file": "PriceChangeCriteriaPriceType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "PriceChangeCriteriaPriceType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PriceChangeCriteriaPriceType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "PriceChangeCriteriaPriceType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PriceChangeCriteriaPriceType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getPricechangecriteriapricetypeById",
            "method": "GET",
            "path": "PriceChangeCriteriaPriceType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PricechangecriteriapricetypeByIdResult",
              "description": "Returns getPricechangecriteriapricetypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PriceChangeCriteriaPriceType object."
              }
            ],
            "description": "Retrieve an instance of the PriceChangeCriteriaPriceType object by its ID."
          }
        ]
      },
      {
        "name": "Tax Exempttype",
        "source_file": "Tax-ExemptType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Tax/ExemptType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TaxExemptType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Tax/ExemptType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TaxExemptType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getExempttypeById",
            "method": "GET",
            "path": "Tax/ExemptType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ExempttypeByIdResult",
              "description": "Returns getExempttypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Harmonized Sales Tax"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the TaxExemptType object."
              }
            ],
            "description": "Retrieve an instance of the TaxExemptType object by its ID."
          }
        ]
      },
      {
        "name": "Webhookformattype",
        "source_file": "WebhookFormatType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "WebhookFormatType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the WebhookFormatType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "WebhookFormatType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the WebhookFormatType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getWebhookformattypeById",
            "method": "GET",
            "path": "WebhookFormatType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "WebhookformattypeByIdResult",
              "description": "Returns getWebhookformattypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the WebhookFormatType object."
              }
            ],
            "description": "Retrieve an instance of the WebhookFormatType object by its ID."
          }
        ]
      },
      {
        "name": "Usage Bucket",
        "source_file": "Usage-Bucket",
        "endpoints": [
          {
            "name": "deleteBucketById",
            "method": "DELETE",
            "path": "Usage/Bucket/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BucketByIdResult",
              "description": "Returns deleteBucketById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "usageBucket"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageBucket object."
              }
            ],
            "description": "Delete an instance of the UsageBucket object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Usage/Bucket/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageBucket objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Usage/Bucket/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageBucket objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Usage/Bucket/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageBucket objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getBucketById",
            "method": "GET",
            "path": "Usage/Bucket/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BucketByIdResult",
              "description": "Returns getBucketById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 15,
                  "ownerName": "Sample Text Data",
                  "name": "100 minutes",
                  "prorate": true,
                  "isInfiniteLastTier": true,
                  "isThresholdPerAccountService": true,
                  "usageBucketRefillTypeId": 9,
                  "usageBucketRefillTypeName": "Sample Text Data",
                  "refillFrequency": 23,
                  "refillFrequencyTypeId": 12,
                  "refillFrequencyTypeName": "Sample Text Data",
                  "expireAfterFrequency": 22,
                  "expireAfterFrequencyTypeId": 10,
                  "expireAfterFrequencyTypeName": "Sample Text Data",
                  "isAssociatedWithSharePlan": true,
                  "expireAfterRecurrence": 20,
                  "accountPackageActivation": true,
                  "usageBucketBaseUnitId": 22,
                  "usageBucketBaseUnitName": "Sample Text Data",
                  "overageUsageRatePlanId": 12,
                  "overageUsageRatePlanName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageBucket object."
              }
            ],
            "description": "Retrieve an instance of the UsageBucket object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Usage/Bucket/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageBucket object."
              }
            ],
            "description": "Retrieve deep detail of the UsageBucket object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchBucketById",
            "method": "PATCH",
            "path": "Usage/Bucket/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchBucketByIdResult",
              "description": "Returns patchBucketById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "usageBucket",
                      "instance": {
                        "identity": 1,
                        "ownerId": 14,
                        "ownerName": "Sample Text Data",
                        "name": "100 minutes",
                        "prorate": true,
                        "isInfiniteLastTier": true,
                        "isThresholdPerAccountService": true,
                        "usageBucketRefillTypeId": 8,
                        "usageBucketRefillTypeName": "Sample Text Data",
                        "refillFrequency": 5,
                        "refillFrequencyTypeId": 0,
                        "refillFrequencyTypeName": "Sample Text Data",
                        "expireAfterFrequency": 19,
                        "expireAfterFrequencyTypeId": 17,
                        "expireAfterFrequencyTypeName": "Sample Text Data",
                        "isAssociatedWithSharePlan": true,
                        "expireAfterRecurrence": 4,
                        "accountPackageActivation": true,
                        "usageBucketBaseUnitId": 20,
                        "usageBucketBaseUnitName": "Sample Text Data",
                        "overageUsageRatePlanId": 5,
                        "overageUsageRatePlanName": "Sample Text Data"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageBucket object."
              }
            ],
            "properties": {
              "details": {},
              "usageBuckets": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "100 minutes",
                    "prorate": true,
                    "isInfiniteLastTier": true,
                    "isThresholdPerAccountService": true,
                    "usageBucketRefillTypeId": 20,
                    "refillFrequency": 25,
                    "refillFrequencyTypeId": 7,
                    "expireAfterFrequency": 26,
                    "expireAfterFrequencyTypeId": 17,
                    "isAssociatedWithSharePlan": true,
                    "expireAfterRecurrence": 25,
                    "accountPackageActivation": true,
                    "usageBucketBaseUnitId": 8,
                    "overageUsageRatePlanId": 17
                  }
                ]
              }
            },
            "description": "Update or Add the UsageBucket object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Usage/Bucket/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "100 minutes",
              "prorate": true,
              "isInfiniteLastTier": true,
              "isThresholdPerAccountService": true,
              "usageBucketRefillTypeId": 0,
              "refillFrequency": 6,
              "refillFrequencyTypeId": 25,
              "expireAfterFrequency": 18,
              "expireAfterFrequencyTypeId": 19,
              "isAssociatedWithSharePlan": true,
              "expireAfterRecurrence": 10,
              "accountPackageActivation": true,
              "usageBucketBaseUnitId": 9,
              "overageUsageRatePlanId": 3
            },
            "description": "Create a new instance of the UsageBucket object."
          },
          {
            "name": "updateBucketById",
            "method": "PUT",
            "path": "Usage/Bucket/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BucketByIdResult",
              "description": "Returns updateBucketById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 17,
                      "ownerName": "Sample Text Data",
                      "name": "100 minutes",
                      "prorate": true,
                      "isInfiniteLastTier": true,
                      "isThresholdPerAccountService": true,
                      "usageBucketRefillTypeId": 18,
                      "usageBucketRefillTypeName": "Sample Text Data",
                      "refillFrequency": 21,
                      "refillFrequencyTypeId": 17,
                      "refillFrequencyTypeName": "Sample Text Data",
                      "expireAfterFrequency": 24,
                      "expireAfterFrequencyTypeId": 25,
                      "expireAfterFrequencyTypeName": "Sample Text Data",
                      "isAssociatedWithSharePlan": true,
                      "expireAfterRecurrence": 23,
                      "accountPackageActivation": true,
                      "usageBucketBaseUnitId": 4,
                      "usageBucketBaseUnitName": "Sample Text Data",
                      "overageUsageRatePlanId": 24,
                      "overageUsageRatePlanName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "100 minutes",
              "prorate": true,
              "isInfiniteLastTier": true,
              "isThresholdPerAccountService": true,
              "usageBucketRefillTypeId": 15,
              "refillFrequency": 8,
              "refillFrequencyTypeId": 5,
              "expireAfterFrequency": 3,
              "expireAfterFrequencyTypeId": 23,
              "isAssociatedWithSharePlan": true,
              "expireAfterRecurrence": 19,
              "accountPackageActivation": true,
              "usageBucketBaseUnitId": 7,
              "overageUsageRatePlanId": 25
            },
            "description": "Update an existing instance of the UsageBucket object."
          }
        ]
      },
      {
        "name": "Tax Code",
        "source_file": "Tax-Code",
        "endpoints": [
          {
            "name": "deleteCodeById",
            "method": "DELETE",
            "path": "Tax/Code/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CodeByIdResult",
              "description": "Returns deleteCodeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "taxCode"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the TaxCode object."
              }
            ],
            "description": "Delete an instance of the TaxCode object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Tax/Code/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TaxCode objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Tax/Code/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TaxCode objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Tax/Code/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TaxCode objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getCodeById",
            "method": "GET",
            "path": "Tax/Code/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CodeByIdResult",
              "description": "Returns getCodeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "countryId": 1,
                  "countryName": "Sample Text Data",
                  "stateId": 7,
                  "stateName": "Sample Text Data",
                  "name": "Texas Taxes",
                  "ownerId": 5,
                  "ownerName": "Sample Text Data",
                  "accountTaxCategoryId": 13,
                  "accountTaxCategoryName": "Sample Text Data",
                  "serviceTaxCategoryId": 25,
                  "serviceTaxCategoryName": "Sample Text Data",
                  "taxVendorId": 6,
                  "taxVendorName": "Sample Text Data",
                  "isReverseVat": true,
                  "displayName": "State Taxes",
                  "isUsageTaxOnly": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the TaxCode object."
              }
            ],
            "description": "Retrieve an instance of the TaxCode object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Tax/Code/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the TaxCode object."
              }
            ],
            "description": "Retrieve deep detail of the TaxCode object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchCodeById",
            "method": "PATCH",
            "path": "Tax/Code/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchCodeByIdResult",
              "description": "Returns patchCodeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "taxCode",
                      "instance": {
                        "identity": 1,
                        "countryId": 21,
                        "countryName": "Sample Text Data",
                        "stateId": 3,
                        "stateName": "Sample Text Data",
                        "name": "Texas Taxes",
                        "ownerId": 1,
                        "ownerName": "Sample Text Data",
                        "accountTaxCategoryId": 13,
                        "accountTaxCategoryName": "Sample Text Data",
                        "serviceTaxCategoryId": 21,
                        "serviceTaxCategoryName": "Sample Text Data",
                        "taxVendorId": 22,
                        "taxVendorName": "Sample Text Data",
                        "isReverseVat": true,
                        "displayName": "State Taxes",
                        "isUsageTaxOnly": true
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the TaxCode object."
              }
            ],
            "properties": {
              "details": {},
              "taxCodes": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "countryId": 14,
                    "stateId": 27,
                    "name": "Texas Taxes",
                    "accountTaxCategoryId": 17,
                    "serviceTaxCategoryId": 11,
                    "taxVendorId": 16,
                    "isReverseVat": true,
                    "displayName": "State Taxes",
                    "isUsageTaxOnly": true
                  }
                ]
              }
            },
            "description": "Update or Add the TaxCode object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Tax/Code/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "countryId": 23,
              "stateId": 5,
              "name": "Texas Taxes",
              "accountTaxCategoryId": 21,
              "serviceTaxCategoryId": 20,
              "taxVendorId": 25,
              "isReverseVat": true,
              "displayName": "State Taxes",
              "isUsageTaxOnly": true
            },
            "description": "Create a new instance of the TaxCode object."
          },
          {
            "name": "updateCodeById",
            "method": "PUT",
            "path": "Tax/Code/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CodeByIdResult",
              "description": "Returns updateCodeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "countryId": 15,
                      "countryName": "Sample Text Data",
                      "stateId": 23,
                      "stateName": "Sample Text Data",
                      "name": "Texas Taxes",
                      "ownerId": 17,
                      "ownerName": "Sample Text Data",
                      "accountTaxCategoryId": 0,
                      "accountTaxCategoryName": "Sample Text Data",
                      "serviceTaxCategoryId": 7,
                      "serviceTaxCategoryName": "Sample Text Data",
                      "taxVendorId": 15,
                      "taxVendorName": "Sample Text Data",
                      "isReverseVat": true,
                      "displayName": "State Taxes",
                      "isUsageTaxOnly": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "countryId": 7,
              "stateId": 9,
              "name": "Texas Taxes",
              "accountTaxCategoryId": 11,
              "serviceTaxCategoryId": 10,
              "taxVendorId": 2,
              "isReverseVat": true,
              "displayName": "State Taxes",
              "isUsageTaxOnly": true
            },
            "description": "Update an existing instance of the TaxCode object."
          }
        ]
      },
      {
        "name": "Usage Class Dynamic",
        "source_file": "Usage-Class-Dynamic",
        "endpoints": [
          {
            "name": "deleteDynamicById",
            "method": "DELETE",
            "path": "Usage/Class/Dynamic/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DynamicByIdResult",
              "description": "Returns deleteDynamicById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "usageClassDynamic"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageClassDynamic object."
              }
            ],
            "description": "Delete an instance of the UsageClassDynamic object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Usage/Class/Dynamic/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageClassDynamic objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Usage/Class/Dynamic/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageClassDynamic objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Usage/Class/Dynamic/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageClassDynamic objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getDynamicById",
            "method": "GET",
            "path": "Usage/Class/Dynamic/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DynamicByIdResult",
              "description": "Returns getDynamicById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 4,
                  "ownerName": "Sample Text Data",
                  "name": "Roaming Voice",
                  "description": "Derrive if this record is in Roaming Voice.",
                  "isActive": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageClassDynamic object."
              }
            ],
            "description": "Retrieve an instance of the UsageClassDynamic object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Usage/Class/Dynamic/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageClassDynamic object."
              }
            ],
            "description": "Retrieve deep detail of the UsageClassDynamic object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchDynamicById",
            "method": "PATCH",
            "path": "Usage/Class/Dynamic/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchDynamicByIdResult",
              "description": "Returns patchDynamicById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "usageClassDynamic",
                      "instance": {
                        "identity": 1,
                        "ownerId": 26,
                        "ownerName": "Sample Text Data",
                        "name": "Roaming Voice",
                        "description": "Derrive if this record is in Roaming Voice.",
                        "isActive": true
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageClassDynamic object."
              }
            ],
            "properties": {
              "details": {},
              "usageClassDynamics": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "Roaming Voice",
                    "description": "Derrive if this record is in Roaming Voice.",
                    "isActive": true
                  }
                ]
              }
            },
            "description": "Update or Add the UsageClassDynamic object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Usage/Class/Dynamic/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Roaming Voice",
              "description": "Derrive if this record is in Roaming Voice.",
              "isActive": true
            },
            "description": "Create a new instance of the UsageClassDynamic object."
          },
          {
            "name": "updateDynamicById",
            "method": "PUT",
            "path": "Usage/Class/Dynamic/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DynamicByIdResult",
              "description": "Returns updateDynamicById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 15,
                      "ownerName": "Sample Text Data",
                      "name": "Roaming Voice",
                      "description": "Derrive if this record is in Roaming Voice.",
                      "isActive": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Roaming Voice",
              "description": "Derrive if this record is in Roaming Voice.",
              "isActive": true
            },
            "description": "Update an existing instance of the UsageClassDynamic object."
          }
        ]
      },
      {
        "name": "Geotree Location Pattern",
        "source_file": "GeoTree-Location-Pattern",
        "endpoints": [
          {
            "name": "deletePatternById",
            "method": "DELETE",
            "path": "GeoTree/Location/Pattern/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PatternByIdResult",
              "description": "Returns deletePatternById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "geoTreeLocationPattern"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the GeoTreeLocationPattern object."
              }
            ],
            "description": "Delete an instance of the GeoTreeLocationPattern object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "GeoTree/Location/Pattern/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the GeoTreeLocationPattern objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "GeoTree/Location/Pattern/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the GeoTreeLocationPattern objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getPatternById",
            "method": "GET",
            "path": "GeoTree/Location/Pattern/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PatternByIdResult",
              "description": "Returns getPatternById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "01",
                  "geoTreeLocationId": 14,
                  "geoTreeLocationName": "Sample Text Data",
                  "country": "US",
                  "state": "CA",
                  "city": "LA",
                  "lata": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the GeoTreeLocationPattern object."
              }
            ],
            "description": "Retrieve an instance of the GeoTreeLocationPattern object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "GeoTree/Location/Pattern/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "01",
              "geoTreeLocationId": 15,
              "country": "US",
              "state": "CA",
              "city": "LA",
              "lata": "Sample Text Data"
            },
            "description": "Create a new instance of the GeoTreeLocationPattern object."
          },
          {
            "name": "updatePatternById",
            "method": "PUT",
            "path": "GeoTree/Location/Pattern/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PatternByIdResult",
              "description": "Returns updatePatternById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "01",
                      "geoTreeLocationId": 20,
                      "geoTreeLocationName": "Sample Text Data",
                      "country": "US",
                      "state": "CA",
                      "city": "LA",
                      "lata": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "01",
              "geoTreeLocationId": 0,
              "country": "US",
              "state": "CA",
              "city": "LA",
              "lata": "Sample Text Data"
            },
            "description": "Update an existing instance of the GeoTreeLocationPattern object."
          }
        ]
      },
      {
        "name": "Paymentpreauthorize",
        "source_file": "PaymentPreAuthorize",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "PaymentPreAuthorize/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PaymentPreAuthorize objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "PaymentPreAuthorize/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PaymentPreAuthorize objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getPaymentpreauthorizeById",
            "method": "GET",
            "path": "PaymentPreAuthorize/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PaymentpreauthorizeByIdResult",
              "description": "Returns getPaymentpreauthorizeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "paymentMethodId": 2,
                  "paymentMethodName": "Sample Text Data",
                  "amount": 200.5,
                  "transactionToken": "123kjsf90832fwf",
                  "created": "2021-04-26T15:25:27.587Z",
                  "createdByUserId": 10,
                  "createdByUserName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PaymentPreAuthorize object."
              }
            ],
            "description": "Retrieve an instance of the PaymentPreAuthorize object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "PaymentPreAuthorize/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "paymentMethodId": 20,
              "amount": 200.5,
              "transactionToken": "123kjsf90832fwf",
              "createdByUserId": 4
            },
            "description": "Create a new instance of the PaymentPreAuthorize object. This will send a pre-authorization to the payment gateway for the specified payment method (uses the 'AutoPay' payment method if not specified)."
          },
          {
            "name": "createCapture",
            "method": "POST",
            "path": "PaymentPreAuthorize/Capture",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CaptureResult",
              "description": "Returns createCapture information"
            },
            "parameters": [],
            "properties": {},
            "description": "Performs a full 'Capture' for the pre-authorization transaction and creates the Payment."
          }
        ]
      },
      {
        "name": "Dayofweektype",
        "source_file": "DayOfWeekType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "DayOfWeekType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the DayOfWeekType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "DayOfWeekType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the DayOfWeekType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDayofweektypeById",
            "method": "GET",
            "path": "DayOfWeekType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DayofweektypeByIdResult",
              "description": "Returns getDayofweektypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Monday",
                  "sortOrder": 16
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the DayOfWeekType object."
              }
            ],
            "description": "Retrieve an instance of the DayOfWeekType object by its ID."
          }
        ]
      },
      {
        "name": "Payment Dunningrule",
        "source_file": "Payment-DunningRule",
        "endpoints": [
          {
            "name": "deleteDunningruleById",
            "method": "DELETE",
            "path": "Payment/DunningRule/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DunningruleByIdResult",
              "description": "Returns deleteDunningruleById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "paymentDunningRule"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PaymentDunningRule object."
              }
            ],
            "description": "Delete an instance of the PaymentDunningRule object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Payment/DunningRule/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PaymentDunningRule objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Payment/DunningRule/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PaymentDunningRule objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Payment/DunningRule/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PaymentDunningRule objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getDunningruleById",
            "method": "GET",
            "path": "Payment/DunningRule/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DunningruleByIdResult",
              "description": "Returns getDunningruleById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 15,
                  "ownerName": "Sample Text Data",
                  "name": "Apply Late Fee",
                  "isActive": true,
                  "minimumOverdue": 1456
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PaymentDunningRule object."
              }
            ],
            "description": "Retrieve an instance of the PaymentDunningRule object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Payment/DunningRule/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PaymentDunningRule object."
              }
            ],
            "description": "Retrieve deep detail of the PaymentDunningRule object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchDunningruleById",
            "method": "PATCH",
            "path": "Payment/DunningRule/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchDunningruleByIdResult",
              "description": "Returns patchDunningruleById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "paymentDunningRule",
                      "instance": {
                        "identity": 1,
                        "ownerId": 21,
                        "ownerName": "Sample Text Data",
                        "name": "Apply Late Fee",
                        "isActive": true,
                        "minimumOverdue": 1456
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PaymentDunningRule object."
              }
            ],
            "description": "Update or Add the PaymentDunningRule object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Payment/DunningRule/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Create a new instance of the PaymentDunningRule object."
          },
          {
            "name": "updateDunningruleById",
            "method": "PUT",
            "path": "Payment/DunningRule/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DunningruleByIdResult",
              "description": "Returns updateDunningruleById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 10,
                      "ownerName": "Sample Text Data",
                      "name": "Apply Late Fee",
                      "isActive": true,
                      "minimumOverdue": 1456
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Update an existing instance of the PaymentDunningRule object."
          }
        ]
      },
      {
        "name": "Account Taxcategory",
        "source_file": "Account-TaxCategory",
        "endpoints": [
          {
            "name": "deleteTaxcategoryById",
            "method": "DELETE",
            "path": "Account/TaxCategory/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TaxcategoryByIdResult",
              "description": "Returns deleteTaxcategoryById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "serviceTaxCategory"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountTaxCategory object."
              }
            ],
            "description": "Delete an instance of the AccountTaxCategory object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Account/TaxCategory/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountTaxCategory objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/TaxCategory/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountTaxCategory objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getTaxcategoryById",
            "method": "GET",
            "path": "Account/TaxCategory/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TaxcategoryByIdResult",
              "description": "Returns getTaxcategoryById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 10,
                  "ownerName": "Sample Text Data",
                  "name": "Land Line Taxable"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountTaxCategory object."
              }
            ],
            "description": "Retrieve an instance of the AccountTaxCategory object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Account/TaxCategory/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Default Tax Category"
            },
            "description": "Create a new instance of the AccountTaxCategory object."
          },
          {
            "name": "updateTaxcategoryById",
            "method": "PUT",
            "path": "Account/TaxCategory/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TaxcategoryByIdResult",
              "description": "Returns updateTaxcategoryById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 26,
                      "ownerName": "Sample Text Data",
                      "name": "Land Line Taxable"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Default Tax Category"
            },
            "description": "Update an existing instance of the AccountTaxCategory object."
          }
        ]
      },
      {
        "name": "Usage Rounding",
        "source_file": "Usage-Rounding",
        "endpoints": [
          {
            "name": "deleteRoundingById",
            "method": "DELETE",
            "path": "Usage/Rounding/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RoundingByIdResult",
              "description": "Returns deleteRoundingById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "usageRounding"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageRounding object."
              }
            ],
            "description": "Delete an instance of the UsageRounding object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Usage/Rounding/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageRounding objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Usage/Rounding/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageRounding objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getRoundingById",
            "method": "GET",
            "path": "Usage/Rounding/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RoundingByIdResult",
              "description": "Returns getRoundingById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Round Up 6/60",
                  "description": "Round up in increments of 60",
                  "minimum": 16,
                  "increment": 4,
                  "sortOrder": 18,
                  "usageUnitId": 8,
                  "usageUnitName": "Sample Text Data",
                  "isActive": true,
                  "ownerId": 13,
                  "ownerName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageRounding object."
              }
            ],
            "description": "Retrieve an instance of the UsageRounding object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Usage/Rounding/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Round Up 6/60",
              "description": "Round up in increments of 60",
              "minimum": 20,
              "increment": 3,
              "usageUnitId": 20,
              "isActive": true
            },
            "description": "Create a new instance of the UsageRounding object."
          },
          {
            "name": "updateRoundingById",
            "method": "PUT",
            "path": "Usage/Rounding/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RoundingByIdResult",
              "description": "Returns updateRoundingById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Round Up 6/60",
                      "description": "Round up in increments of 60",
                      "minimum": 9,
                      "increment": 21,
                      "sortOrder": 3,
                      "usageUnitId": 7,
                      "usageUnitName": "Sample Text Data",
                      "isActive": true,
                      "ownerId": 15,
                      "ownerName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Round Up 6/60",
              "description": "Round up in increments of 60",
              "minimum": 21,
              "increment": 13,
              "usageUnitId": 0,
              "isActive": true
            },
            "description": "Update an existing instance of the UsageRounding object."
          }
        ]
      },
      {
        "name": "Usageratedexceptionschedule",
        "source_file": "UsageRatedExceptionSchedule",
        "endpoints": [
          {
            "name": "createReprocess",
            "method": "POST",
            "path": "UsageRatedExceptionSchedule/Reprocess",
            "errors": [
              "InternalServerError",
              "Exception"
            ],
            "response": {
              "type": "ReprocessResult",
              "description": "Returns createReprocess information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 10,
                      "ownerName": "Sample Text Data",
                      "scheduledStart": "2021-04-26T15:25:27.587Z",
                      "start": "2021-04-26T15:25:27.587Z",
                      "complete": "2021-04-26T15:25:27.587Z",
                      "created": "2021-04-26T15:25:27.587Z",
                      "createdByUserId": 25,
                      "createdByUserName": "Sample Text Data",
                      "filterCriteria": "Sample Text Data",
                      "sentCount": "Sample Text Data",
                      "isDelete": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "scheduledStart": "2021-04-26T15:25:27.587Z",
              "start": "2021-04-26T15:25:27.587Z",
              "complete": "2021-04-26T15:25:27.587Z",
              "createdByUserId": 5,
              "filterCriteria": "Sample Text Data",
              "sentCount": "Sample Text Data",
              "isDelete": true
            },
            "description": "Create a new instance of the UsageRatedExceptionSchedule object."
          }
        ]
      },
      {
        "name": "Contact",
        "source_file": "Contact",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Contact/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Contact objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Contact/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Contact objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Contact/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Contact objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getContactById",
            "method": "GET",
            "path": "Contact/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ContactByIdResult",
              "description": "Returns getContactById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "contactTypeId": 11,
                  "contactTypeName": "Sample Text Data",
                  "title": "Mr.",
                  "firstName": "John",
                  "lastName": "Doe",
                  "isUsedForTax": true,
                  "updated": "2021-04-26T15:25:27.587Z"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Contact object."
              }
            ],
            "description": "Retrieve an instance of the Contact object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Contact/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Contact object."
              }
            ],
            "description": "Retrieve deep detail of the Contact object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchContactById",
            "method": "PATCH",
            "path": "Contact/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchContactByIdResult",
              "description": "Returns patchContactById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "contact",
                      "instance": {
                        "identity": 1,
                        "contactTypeId": 4,
                        "contactTypeName": "Sample Text Data",
                        "title": "Mr.",
                        "firstName": "John",
                        "lastName": "Doe",
                        "isUsedForTax": true,
                        "updated": "2021-04-26T15:25:27.587Z"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Contact object."
              }
            ],
            "properties": {
              "details": {},
              "contacts": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "contactTypeId": 18,
                    "title": "Mr.",
                    "firstName": "John",
                    "lastName": "Doe",
                    "isUsedForTax": true,
                    "updated": "2021-04-26T15:25:27.587Z"
                  }
                ]
              }
            },
            "description": "Update or Add the Contact object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Contact/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "contactTypeId": 12,
              "title": "Mr.",
              "firstName": "John",
              "lastName": "Doe",
              "isUsedForTax": true,
              "updated": "2021-04-26T15:25:27.587Z"
            },
            "description": "Create a new instance of the Contact object."
          },
          {
            "name": "updateContactById",
            "method": "PUT",
            "path": "Contact/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ContactByIdResult",
              "description": "Returns updateContactById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "contactTypeId": 21,
                      "contactTypeName": "Sample Text Data",
                      "title": "Mr.",
                      "firstName": "John",
                      "lastName": "Doe",
                      "isUsedForTax": true,
                      "updated": "2021-04-26T15:25:27.587Z"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "contactTypeId": 5,
              "title": "Mr.",
              "firstName": "John",
              "lastName": "Doe",
              "isUsedForTax": true,
              "updated": "2021-04-26T15:25:27.587Z"
            },
            "description": "Update an existing instance of the Contact object."
          }
        ]
      },
      {
        "name": "Schedule",
        "source_file": "Schedule",
        "endpoints": [
          {
            "name": "getDataexport",
            "method": "GET",
            "path": "Schedule/DataExport",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DataexportResult",
              "description": "Returns getDataexport information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "ownerId": 25,
                    "ownerName": "Sample Text Data",
                    "name": "Import Exception Retry",
                    "firstScheduleStart": "2021-04-26T15:25:27.587Z",
                    "scheduleEventTypeId": 21,
                    "scheduleEventTypeName": "Sample Text Data",
                    "scheduleStatusTypeId": 9,
                    "scheduleStatusTypeName": "Sample Text Data",
                    "frequency": "1",
                    "monthlyRecurTypeId": 12,
                    "monthlyRecurTypeName": "Sample Text Data",
                    "scheduleData": "Sample Text Data",
                    "scheduleFrequencyTypeId": 7,
                    "scheduleFrequencyTypeName": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Schedule objects."
          },
          {
            "name": "getRerate",
            "method": "GET",
            "path": "Schedule/Rerate",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RerateResult",
              "description": "Returns getRerate information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "ownerId": 11,
                    "ownerName": "Sample Text Data",
                    "name": "Import Exception Retry",
                    "firstScheduleStart": "2021-04-26T15:25:27.587Z",
                    "scheduleEventTypeId": 17,
                    "scheduleEventTypeName": "Sample Text Data",
                    "scheduleStatusTypeId": 4,
                    "scheduleStatusTypeName": "Sample Text Data",
                    "frequency": "1",
                    "monthlyRecurTypeId": 16,
                    "monthlyRecurTypeName": "Sample Text Data",
                    "scheduleData": "Sample Text Data",
                    "scheduleFrequencyTypeId": 8,
                    "scheduleFrequencyTypeName": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Schedule objects."
          },
          {
            "name": "createBillrun",
            "method": "POST",
            "path": "Schedule/BillRun",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BillrunResult",
              "description": "Returns createBillrun information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 10,
                      "ownerName": "Sample Text Data",
                      "name": "Import Exception Retry",
                      "firstScheduleStart": "2021-04-26T15:25:27.587Z",
                      "scheduleEventTypeId": 19,
                      "scheduleEventTypeName": "Sample Text Data",
                      "scheduleStatusTypeId": 12,
                      "scheduleStatusTypeName": "Sample Text Data",
                      "frequency": "1",
                      "monthlyRecurTypeId": 14,
                      "monthlyRecurTypeName": "Sample Text Data",
                      "scheduleData": "Sample Text Data",
                      "scheduleFrequencyTypeId": 1,
                      "scheduleFrequencyTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Import Exception Retry",
              "firstScheduleStart": "2021-04-26T15:25:27.587Z",
              "scheduleEventTypeId": 22,
              "scheduleStatusTypeId": 26,
              "frequency": "1",
              "monthlyRecurTypeId": 2,
              "scheduleData": "Sample Text Data",
              "scheduleFrequencyTypeId": 8
            },
            "description": "Create a new instance of the Schedule object."
          },
          {
            "name": "createDataexport",
            "method": "POST",
            "path": "Schedule/DataExport",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DataexportResult",
              "description": "Returns createDataexport information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 11,
                      "ownerName": "Sample Text Data",
                      "name": "Import Exception Retry",
                      "firstScheduleStart": "2021-04-26T15:25:27.587Z",
                      "scheduleEventTypeId": 12,
                      "scheduleEventTypeName": "Sample Text Data",
                      "scheduleStatusTypeId": 9,
                      "scheduleStatusTypeName": "Sample Text Data",
                      "frequency": "1",
                      "monthlyRecurTypeId": 11,
                      "monthlyRecurTypeName": "Sample Text Data",
                      "scheduleData": "Sample Text Data",
                      "scheduleFrequencyTypeId": 17,
                      "scheduleFrequencyTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Import Exception Retry",
              "firstScheduleStart": "2021-04-26T15:25:27.587Z",
              "scheduleEventTypeId": 3,
              "scheduleStatusTypeId": 10,
              "frequency": "1",
              "monthlyRecurTypeId": 2,
              "scheduleData": "Sample Text Data",
              "scheduleFrequencyTypeId": 6
            },
            "description": "Create a new instance of the Schedule object."
          },
          {
            "name": "createRerate",
            "method": "POST",
            "path": "Schedule/Rerate",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RerateResult",
              "description": "Returns createRerate information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 21,
                      "ownerName": "Sample Text Data",
                      "name": "Import Exception Retry",
                      "firstScheduleStart": "2021-04-26T15:25:27.587Z",
                      "scheduleEventTypeId": 24,
                      "scheduleEventTypeName": "Sample Text Data",
                      "scheduleStatusTypeId": 22,
                      "scheduleStatusTypeName": "Sample Text Data",
                      "frequency": "1",
                      "monthlyRecurTypeId": 8,
                      "monthlyRecurTypeName": "Sample Text Data",
                      "scheduleData": "Sample Text Data",
                      "scheduleFrequencyTypeId": 12,
                      "scheduleFrequencyTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Import Exception Retry",
              "firstScheduleStart": "2021-04-26T15:25:27.587Z",
              "scheduleEventTypeId": 24,
              "scheduleStatusTypeId": 20,
              "frequency": "1",
              "monthlyRecurTypeId": 17,
              "scheduleData": "Sample Text Data",
              "scheduleFrequencyTypeId": 0
            },
            "description": "Create a new instance of the Schedule object."
          },
          {
            "name": "updateDataexportById",
            "method": "PUT",
            "path": "Schedule/DataExport/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DataexportByIdResult",
              "description": "Returns updateDataexportById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 20,
                      "ownerName": "Sample Text Data",
                      "name": "Import Exception Retry",
                      "firstScheduleStart": "2021-04-26T15:25:27.587Z",
                      "scheduleEventTypeId": 3,
                      "scheduleEventTypeName": "Sample Text Data",
                      "scheduleStatusTypeId": 15,
                      "scheduleStatusTypeName": "Sample Text Data",
                      "frequency": "1",
                      "monthlyRecurTypeId": 18,
                      "monthlyRecurTypeName": "Sample Text Data",
                      "scheduleData": "Sample Text Data",
                      "scheduleFrequencyTypeId": 1,
                      "scheduleFrequencyTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Import Exception Retry",
              "firstScheduleStart": "2021-04-26T15:25:27.587Z",
              "scheduleEventTypeId": 15,
              "scheduleStatusTypeId": 5,
              "frequency": "1",
              "monthlyRecurTypeId": 3,
              "scheduleData": "Sample Text Data",
              "scheduleFrequencyTypeId": 23
            },
            "description": "Update an existing instance of the Schedule object."
          },
          {
            "name": "updateRerateById",
            "method": "PUT",
            "path": "Schedule/Rerate/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RerateByIdResult",
              "description": "Returns updateRerateById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 7,
                      "ownerName": "Sample Text Data",
                      "name": "Import Exception Retry",
                      "firstScheduleStart": "2021-04-26T15:25:27.587Z",
                      "scheduleEventTypeId": 17,
                      "scheduleEventTypeName": "Sample Text Data",
                      "scheduleStatusTypeId": 14,
                      "scheduleStatusTypeName": "Sample Text Data",
                      "frequency": "1",
                      "monthlyRecurTypeId": 23,
                      "monthlyRecurTypeName": "Sample Text Data",
                      "scheduleData": "Sample Text Data",
                      "scheduleFrequencyTypeId": 25,
                      "scheduleFrequencyTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Import Exception Retry",
              "firstScheduleStart": "2021-04-26T15:25:27.587Z",
              "scheduleEventTypeId": 19,
              "scheduleStatusTypeId": 14,
              "frequency": "1",
              "monthlyRecurTypeId": 11,
              "scheduleData": "Sample Text Data",
              "scheduleFrequencyTypeId": 14
            },
            "description": "Update an existing instance of the Schedule object."
          }
        ]
      },
      {
        "name": "Service Category",
        "source_file": "Service-Category",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Service/Category/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ServiceCategory objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Service/Category/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ServiceCategory objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getCategoryById",
            "method": "GET",
            "path": "Service/Category/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CategoryByIdResult",
              "description": "Returns getCategoryById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 5,
                  "ownerName": "Sample Text Data",
                  "name": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ServiceCategory object."
              }
            ],
            "description": "Retrieve an instance of the ServiceCategory object by its ID."
          }
        ]
      },
      {
        "name": "Tax Vendor Business Class",
        "source_file": "Tax-Vendor-Business-Class",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Tax/Vendor/Business/Class/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TaxVendorBusinessClass objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Tax/Vendor/Business/Class/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TaxVendorBusinessClass objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getClassById",
            "method": "GET",
            "path": "Tax/Vendor/Business/Class/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ClassByIdResult",
              "description": "Returns getClassById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Roaming Voice",
                  "usageRaterTypeId": 7,
                  "usageRaterTypeName": "Sample Text Data",
                  "usageBaseUnitId": 12,
                  "usageBaseUnitName": "Sample Text Data",
                  "usageClassTypeId": 18,
                  "usageClassTypeName": "Sample Text Data",
                  "serviceTaxCategoryId": 3,
                  "serviceTaxCategoryName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "createdByUserId": 15,
                  "createdByUserName": "Sample Text Data",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "updatedByUserId": 17,
                  "updatedByUserName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the TaxVendorBusinessClass object."
              }
            ],
            "description": "Retrieve an instance of the TaxVendorBusinessClass object by its ID."
          }
        ]
      },
      {
        "name": "Emailtemplate Type",
        "source_file": "EmailTemplate-Type",
        "endpoints": [
          {
            "name": "getAvailabletokens",
            "method": "GET",
            "path": "EmailTemplate/Type/{id}/AvailableTokens",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AvailabletokensResult",
              "description": "Returns getAvailabletokens information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the EmailTemplateType object."
              }
            ],
            "description": "Retrieve all of the AvailableTokens objects for the specified EmailTemplateType."
          }
        ]
      },
      {
        "name": "Account Service",
        "source_file": "Account-Service",
        "endpoints": [
          {
            "name": "deleteServiceById",
            "method": "DELETE",
            "path": "Account/Service/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ServiceByIdResult",
              "description": "Returns deleteServiceById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "service"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountService object."
              }
            ],
            "description": "Delete an instance of the AccountService object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Account/Service/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountService objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/Service/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountService objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Account/Service/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountService objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getUsageidentifierhistory",
            "method": "GET",
            "path": "Account/Service/UsageIdentifierHistory",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "UsageidentifierhistoryResult",
              "description": "Returns getUsageidentifierhistory information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "serviceId": 22,
                    "serviceName": "Sample Text Data",
                    "accountId": 25,
                    "accountName": "Sample Text Data",
                    "created": "2021-04-26T15:25:27.587Z",
                    "accountPackageId": "Sample Text Data",
                    "accountPackageName": "Sample Text Data",
                    "name": "Sample Text Data",
                    "amount": 25,
                    "updated": "2021-04-26T15:25:27.587Z",
                    "effective": "2021-04-26T15:25:27.587Z",
                    "posted": "2021-04-26T15:25:27.587Z",
                    "createdByUserId": 20,
                    "createdByUserName": "Sample Text Data",
                    "updatedByUserId": 15,
                    "updatedByUserName": "Sample Text Data",
                    "effectiveCancel": "2021-04-26T15:25:27.587Z",
                    "usageNextBill": "2021-04-26T15:25:27.587Z",
                    "usageFinalBill": "2021-04-26T15:25:27.587Z",
                    "finalBill": "2021-04-26T15:25:27.587Z",
                    "lastBilled": "2021-04-26T15:25:27.587Z",
                    "lastUsageBilled": "2021-04-26T15:25:27.587Z",
                    "addOnPackageFrequencyId": 1,
                    "addOnPackageFrequencyName": "Sample Text Data",
                    "billCancelOptionTypeId": 5,
                    "billCancelOptionTypeName": "Sample Text Data",
                    "isTaxInclusive": true,
                    "serviceTaxCategoryId": 0,
                    "serviceTaxCategoryName": "Sample Text Data",
                    "importLastUsageBilled": "2021-04-26T15:25:27.587Z",
                    "id": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve account services that match a search prefix parameter."
          },
          {
            "name": "getServiceById",
            "method": "GET",
            "path": "Account/Service/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ServiceByIdResult",
              "description": "Returns getServiceById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Activation Fee",
                  "ownerId": 2,
                  "ownerName": "Sample Text Data",
                  "serviceTypeId": 3,
                  "serviceTypeName": "Sample Text Data",
                  "usageFrequency": 13,
                  "usageFrequencyTypeId": 23,
                  "usageFrequencyTypeName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "isActive": true,
                  "isTaxExempt": true,
                  "isTaxInclusive": true,
                  "generalLedgerId": 17,
                  "generalLedgerName": "Sample Text Data",
                  "taxCodeId": 23,
                  "taxCodeName": "Sample Text Data",
                  "serviceTaxCategoryId": 21,
                  "serviceTaxCategoryName": "Sample Text Data",
                  "defaultServiceStatusTypeId": 3,
                  "defaultServiceStatusTypeName": "Sample Text Data",
                  "serviceCategoryId": 20,
                  "serviceCategoryName": "Sample Text Data",
                  "description": "One time charge for activation",
                  "id": 24
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountService object."
              }
            ],
            "description": "Retrieve an instance of the AccountService object by its ID."
          },
          {
            "name": "getCurrent",
            "method": "GET",
            "path": "Account/Service/{id}/Current",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CurrentResult",
              "description": "Returns getCurrent information"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountService object."
              }
            ],
            "description": "Returns the most recent status of the AccountService."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Account/Service/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountService object."
              }
            ],
            "description": "Retrieve deep detail of the AccountService object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchServiceById",
            "method": "PATCH",
            "path": "Account/Service/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchServiceByIdResult",
              "description": "Returns patchServiceById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "service",
                      "instance": {
                        "identity": 1,
                        "name": "Activation Fee",
                        "ownerId": 15,
                        "ownerName": "Sample Text Data",
                        "serviceTypeId": 10,
                        "serviceTypeName": "Sample Text Data",
                        "usageFrequency": 21,
                        "usageFrequencyTypeId": 25,
                        "usageFrequencyTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "isActive": true,
                        "isTaxExempt": true,
                        "isTaxInclusive": true,
                        "generalLedgerId": 8,
                        "generalLedgerName": "Sample Text Data",
                        "taxCodeId": 6,
                        "taxCodeName": "Sample Text Data",
                        "serviceTaxCategoryId": 19,
                        "serviceTaxCategoryName": "Sample Text Data",
                        "defaultServiceStatusTypeId": 15,
                        "defaultServiceStatusTypeName": "Sample Text Data",
                        "serviceCategoryId": 9,
                        "serviceCategoryName": "Sample Text Data",
                        "description": "One time charge for activation",
                        "id": 21
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountService object."
              }
            ],
            "properties": {
              "details": {},
              "accountServices": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "serviceId": 1,
                    "accountId": 3,
                    "accountPackageId": "Sample Text Data",
                    "name": "Sample Text Data",
                    "amount": 17,
                    "updated": "2021-04-26T15:25:27.587Z",
                    "effective": "2021-04-26T15:25:27.587Z",
                    "posted": "2021-04-26T15:25:27.587Z",
                    "createdByUserId": 24,
                    "updatedByUserId": 4,
                    "effectiveCancel": "2021-04-26T15:25:27.587Z",
                    "addOnPackageFrequencyId": 16,
                    "billCancelOptionTypeId": 17,
                    "isTaxInclusive": true,
                    "serviceTaxCategoryId": 0,
                    "importLastUsageBilled": "2021-04-26T15:25:27.587Z",
                    "id": "Sample Text Data"
                  }
                ]
              }
            },
            "description": "Update or Add the AccountService object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Account/Service/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "serviceId": 17,
              "accountId": 4,
              "accountPackageId": "Sample Text Data",
              "name": "Sample Text Data",
              "amount": 15,
              "updated": "2021-04-26T15:25:27.587Z",
              "effective": "2021-04-26T15:25:27.587Z",
              "posted": "2021-04-26T15:25:27.587Z",
              "createdByUserId": 27,
              "updatedByUserId": 11,
              "effectiveCancel": "2021-04-26T15:25:27.587Z",
              "addOnPackageFrequencyId": 9,
              "billCancelOptionTypeId": 8,
              "isTaxInclusive": true,
              "serviceTaxCategoryId": 19,
              "importLastUsageBilled": "2021-04-26T15:25:27.587Z",
              "id": "Sample Text Data"
            },
            "description": "Create a new instance of the AccountService object."
          },
          {
            "name": "updateServiceById",
            "method": "PUT",
            "path": "Account/Service/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ServiceByIdResult",
              "description": "Returns updateServiceById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Activation Fee",
                      "ownerId": 2,
                      "ownerName": "Sample Text Data",
                      "serviceTypeId": 9,
                      "serviceTypeName": "Sample Text Data",
                      "usageFrequency": 21,
                      "usageFrequencyTypeId": 8,
                      "usageFrequencyTypeName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "isActive": true,
                      "isTaxExempt": true,
                      "isTaxInclusive": true,
                      "generalLedgerId": 6,
                      "generalLedgerName": "Sample Text Data",
                      "taxCodeId": 10,
                      "taxCodeName": "Sample Text Data",
                      "serviceTaxCategoryId": 22,
                      "serviceTaxCategoryName": "Sample Text Data",
                      "defaultServiceStatusTypeId": 27,
                      "defaultServiceStatusTypeName": "Sample Text Data",
                      "serviceCategoryId": 0,
                      "serviceCategoryName": "Sample Text Data",
                      "description": "One time charge for activation",
                      "id": 27
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "serviceId": 25,
              "accountId": 8,
              "accountPackageId": "Sample Text Data",
              "name": "Sample Text Data",
              "amount": 18,
              "updated": "2021-04-26T15:25:27.587Z",
              "effective": "2021-04-26T15:25:27.587Z",
              "posted": "2021-04-26T15:25:27.587Z",
              "createdByUserId": 2,
              "updatedByUserId": 7,
              "effectiveCancel": "2021-04-26T15:25:27.587Z",
              "addOnPackageFrequencyId": 1,
              "billCancelOptionTypeId": 5,
              "isTaxInclusive": true,
              "serviceTaxCategoryId": 9,
              "importLastUsageBilled": "2021-04-26T15:25:27.587Z",
              "id": "Sample Text Data"
            },
            "description": "Update an existing instance of the AccountService object."
          }
        ]
      },
      {
        "name": "Paymentmethod",
        "source_file": "PaymentMethod",
        "endpoints": [
          {
            "name": "deletePaymentmethodById",
            "method": "DELETE",
            "path": "PaymentMethod/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PaymentmethodByIdResult",
              "description": "Returns deletePaymentmethodById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "paymentMethod"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PaymentMethod object."
              }
            ],
            "description": "Delete an instance of the PaymentMethod object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "PaymentMethod/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PaymentMethod objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "PaymentMethod/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PaymentMethod objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getPaymentmethodById",
            "method": "GET",
            "path": "PaymentMethod/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PaymentmethodByIdResult",
              "description": "Returns getPaymentmethodById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 10,
                  "ownerName": "Sample Text Data",
                  "name": "Corporate AMEX",
                  "paymentTypeId": 9,
                  "paymentTypeName": "Sample Text Data",
                  "accountId": 6,
                  "accountName": "Sample Text Data",
                  "description": "This is the main corporate credit card",
                  "paymentMethodIdentifier": "XXXX-XXXX-XXXX-1111",
                  "isActive": true,
                  "autopay": true,
                  "transactionToken": "WuJNFtr3HYNWHAVKvflOhOT2JCF",
                  "attributes": "Sample Text Data",
                  "paymentProviderId": 17,
                  "paymentProviderName": "Sample Text Data",
                  "paymentMethodToken": "127dfh72y3gg",
                  "cardExpiration": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PaymentMethod object."
              }
            ],
            "description": "Retrieve an instance of the PaymentMethod object by its ID."
          },
          {
            "name": "createBankaccount",
            "method": "POST",
            "path": "PaymentMethod/BankAccount",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BankaccountResult",
              "description": "Returns createBankaccount information"
            },
            "parameters": [],
            "properties": {},
            "description": "Create a Debit type of PaymentMethod."
          },
          {
            "name": "createCreditcard",
            "method": "POST",
            "path": "PaymentMethod/CreditCard",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CreditcardResult",
              "description": "Returns createCreditcard information"
            },
            "parameters": [],
            "properties": {},
            "description": "Create a Credit Card type of Payment Method. Used in conjunction with the Spreedly Hosted Payment Page that will tokenize the card info for PCI compliance."
          },
          {
            "name": "createImport",
            "method": "POST",
            "path": "PaymentMethod/Import",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ImportResult",
              "description": "Returns createImport information"
            },
            "parameters": [],
            "properties": {},
            "description": "Used to Import PaymentMethod objects that have already been created and persisted in Spreedly."
          },
          {
            "name": "createSync",
            "method": "POST",
            "path": "PaymentMethod/Import/Sync",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "SyncResult",
              "description": "Returns createSync information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 4,
                      "ownerName": "Sample Text Data",
                      "name": "Corporate AMEX",
                      "paymentTypeId": 1,
                      "paymentTypeName": "Sample Text Data",
                      "accountId": 12,
                      "accountName": "Sample Text Data",
                      "description": "This is the main corporate credit card",
                      "paymentMethodIdentifier": "XXXX-XXXX-XXXX-1111",
                      "isActive": true,
                      "autopay": true,
                      "transactionToken": "WuJNFtr3HYNWHAVKvflOhOT2JCF",
                      "attributes": "Sample Text Data",
                      "paymentProviderId": 24,
                      "paymentProviderName": "Sample Text Data",
                      "paymentMethodToken": "127dfh72y3gg",
                      "cardExpiration": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Corporate AMEX",
              "paymentTypeId": 6,
              "accountId": 26,
              "description": "This is the main corporate credit card",
              "paymentMethodIdentifier": "XXXX-XXXX-XXXX-1111",
              "isActive": true,
              "autopay": true,
              "transactionToken": "WuJNFtr3HYNWHAVKvflOhOT2JCF",
              "attributes": "Sample Text Data",
              "paymentProviderId": 21,
              "paymentMethodToken": "127dfh72y3gg",
              "cardExpiration": "Sample Text Data"
            },
            "description": "Used to Import PaymentMethod objects that have already been created and persisted in Spreedly."
          },
          {
            "name": "createSetasdefault",
            "method": "POST",
            "path": "PaymentMethod/{id}/SetAsDefault",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "SetasdefaultResult",
              "description": "Returns createSetasdefault information"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PaymentMethod object."
              }
            ],
            "properties": {},
            "description": "Sets the 'AutoPay' to be true for the specified Payment Method. This will automatically turn off 'AutoPay' on any other PaymentMethod for the account. Setting the 'Default' enables AutoPay for the account during billing. It will also present itself as a default payment method in the dropdown list in the Customer Portal."
          },
          {
            "name": "updatePaymentmethodById",
            "method": "PUT",
            "path": "PaymentMethod/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PaymentmethodByIdResult",
              "description": "Returns updatePaymentmethodById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 19,
                      "ownerName": "Sample Text Data",
                      "name": "Corporate AMEX",
                      "paymentTypeId": 0,
                      "paymentTypeName": "Sample Text Data",
                      "accountId": 25,
                      "accountName": "Sample Text Data",
                      "description": "This is the main corporate credit card",
                      "paymentMethodIdentifier": "XXXX-XXXX-XXXX-1111",
                      "isActive": true,
                      "autopay": true,
                      "transactionToken": "WuJNFtr3HYNWHAVKvflOhOT2JCF",
                      "attributes": "Sample Text Data",
                      "paymentProviderId": 24,
                      "paymentProviderName": "Sample Text Data",
                      "paymentMethodToken": "127dfh72y3gg",
                      "cardExpiration": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Corporate AMEX",
              "paymentTypeId": 12,
              "accountId": 11,
              "description": "This is the main corporate credit card",
              "paymentMethodIdentifier": "XXXX-XXXX-XXXX-1111",
              "isActive": true,
              "autopay": true,
              "transactionToken": "WuJNFtr3HYNWHAVKvflOhOT2JCF",
              "attributes": "Sample Text Data",
              "paymentProviderId": 1,
              "paymentMethodToken": "127dfh72y3gg",
              "cardExpiration": "Sample Text Data"
            },
            "description": "Update an existing instance of the PaymentMethod object."
          }
        ]
      },
      {
        "name": "Locale",
        "source_file": "Locale",
        "endpoints": [
          {
            "name": "deleteLocaleById",
            "method": "DELETE",
            "path": "Locale/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "LocaleByIdResult",
              "description": "Returns deleteLocaleById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "locale"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Locale object."
              }
            ],
            "description": "Delete an instance of the Locale object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Locale/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Locale objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Locale/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Locale objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getLocaleById",
            "method": "GET",
            "path": "Locale/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "LocaleByIdResult",
              "description": "Returns getLocaleById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "English",
                  "ownerId": 5,
                  "ownerName": "Sample Text Data",
                  "sortOrder": 20,
                  "localeIdentifier": "EN"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Locale object."
              }
            ],
            "description": "Retrieve an instance of the Locale object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Locale/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {},
            "description": "Create a new instance of the Locale object."
          },
          {
            "name": "updateLocaleById",
            "method": "PUT",
            "path": "Locale/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "LocaleByIdResult",
              "description": "Returns updateLocaleById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "English",
                      "ownerId": 19,
                      "ownerName": "Sample Text Data",
                      "sortOrder": 1,
                      "localeIdentifier": "EN"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1
            },
            "description": "Update an existing instance of the Locale object."
          }
        ]
      },
      {
        "name": "Billrun Statustype",
        "source_file": "BillRun-StatusType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "BillRun/StatusType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the BillRunStatusType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "BillRun/StatusType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the BillRunStatusType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getStatustypeById",
            "method": "GET",
            "path": "BillRun/StatusType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "StatustypeByIdResult",
              "description": "Returns getStatustypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Active",
                  "ownerId": 16,
                  "ownerName": "Sample Text Data",
                  "statusTypeId": 14,
                  "statusTypeName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the BillRunStatusType object."
              }
            ],
            "description": "Retrieve an instance of the BillRunStatusType object by its ID."
          }
        ]
      },
      {
        "name": "Pricebook Region",
        "source_file": "PriceBook-Region",
        "endpoints": [
          {
            "name": "deleteRegionById",
            "method": "DELETE",
            "path": "PriceBook/Region/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RegionByIdResult",
              "description": "Returns deleteRegionById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "priceBookRegion"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PriceBookRegion object."
              }
            ],
            "description": "Delete an instance of the PriceBookRegion object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "PriceBook/Region/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PriceBookRegion objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "PriceBook/Region/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PriceBookRegion objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "PriceBook/Region/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PriceBookRegion objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getRegionById",
            "method": "GET",
            "path": "PriceBook/Region/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RegionByIdResult",
              "description": "Returns getRegionById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 0,
                  "ownerName": "Sample Text Data",
                  "name": "Zone 1",
                  "description": "Sample Text Data",
                  "isActive": true,
                  "created": "2021-04-26T15:25:27.587Z"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PriceBookRegion object."
              }
            ],
            "description": "Retrieve an instance of the PriceBookRegion object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "PriceBook/Region/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PriceBookRegion object."
              }
            ],
            "description": "Retrieve deep detail of the PriceBookRegion object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchRegionById",
            "method": "PATCH",
            "path": "PriceBook/Region/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchRegionByIdResult",
              "description": "Returns patchRegionById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "priceBookRegion",
                      "instance": {
                        "identity": 1,
                        "ownerId": 19,
                        "ownerName": "Sample Text Data",
                        "name": "Zone 1",
                        "description": "Sample Text Data",
                        "isActive": true,
                        "created": "2021-04-26T15:25:27.587Z"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PriceBookRegion object."
              }
            ],
            "properties": {
              "details": {},
              "priceBookRegions": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "Zone 1",
                    "description": "Sample Text Data",
                    "isActive": true
                  }
                ]
              }
            },
            "description": "Update or Add the PriceBookRegion object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "PriceBook/Region/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Zone 1",
              "description": "Sample Text Data",
              "isActive": true
            },
            "description": "Create a new instance of the PriceBookRegion object."
          },
          {
            "name": "updateRegionById",
            "method": "PUT",
            "path": "PriceBook/Region/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RegionByIdResult",
              "description": "Returns updateRegionById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 9,
                      "ownerName": "Sample Text Data",
                      "name": "Zone 1",
                      "description": "Sample Text Data",
                      "isActive": true,
                      "created": "2021-04-26T15:25:27.587Z"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Zone 1",
              "description": "Sample Text Data",
              "isActive": true
            },
            "description": "Update an existing instance of the PriceBookRegion object."
          }
        ]
      },
      {
        "name": "Dailyusageratedexception",
        "source_file": "DailyUsageRatedException",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "DailyUsageRatedException/",
            "errors": [
              "InternalServerError",
              "Exception"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the DailyUsageRatedException objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "DailyUsageRatedException/Paged",
            "errors": [
              "InternalServerError",
              "Exception"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the DailyUsageRatedException objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          }
        ]
      },
      {
        "name": "Account Contract Tracking Commitment Invoice",
        "source_file": "Account-Contract-Tracking-Commitment-Invoice",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Account/Contract/Tracking/Commitment/Invoice/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountContractTrackingCommitmentInvoice objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/Contract/Tracking/Commitment/Invoice/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountContractTrackingCommitmentInvoice objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getInvoiceById",
            "method": "GET",
            "path": "Account/Contract/Tracking/Commitment/Invoice/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "InvoiceByIdResult",
              "description": "Returns getInvoiceById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "accountId": 9,
                  "accountName": "Sample Text Data",
                  "name": "Sample Text Data",
                  "date": "2021-04-26T15:25:27.587Z",
                  "sent": "2021-04-26T15:25:27.587Z",
                  "due": "2021-04-26T15:25:27.587Z",
                  "lastChecked": "2021-04-26T15:25:27.587Z",
                  "invoiceStatusTypeId": 1,
                  "invoiceStatusTypeName": "Sample Text Data",
                  "processed": "2021-04-26T15:25:27.587Z",
                  "billRunHistoryId": 27,
                  "billRunHistoryName": "Sample Text Data",
                  "previousBalance": 102.52,
                  "balance": 202.52,
                  "created": "2021-04-26T15:25:27.587Z",
                  "closed": "2021-04-26T15:25:27.587Z",
                  "total": 100.15,
                  "totalCharge": 100.15,
                  "totalTax": 12.15,
                  "totalDiscount": 10.36,
                  "totalPaymentApplied": 12.36,
                  "totalCreditApplied": 11.36,
                  "totalPaymentAttached": 7.36,
                  "totalCreditAttached": 5.34,
                  "baseTotal": 100.15,
                  "baseTotalCharge": 100.15,
                  "baseTotalDiscount": 10.36,
                  "baseTotalPaymentApplied": 12.36,
                  "baseTotalCreditApplied": 11.36,
                  "baseTotalPaymentAttached": 7.36,
                  "baseTotalCreditAttached": 5.34,
                  "baseBalance": 5.34,
                  "baseTotalTax": 12.15,
                  "basePreviousBalance": 102.52,
                  "isVoid": true,
                  "isVoiding": true,
                  "doNotDeliver": true,
                  "updated": "2021-04-26T15:25:27.587Z"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountContractTrackingCommitmentInvoice object."
              }
            ],
            "description": "Retrieve an instance of the AccountContractTrackingCommitmentInvoice object by its ID."
          }
        ]
      },
      {
        "name": "Applicationversion",
        "source_file": "ApplicationVersion",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "ApplicationVersion/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve the current system version number."
          }
        ]
      },
      {
        "name": "Udr Usagebucket",
        "source_file": "Udr-UsageBucket",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Udr/UsageBucket/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UDRUsageBucket objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Udr/UsageBucket/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UDRUsageBucket objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getUsagebucketById",
            "method": "GET",
            "path": "Udr/UsageBucket/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "UsagebucketByIdResult",
              "description": "Returns getUsagebucketById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "accountServiceUsageBucketId": 3,
                  "accountServiceUsageBucketName": "Sample Text Data",
                  "amount": 4,
                  "start": "2021-04-26T15:25:27.587Z",
                  "end": "2021-04-26T15:25:27.587Z",
                  "created": "2021-04-26T15:25:27.587Z"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UDRUsageBucket object."
              }
            ],
            "description": "Retrieve an instance of the UDRUsageBucket object by its ID."
          }
        ]
      },
      {
        "name": "Account Contract Api",
        "source_file": "Account_Contract_api.json",
        "endpoints": [
          {
            "name": "deleteContractById",
            "method": "DELETE",
            "path": "Account/Contract/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ContractByIdResult",
              "description": "Returns deleteContractById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "accountContract"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountContract object."
              }
            ],
            "description": "Delete an instance of the AccountContract object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Account/Contract/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountContract objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/Contract/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountContract objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Account/Contract/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountContract objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getContractById",
            "method": "GET",
            "path": "Account/Contract/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ContractByIdResult",
              "description": "Returns getContractById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 3,
                  "ownerName": "Sample Text Data",
                  "name": "My Contract",
                  "accountId": 20,
                  "accountName": "Sample Text Data",
                  "accountContractStatusTypeId": 15,
                  "accountContractStatusTypeName": "Sample Text Data",
                  "start": "2021-04-26T15:25:27.587Z",
                  "frequency": 3,
                  "frequencyTypeId": 8,
                  "frequencyTypeName": "Sample Text Data",
                  "accountContractRenewalTypeId": 9,
                  "accountContractRenewalTypeName": "Sample Text Data",
                  "renewalAccountContractId": 2,
                  "renewalAccountContractName": "Sample Text Data",
                  "contractTerminationId": 15,
                  "contractTerminationName": "Sample Text Data",
                  "terminationAccountContractStatusTypeId": 24,
                  "terminationAccountContractStatusTypeName": "Sample Text Data",
                  "renewalAccountContractStatusTypeId": 10,
                  "renewalAccountContractStatusTypeName": "Sample Text Data",
                  "earlyTermination": "2021-04-26T15:25:27.587Z",
                  "earlyTerminationComment": "Sample Text Data",
                  "termTypeId": 19,
                  "termTypeName": "Sample Text Data",
                  "extendedStart": "2021-04-26T15:25:27.587Z",
                  "version": 2,
                  "isSynchronousBilling": true,
                  "billingFrequency": 8,
                  "billingFrequencyTypeId": 25,
                  "billingFrequencyTypeName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountContract object."
              }
            ],
            "description": "Retrieve an instance of the AccountContract object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Account/Contract/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountContract object."
              }
            ],
            "description": "Retrieve deep detail of the AccountContract object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchContractById",
            "method": "PATCH",
            "path": "Account/Contract/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchContractByIdResult",
              "description": "Returns patchContractById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "accountContract",
                      "instance": {
                        "identity": 1,
                        "ownerId": 3,
                        "ownerName": "Sample Text Data",
                        "name": "My Contract",
                        "accountId": 27,
                        "accountName": "Sample Text Data",
                        "accountContractStatusTypeId": 0,
                        "accountContractStatusTypeName": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "frequency": 16,
                        "frequencyTypeId": 9,
                        "frequencyTypeName": "Sample Text Data",
                        "accountContractRenewalTypeId": 2,
                        "accountContractRenewalTypeName": "Sample Text Data",
                        "renewalAccountContractId": 18,
                        "renewalAccountContractName": "Sample Text Data",
                        "contractTerminationId": 10,
                        "contractTerminationName": "Sample Text Data",
                        "terminationAccountContractStatusTypeId": 17,
                        "terminationAccountContractStatusTypeName": "Sample Text Data",
                        "renewalAccountContractStatusTypeId": 8,
                        "renewalAccountContractStatusTypeName": "Sample Text Data",
                        "earlyTermination": "2021-04-26T15:25:27.587Z",
                        "earlyTerminationComment": "Sample Text Data",
                        "termTypeId": 8,
                        "termTypeName": "Sample Text Data",
                        "extendedStart": "2021-04-26T15:25:27.587Z",
                        "version": 1,
                        "isSynchronousBilling": true,
                        "billingFrequency": 27,
                        "billingFrequencyTypeId": 4,
                        "billingFrequencyTypeName": "Sample Text Data"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountContract object."
              }
            ],
            "properties": {
              "details": {},
              "accountContracts": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "My Contract",
                    "accountId": 25,
                    "accountContractStatusTypeId": 9,
                    "start": "2021-04-26T15:25:27.587Z",
                    "frequency": 14,
                    "frequencyTypeId": 10,
                    "accountContractRenewalTypeId": 15,
                    "renewalAccountContractId": 7,
                    "contractTerminationId": 1,
                    "terminationAccountContractStatusTypeId": 19,
                    "renewalAccountContractStatusTypeId": 3,
                    "earlyTermination": "2021-04-26T15:25:27.587Z",
                    "earlyTerminationComment": "Sample Text Data",
                    "termTypeId": 24,
                    "version": 3,
                    "isSynchronousBilling": true,
                    "billingFrequency": 5,
                    "billingFrequencyTypeId": 10
                  }
                ]
              }
            },
            "description": "Update or Add the AccountContract object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Account/Contract/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "My Contract",
              "accountId": 0,
              "accountContractStatusTypeId": 27,
              "start": "2021-04-26T15:25:27.587Z",
              "frequency": 19,
              "frequencyTypeId": 12,
              "accountContractRenewalTypeId": 6,
              "renewalAccountContractId": 23,
              "contractTerminationId": 13,
              "terminationAccountContractStatusTypeId": 20,
              "renewalAccountContractStatusTypeId": 26,
              "earlyTermination": "2021-04-26T15:25:27.587Z",
              "earlyTerminationComment": "Sample Text Data",
              "termTypeId": 0,
              "version": 20,
              "isSynchronousBilling": true,
              "billingFrequency": 17,
              "billingFrequencyTypeId": 15
            },
            "description": "Create a new instance of the AccountContract object."
          },
          {
            "name": "updateContractById",
            "method": "PUT",
            "path": "Account/Contract/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ContractByIdResult",
              "description": "Returns updateContractById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 4,
                      "ownerName": "Sample Text Data",
                      "name": "My Contract",
                      "accountId": 8,
                      "accountName": "Sample Text Data",
                      "accountContractStatusTypeId": 22,
                      "accountContractStatusTypeName": "Sample Text Data",
                      "start": "2021-04-26T15:25:27.587Z",
                      "frequency": 6,
                      "frequencyTypeId": 11,
                      "frequencyTypeName": "Sample Text Data",
                      "accountContractRenewalTypeId": 4,
                      "accountContractRenewalTypeName": "Sample Text Data",
                      "renewalAccountContractId": 4,
                      "renewalAccountContractName": "Sample Text Data",
                      "contractTerminationId": 7,
                      "contractTerminationName": "Sample Text Data",
                      "terminationAccountContractStatusTypeId": 27,
                      "terminationAccountContractStatusTypeName": "Sample Text Data",
                      "renewalAccountContractStatusTypeId": 3,
                      "renewalAccountContractStatusTypeName": "Sample Text Data",
                      "earlyTermination": "2021-04-26T15:25:27.587Z",
                      "earlyTerminationComment": "Sample Text Data",
                      "termTypeId": 20,
                      "termTypeName": "Sample Text Data",
                      "extendedStart": "2021-04-26T15:25:27.587Z",
                      "version": 5,
                      "isSynchronousBilling": true,
                      "billingFrequency": 3,
                      "billingFrequencyTypeId": 21,
                      "billingFrequencyTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "My Contract",
              "accountId": 20,
              "accountContractStatusTypeId": 1,
              "start": "2021-04-26T15:25:27.587Z",
              "frequency": 0,
              "frequencyTypeId": 6,
              "accountContractRenewalTypeId": 3,
              "renewalAccountContractId": 14,
              "contractTerminationId": 17,
              "terminationAccountContractStatusTypeId": 27,
              "renewalAccountContractStatusTypeId": 2,
              "earlyTermination": "2021-04-26T15:25:27.587Z",
              "earlyTerminationComment": "Sample Text Data",
              "termTypeId": 19,
              "version": 1,
              "isSynchronousBilling": true,
              "billingFrequency": 5,
              "billingFrequencyTypeId": 0
            },
            "description": "Update an existing instance of the AccountContract object."
          }
        ]
      },
      {
        "name": "Account Statustype",
        "source_file": "Account-StatusType",
        "endpoints": [
          {
            "name": "deleteStatustypeById",
            "method": "DELETE",
            "path": "Account/StatusType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "StatustypeByIdResult",
              "description": "Returns deleteStatustypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "userStatusType"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountStatusType object."
              }
            ],
            "description": "Delete an instance of the AccountStatusType object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Account/StatusType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountStatusType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/StatusType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountStatusType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getStatustypeById",
            "method": "GET",
            "path": "Account/StatusType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "StatustypeByIdResult",
              "description": "Returns getStatustypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Active",
                  "ownerId": 16,
                  "ownerName": "Sample Text Data",
                  "statusTypeId": 14,
                  "statusTypeName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountStatusType object."
              }
            ],
            "description": "Retrieve an instance of the AccountStatusType object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Account/StatusType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Sample Text Data",
              "isDefault": true,
              "preventChanges": true,
              "baseBillingStatusTypeId": 27
            },
            "description": "Create a new instance of the AccountStatusType object."
          },
          {
            "name": "updateStatustypeById",
            "method": "PUT",
            "path": "Account/StatusType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "StatustypeByIdResult",
              "description": "Returns updateStatustypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 14,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 20,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Sample Text Data",
              "isDefault": true,
              "preventChanges": true,
              "baseBillingStatusTypeId": 9
            },
            "description": "Update an existing instance of the AccountStatusType object."
          }
        ]
      },
      {
        "name": "Owner",
        "source_file": "Owner",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Owner/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve Owner information."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Owner/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve Owner information. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Owner/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve Owner information. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getOwnerById",
            "method": "GET",
            "path": "Owner/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "OwnerByIdResult",
              "description": "Returns getOwnerById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Default Owner",
                  "fiscalYearStartingMonth": "1",
                  "amountPrecision": "2",
                  "largeLogo": "base64encoded",
                  "smallLogo": "base64encoded",
                  "primaryColor": "#000000",
                  "secondaryColor": "#0000FF",
                  "dynamicUsageClassExtensionAttributeId": 23,
                  "dynamicUsageClassExtensionAttributeName": "Sample Text Data",
                  "defaultLocaleId": 26,
                  "defaultLocaleName": "Sample Text Data",
                  "realTimeUsageTaxation": true,
                  "isCustomerPortalActive": true,
                  "roundingMethodTypeId": 0,
                  "roundingMethodTypeName": "Sample Text Data",
                  "usageBillingGraceDays": "10",
                  "isReportingDatabaseEnabled": true,
                  "displayName": "Sample Text Data",
                  "vatNumber": "VAT0001IE",
                  "bankingReferenceIdentifier": "Sample Text Data",
                  "registrationIdentifier": "Sample Text Data",
                  "electronicInvoiceEndpointIdentifier": "Sample Text Data",
                  "billPrepaidAdjustments": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Owner object."
              }
            ],
            "description": "Retrieve Owner information."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Owner/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Owner object."
              }
            ],
            "description": "Retrieve Owner information. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchOwnerById",
            "method": "PATCH",
            "path": "Owner/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchOwnerByIdResult",
              "description": "Returns patchOwnerById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "owner",
                      "instance": {
                        "identity": 1,
                        "name": "Default Owner",
                        "fiscalYearStartingMonth": "1",
                        "amountPrecision": "2",
                        "largeLogo": "base64encoded",
                        "smallLogo": "base64encoded",
                        "primaryColor": "#000000",
                        "secondaryColor": "#0000FF",
                        "dynamicUsageClassExtensionAttributeId": 10,
                        "dynamicUsageClassExtensionAttributeName": "Sample Text Data",
                        "defaultLocaleId": 12,
                        "defaultLocaleName": "Sample Text Data",
                        "realTimeUsageTaxation": true,
                        "isCustomerPortalActive": true,
                        "roundingMethodTypeId": 26,
                        "roundingMethodTypeName": "Sample Text Data",
                        "usageBillingGraceDays": "10",
                        "isReportingDatabaseEnabled": true,
                        "displayName": "Sample Text Data",
                        "vatNumber": "VAT0001IE",
                        "bankingReferenceIdentifier": "Sample Text Data",
                        "registrationIdentifier": "Sample Text Data",
                        "electronicInvoiceEndpointIdentifier": "Sample Text Data",
                        "billPrepaidAdjustments": true
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Owner object."
              }
            ],
            "properties": {
              "details": {},
              "owners": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "fiscalYearStartingMonth": "1",
                    "amountPrecision": "2",
                    "largeLogo": "base64encoded",
                    "smallLogo": "base64encoded",
                    "primaryColor": "#000000",
                    "secondaryColor": "#0000FF",
                    "dynamicUsageClassExtensionAttributeId": 3,
                    "defaultLocaleId": 4,
                    "realTimeUsageTaxation": true,
                    "isCustomerPortalActive": true,
                    "roundingMethodTypeId": 17,
                    "usageBillingGraceDays": "10",
                    "isReportingDatabaseEnabled": true,
                    "displayName": "Sample Text Data",
                    "vatNumber": "VAT0001IE",
                    "bankingReferenceIdentifier": "Sample Text Data",
                    "registrationIdentifier": "Sample Text Data",
                    "electronicInvoiceEndpointIdentifier": "Sample Text Data",
                    "billPrepaidAdjustments": true
                  }
                ]
              }
            },
            "description": "Update or Add the Owner object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          }
        ]
      },
      {
        "name": "Accountinvoicediscounttracking",
        "source_file": "AccountInvoiceDiscountTracking",
        "endpoints": [
          {
            "name": "deleteAccountinvoicediscounttrackingById",
            "method": "DELETE",
            "path": "AccountInvoiceDiscountTracking/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AccountinvoicediscounttrackingByIdResult",
              "description": "Returns deleteAccountinvoicediscounttrackingById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "accountInvoiceDiscountTracking"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountInvoiceDiscountTracking object."
              }
            ],
            "description": "Delete an instance of the AccountInvoiceDiscountTracking object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "AccountInvoiceDiscountTracking/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountInvoiceDiscountTracking objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "AccountInvoiceDiscountTracking/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountInvoiceDiscountTracking objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getAccountinvoicediscounttrackingById",
            "method": "GET",
            "path": "AccountInvoiceDiscountTracking/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AccountinvoicediscounttrackingByIdResult",
              "description": "Returns getAccountinvoicediscounttrackingById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "accountInvoiceDiscountId": 2,
                  "accountInvoiceDiscountName": "Sample Text Data",
                  "invoiceId": 2,
                  "invoiceName": "Sample Text Data",
                  "invoiceItemId": 10,
                  "invoiceItemName": "Sample Text Data",
                  "amount": 12,
                  "created": "2021-04-26T15:25:27.587Z"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountInvoiceDiscountTracking object."
              }
            ],
            "description": "Retrieve an instance of the AccountInvoiceDiscountTracking object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "AccountInvoiceDiscountTracking/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "accountInvoiceDiscountId": 2,
              "invoiceId": 12,
              "invoiceItemId": 18,
              "amount": 11
            },
            "description": "Create a new instance of the AccountInvoiceDiscountTracking object."
          },
          {
            "name": "updateAccountinvoicediscounttrackingById",
            "method": "PUT",
            "path": "AccountInvoiceDiscountTracking/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AccountinvoicediscounttrackingByIdResult",
              "description": "Returns updateAccountinvoicediscounttrackingById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "accountInvoiceDiscountId": 13,
                      "accountInvoiceDiscountName": "Sample Text Data",
                      "invoiceId": 12,
                      "invoiceName": "Sample Text Data",
                      "invoiceItemId": 22,
                      "invoiceItemName": "Sample Text Data",
                      "amount": 8,
                      "created": "2021-04-26T15:25:27.587Z"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "accountInvoiceDiscountId": 27,
              "invoiceId": 6,
              "invoiceItemId": 25,
              "amount": 21
            },
            "description": "Update an existing instance of the AccountInvoiceDiscountTracking object."
          }
        ]
      },
      {
        "name": "Pricechange",
        "source_file": "PriceChange",
        "endpoints": [
          {
            "name": "deletePricechangeById",
            "method": "DELETE",
            "path": "PriceChange/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PricechangeByIdResult",
              "description": "Returns deletePricechangeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "priceChange"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PriceChange object."
              }
            ],
            "description": "Delete an instance of the PriceChange object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "PriceChange/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PriceChange objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "PriceChange/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PriceChange objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "PriceChange/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PriceChange objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getPricechangeById",
            "method": "GET",
            "path": "PriceChange/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PricechangeByIdResult",
              "description": "Returns getPricechangeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Sample Text Data",
                  "priceChangeStatusTypeId": 23,
                  "priceChangeStatusTypeName": "Sample Text Data",
                  "priceBookId": 24,
                  "priceBookName": "Sample Text Data",
                  "effective": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "createdByUserId": 14,
                  "createdByUserName": "Sample Text Data",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "updatedByUserId": 6,
                  "updatedByUserName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PriceChange object."
              }
            ],
            "description": "Retrieve an instance of the PriceChange object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "PriceChange/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PriceChange object."
              }
            ],
            "description": "Retrieve deep detail of the PriceChange object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "PriceChange/{id}/Pricing/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PriceChange object."
              }
            ],
            "description": "Retrieve all of the Pricing objects for a specified PriceChange in a paged fashion."
          },
          {
            "name": "patchPricechangeById",
            "method": "PATCH",
            "path": "PriceChange/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchPricechangeByIdResult",
              "description": "Returns patchPricechangeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "priceChange",
                      "instance": {
                        "identity": 1,
                        "name": "Sample Text Data",
                        "priceChangeStatusTypeId": 18,
                        "priceChangeStatusTypeName": "Sample Text Data",
                        "priceBookId": 26,
                        "priceBookName": "Sample Text Data",
                        "effective": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "createdByUserId": 14,
                        "createdByUserName": "Sample Text Data",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "updatedByUserId": 16,
                        "updatedByUserName": "Sample Text Data"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PriceChange object."
              }
            ],
            "properties": {
              "details": {},
              "priceChanges": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "Sample Text Data",
                    "priceChangeStatusTypeId": 19,
                    "priceBookId": 11,
                    "effective": "Sample Text Data",
                    "createdByUserId": 23,
                    "updated": "2021-04-26T15:25:27.587Z",
                    "updatedByUserId": 13
                  }
                ]
              }
            },
            "description": "Update or Add the PriceChange object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "PriceChange/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Sample Text Data",
              "priceChangeStatusTypeId": 1,
              "priceBookId": 2,
              "effective": "Sample Text Data",
              "createdByUserId": 6,
              "updated": "2021-04-26T15:25:27.587Z",
              "updatedByUserId": 3
            },
            "description": "Create a new instance of the PriceChange object."
          },
          {
            "name": "createApprove",
            "method": "POST",
            "path": "PriceChange/{id}/Approve",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ApproveResult",
              "description": "Returns createApprove information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data",
                      "priceChangeStatusTypeId": 24,
                      "priceChangeStatusTypeName": "Sample Text Data",
                      "priceBookId": 27,
                      "priceBookName": "Sample Text Data",
                      "effective": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "createdByUserId": 20,
                      "createdByUserName": "Sample Text Data",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "updatedByUserId": 18,
                      "updatedByUserName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PriceChange object."
              }
            ],
            "properties": {
              "name": "Sample Text Data",
              "priceChangeStatusTypeId": 1,
              "priceBookId": 27,
              "effective": "Sample Text Data",
              "createdByUserId": 2,
              "updated": "2021-04-26T15:25:27.587Z",
              "updatedByUserId": 4
            },
            "description": "Create a new instance of a Approve object that belongs to the PriceChange."
          },
          {
            "name": "createProcess",
            "method": "POST",
            "path": "PriceChange/{id}/Process",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ProcessResult",
              "description": "Returns createProcess information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data",
                      "priceChangeStatusTypeId": 0,
                      "priceChangeStatusTypeName": "Sample Text Data",
                      "priceBookId": 12,
                      "priceBookName": "Sample Text Data",
                      "effective": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "createdByUserId": 14,
                      "createdByUserName": "Sample Text Data",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "updatedByUserId": 10,
                      "updatedByUserName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PriceChange object."
              }
            ],
            "properties": {
              "name": "Sample Text Data",
              "priceChangeStatusTypeId": 16,
              "priceBookId": 17,
              "effective": "Sample Text Data",
              "createdByUserId": 23,
              "updated": "2021-04-26T15:25:27.587Z",
              "updatedByUserId": 12
            },
            "description": "Create a new instance of a Process object that belongs to the PriceChange."
          },
          {
            "name": "createRollback",
            "method": "POST",
            "path": "PriceChange/{id}/Rollback",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RollbackResult",
              "description": "Returns createRollback information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data",
                      "priceChangeStatusTypeId": 22,
                      "priceChangeStatusTypeName": "Sample Text Data",
                      "priceBookId": 0,
                      "priceBookName": "Sample Text Data",
                      "effective": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "createdByUserId": 23,
                      "createdByUserName": "Sample Text Data",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "updatedByUserId": 2,
                      "updatedByUserName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PriceChange object."
              }
            ],
            "properties": {
              "name": "Sample Text Data",
              "priceChangeStatusTypeId": 9,
              "priceBookId": 17,
              "effective": "Sample Text Data",
              "createdByUserId": 22,
              "updated": "2021-04-26T15:25:27.587Z",
              "updatedByUserId": 27
            },
            "description": "Create a new instance of a Rollback object that belongs to the PriceChange."
          },
          {
            "name": "updatePricechangeById",
            "method": "PUT",
            "path": "PriceChange/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PricechangeByIdResult",
              "description": "Returns updatePricechangeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data",
                      "priceChangeStatusTypeId": 5,
                      "priceChangeStatusTypeName": "Sample Text Data",
                      "priceBookId": 13,
                      "priceBookName": "Sample Text Data",
                      "effective": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "createdByUserId": 2,
                      "createdByUserName": "Sample Text Data",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "updatedByUserId": 23,
                      "updatedByUserName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Sample Text Data",
              "priceChangeStatusTypeId": 8,
              "priceBookId": 5,
              "effective": "Sample Text Data",
              "createdByUserId": 23,
              "updated": "2021-04-26T15:25:27.587Z",
              "updatedByUserId": 16
            },
            "description": "Update an existing instance of the PriceChange object."
          }
        ]
      },
      {
        "name": "Reportdefinition",
        "source_file": "ReportDefinition",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "ReportDefinition/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ReportDefinition objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "ReportDefinition/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ReportDefinition objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getReportdefinitionById",
            "method": "GET",
            "path": "ReportDefinition/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ReportdefinitionByIdResult",
              "description": "Returns getReportdefinitionById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 10,
                  "ownerName": "Sample Text Data",
                  "name": "Montly Sales Summary",
                  "reportFolderId": 7,
                  "reportFolderName": "Sample Text Data",
                  "title": "Montly Sales Results",
                  "repeatTitle": true,
                  "isLocked": true,
                  "isActive": true,
                  "created": "2021-04-26T15:25:27.587Z",
                  "createdByUserId": 13,
                  "createdByUserName": "Sample Text Data",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "updatedByUserId": 17,
                  "updatedByUserName": "Sample Text Data",
                  "reportDefinitionTypeId": 0,
                  "reportDefinitionTypeName": "Sample Text Data",
                  "useReportingDatabase": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ReportDefinition object."
              }
            ],
            "description": "Retrieve an instance of the ReportDefinition object by its ID."
          },
          {
            "name": "getReportdefinitionById",
            "method": "GET",
            "path": "ReportDefinition/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ReportdefinitionByIdResult",
              "description": "Returns getReportdefinitionById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 10,
                  "ownerName": "Sample Text Data",
                  "name": "Montly Sales Summary",
                  "reportFolderId": 7,
                  "reportFolderName": "Sample Text Data",
                  "title": "Montly Sales Results",
                  "repeatTitle": true,
                  "isLocked": true,
                  "isActive": true,
                  "created": "2021-04-26T15:25:27.587Z",
                  "createdByUserId": 13,
                  "createdByUserName": "Sample Text Data",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "updatedByUserId": 17,
                  "updatedByUserName": "Sample Text Data",
                  "reportDefinitionTypeId": 0,
                  "reportDefinitionTypeName": "Sample Text Data",
                  "useReportingDatabase": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ReportDefinition object."
              }
            ],
            "description": "Retrieve an instance of the ReportDefinition object by its ID."
          },
          {
            "name": "getDownload",
            "method": "GET",
            "path": "ReportDefinition/{id}/Download",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DownloadResult",
              "description": "Returns getDownload information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 16,
                  "ownerName": "Sample Text Data",
                  "name": "Montly Sales Summary",
                  "reportFolderId": 12,
                  "reportFolderName": "Sample Text Data",
                  "title": "Montly Sales Results",
                  "repeatTitle": true,
                  "isLocked": true,
                  "isActive": true,
                  "created": "2021-04-26T15:25:27.587Z",
                  "createdByUserId": 15,
                  "createdByUserName": "Sample Text Data",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "updatedByUserId": 14,
                  "updatedByUserName": "Sample Text Data",
                  "reportDefinitionTypeId": 3,
                  "reportDefinitionTypeName": "Sample Text Data",
                  "useReportingDatabase": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ReportDefinition object."
              }
            ],
            "description": "Retrieve all of the Download objects for the specified ReportDefinition."
          },
          {
            "name": "getDownloadlastgenerated",
            "method": "GET",
            "path": "ReportDefinition/{id}/DownloadLastGenerated",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DownloadlastgeneratedResult",
              "description": "Returns getDownloadlastgenerated information",
              "status_code": 200,
              "body": {
                "trackingId": "284e3dd2-0d6c-4901-9645-4ef750b53474",
                "instance": {
                  "identity": 214,
                  "identifier": "81015f2b-e8cd-43ce-b26d-3173e181cf42",
                  "created": "2024-06-07T14:17:44.717Z",
                  "createdByUserId": 10000000,
                  "createdByUserName": "LogiSense Support",
                  "reportContentTypeId": 1,
                  "reportContentTypeName": "PDF",
                  "reportStorageTypeId": 1,
                  "reportStorageTypeName": "On-Demand",
                  "generated": "2024-06-07T14:17:45Z",
                  "reportDefinitionId": 100,
                  "reportDefinitionName": "Account List",
                  "storageLocationId": 2,
                  "storageLocationName": "S3 Reports",
                  "reportStorageStatusTypeId": 3,
                  "reportStorageStatusTypeName": "Generated",
                  "updated": "2024-06-07T14:17:45.873Z",
                  "link": "https://ls-ue1s3001d-01.s3.amazonaws.com/reports/1/On-Demand/81015f2b-e8cd-43ce-b26d-3173e181cf42.PDF?X-Amz-Expires=30&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEGYaCXVzLWVhc3QtMSJHMEUCIHV2bBYOMcIclu5bWv3Vz9gMH8yHcpP6i0p8y0GZw6G3AiEAjsTzLkSNOKzh8zAvtjh6SmxiONUeNLXH7R4XC2Y6YnQqvAUI7v%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARAFGgw3NjQ5MDM3NDg4ODkiDLB%2FdzBecQIVR%2FY%2FnCqQBXNXUZFVWCj5j1TjkjaxKdnw%2F4C8TyNL855VKQ59vk15n7fVI0Lt0fwzF09OQtLsUfLU1XLjbXOEPZlmptnLfsIt5MqzwqqUI9wJgY03RgsVrl87n9Gxd7we%2FANqbvfJnp61nslhP%2B%2BcagVhhtVof7TsjdWr%2FGfguoNAluyI%2BuN78RJsFItXrc14U95lYVVnxTY550ngkWKftRDafsX5lqLOBlK4E47KSNiK9eoSV5uZ3iaN6C%2Fp%2FeSqf9GF4bTwGeRckExhVsjkcfp0UeU7WOczQmpOuWrEriYCxPCWm%2BJ7XM%2BqmG7C%2FOTe927CIJbBrA3oEgL53cbPdCiBOBqrZjQk%2F0uOB1GmYQXxEhw7YmgaYG5B5%2Bx8%2FDf32tutMKPKS%2FKZG4qFEqCA3lZg5nRjocspU8v3VPrJV8U1YSRckf3KvYUyA4Ol3h1FCMoD6G6%2BEGQVivBwABUf79VB4LNl%2FyqW8Rizc%2F%2FJm3GYYcpPt7l%2Bc2zcBk9lmNcs0SzhgZ99K%2BaKYJoGCSKV43O%2BoH0X72JQ8WR%2BP%2B2QIOj4d1QQOLU3ijYkovgB6IMW0iHa%2B7juYFX5hPJbv%2BqfIwuSUpBAfDIQZynvQVqRz99vaAQPOJnDrsBMd36e%2FGw5Yc8c38lLJE4J0jHz%2BbTRjyyfE2y%2BPKrwcZJXDuUriT8jAWW%2BMsoe1bHLQhcp7Uv9vWw8gvlepyLwu646wzyUrTsRoOeI3idfvPC%2FOrNeJdjuFlzkbjPWGOIxxckselD24s769Av5M6ZwHIv3p23KSpWtj0mZWX42J9IHf%2BrMuKIjTTKrzrg3xFrW3afKJvZ6E0GSs13bwW50wnRpOJXFrTw5yUSG7kDGDWrwXQgjMhl%2FNshjK58HMKuQjLMGOrEBnMsHO%2BPn3lmTYT7IvSYXuFacZFvfg4DQYPVnZ%2F1LdroqaPJKPjuL1LWZ8pOz0zeR67kV5hORMVfBQ79AYq3Pu0FzYqORQ9W3%2F8GL8QjnO5ifofEsr9MhtxENnaVS9NUVQB0EiWh0yzetcpn6h%2BHOulNMQJYqiFXXhYD5PGw9orhXyRUVw093pKihtwzemcOv7lleztGoUy5Q8zY4eXvk1NCY6a82zsl87L%2B2Zj2wtOM6&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA3EF6Q6UMXTDKPEAM/20240607/us-east-1/s3/aws4_request&X-Amz-Date=20240607T142129Z&X-Amz-SignedHeaders=host&X-Amz-Signature=082f40af1aee8004c86279073f94a640a9ac8d1ecead71d6b182684b66f33584",
                  "requestParameter": "{\r\n  \"suppressNotification\": false\r\n}"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ReportDefinition object."
              }
            ],
            "description": "Return the last generated report PDF for a specified ReportDefinition regardless of how the report was generated."
          },
          {
            "name": "getGenerated",
            "method": "GET",
            "path": "ReportDefinition/{id}/Generated",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "GeneratedResult",
              "description": "Returns getGenerated information",
              "status_code": 200,
              "body": {
                "trackingId": "e75bc39b-de31-40ea-9ec5-4f79e894ffab",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 214,
                    "identifier": "81015f2b-e8cd-43ce-b26d-3173e181cf42",
                    "created": "2024-06-07T14:17:44.717Z",
                    "createdByUserId": 10000000,
                    "createdByUserName": "LogiSense Support",
                    "reportContentTypeId": 1,
                    "reportContentTypeName": "PDF",
                    "reportStorageTypeId": 1,
                    "reportStorageTypeName": "On-Demand",
                    "generated": "2024-06-07T14:17:45Z",
                    "reportDefinitionId": 100,
                    "reportDefinitionName": "Account List",
                    "storageLocationId": 2,
                    "storageLocationName": "S3 Reports",
                    "reportStorageStatusTypeId": 3,
                    "reportStorageStatusTypeName": "Generated",
                    "updated": "2024-06-07T14:17:45.873Z",
                    "requestParameter": "{\r\n  \"suppressNotification\": false\r\n}"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ReportDefinition object."
              }
            ],
            "description": "Return a list of PDFs that have been generated by a system schedule for the specified ReportDefinition."
          },
          {
            "name": "getLastgenerated",
            "method": "GET",
            "path": "ReportDefinition/{id}/LastGenerated",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "LastgeneratedResult",
              "description": "Returns getLastgenerated information",
              "status_code": 200,
              "body": {
                "trackingId": "7095a268-7ad8-403b-86ee-0ac680a5f2da",
                "instance": {
                  "identity": 127,
                  "identifier": "6008e2fb-7906-4dda-b33f-b77421305795",
                  "generatedResult": "",
                  "created": "2023-11-23T14:39:23.383Z",
                  "createdByUserId": 153,
                  "createdByUserName": "admin",
                  "reportContentTypeId": 1,
                  "reportContentTypeName": "PDF",
                  "reportStorageTypeId": 1,
                  "reportStorageTypeName": "On-Demand",
                  "generated": "2023-11-23T14:39:25Z",
                  "reportDefinitionId": 100,
                  "reportDefinitionName": "Account List",
                  "storageLocationId": 2,
                  "storageLocationName": "S3 Reports",
                  "reportStorageStatusTypeId": 3,
                  "reportStorageStatusTypeName": "Generated",
                  "updated": "2023-11-23T14:39:25.587Z"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ReportDefinition object."
              }
            ],
            "description": "Return the last generated report PDF for a specified ReportDefinition regardless of how the report was generated."
          },
          {
            "name": "createRender",
            "method": "POST",
            "path": "ReportDefinition/{id}/Render",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RenderResult",
              "description": "Returns createRender information",
              "status_code": 200,
              "body": {
                "trackingId": "8d886381-846a-4818-8c31-bfede7b558a2",
                "type": "sendMessage",
                "results": {
                  "totalCount": 2,
                  "items": [
                    {
                      "identity": 214,
                      "action": "created",
                      "dtoTypeKey": "reportStorage",
                      "instance": {
                        "identity": 214,
                        "identifier": "81015f2b-e8cd-43ce-b26d-3173e181cf42",
                        "created": "2024-06-07T14:17:44.717Z",
                        "createdByUserId": 10000000,
                        "createdByUserName": "LogiSense Support",
                        "reportContentTypeId": 1,
                        "reportContentTypeName": "PDF",
                        "reportStorageTypeId": 1,
                        "reportStorageTypeName": "On-Demand",
                        "reportDefinitionId": 100,
                        "reportDefinitionName": "Account List",
                        "storageLocationId": 2,
                        "storageLocationName": "S3 Reports",
                        "reportStorageStatusTypeId": 1,
                        "reportStorageStatusTypeName": "Pending",
                        "updated": "2024-06-07T14:17:44.717Z",
                        "requestParameter": "{\r\n  \"suppressNotification\": false\r\n}"
                      }
                    },
                    {
                      "action": "messageSent",
                      "dtoTypeKey": "renderResults",
                      "instance": {
                        "identity": 100,
                        "successful": true
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ReportDefinition object."
              }
            ],
            "properties": {
              "reportFolderId": 12,
              "createdByUserId": 2,
              "updatedByUserId": 8,
              "reportDefinitionTypeId": 23,
              "useReportingDatabase": true
            },
            "description": "Kicks off a report generation rendering request for the specified ReportDefinition. This is an asynchronous request which will return the report storage identifier where the report will be stored when it has finished its rendering."
          }
        ]
      },
      {
        "name": "Usage Bucket Basedetail",
        "source_file": "Usage-Bucket-BaseDetail",
        "endpoints": [
          {
            "name": "deleteBasedetailById",
            "method": "DELETE",
            "path": "Usage/Bucket/BaseDetail/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BasedetailByIdResult",
              "description": "Returns deleteBasedetailById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "usageBucketBaseDetail"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageBucketBaseDetail object."
              }
            ],
            "description": "Delete an instance of the UsageBucketBaseDetail object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Usage/Bucket/BaseDetail/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageBucketBaseDetail objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Usage/Bucket/BaseDetail/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageBucketBaseDetail objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getBasedetailById",
            "method": "GET",
            "path": "Usage/Bucket/BaseDetail/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BasedetailByIdResult",
              "description": "Returns getBasedetailById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "usageBucketBaseId": 7,
                  "usageBucketBaseName": "Sample Text Data",
                  "usageClassId": 17,
                  "usageClassName": "Sample Text Data",
                  "geoTreeLocationId": 16,
                  "geoTreeLocationName": "Sample Text Data",
                  "exclude": true,
                  "geoTreeLocationGroupId": 12,
                  "geoTreeLocationGroupName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageBucketBaseDetail object."
              }
            ],
            "description": "Retrieve an instance of the UsageBucketBaseDetail object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Usage/Bucket/BaseDetail/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "usageBucketBaseId": 27,
              "usageClassId": 2,
              "geoTreeLocationId": 2,
              "exclude": true,
              "geoTreeLocationGroupId": 26
            },
            "description": "Create a new instance of the UsageBucketBaseDetail object."
          },
          {
            "name": "updateBasedetailById",
            "method": "PUT",
            "path": "Usage/Bucket/BaseDetail/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BasedetailByIdResult",
              "description": "Returns updateBasedetailById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "usageBucketBaseId": 3,
                      "usageBucketBaseName": "Sample Text Data",
                      "usageClassId": 16,
                      "usageClassName": "Sample Text Data",
                      "geoTreeLocationId": 6,
                      "geoTreeLocationName": "Sample Text Data",
                      "exclude": true,
                      "geoTreeLocationGroupId": 1,
                      "geoTreeLocationGroupName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "usageBucketBaseId": 17,
              "usageClassId": 13,
              "geoTreeLocationId": 24,
              "exclude": true,
              "geoTreeLocationGroupId": 2
            },
            "description": "Update an existing instance of the UsageBucketBaseDetail object."
          }
        ]
      },
      {
        "name": "Invoice Duedatetype",
        "source_file": "Invoice-DueDateType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Invoice/DueDateType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceDueDateType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Invoice/DueDateType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceDueDateType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDuedatetypeById",
            "method": "GET",
            "path": "Invoice/DueDateType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DuedatetypeByIdResult",
              "description": "Returns getDuedatetypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the InvoiceDueDateType object."
              }
            ],
            "description": "Retrieve an instance of the InvoiceDueDateType object by its ID."
          }
        ]
      },
      {
        "name": "Paymentstatustype",
        "source_file": "PaymentStatusType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "PaymentStatusType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PaymentStatusType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "PaymentStatusType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PaymentStatusType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getPaymentstatustypeById",
            "method": "GET",
            "path": "PaymentStatusType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PaymentstatustypeByIdResult",
              "description": "Returns getPaymentstatustypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Authorized"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PaymentStatusType object."
              }
            ],
            "description": "Retrieve an instance of the PaymentStatusType object by its ID."
          }
        ]
      },
      {
        "name": "Usageidentifier",
        "source_file": "UsageIdentifier",
        "endpoints": [
          {
            "name": "getByidentifier",
            "method": "GET",
            "path": "UsageIdentifier/ByIdentifier",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ByidentifierResult",
              "description": "Returns getByidentifier information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {}
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageIdentifier objects."
          }
        ]
      },
      {
        "name": "Usage Bucket Baseunit",
        "source_file": "Usage-Bucket-BaseUnit",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Usage/Bucket/BaseUnit/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageBucketBaseUnit objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Usage/Bucket/BaseUnit/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageBucketBaseUnit objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getBaseunitById",
            "method": "GET",
            "path": "Usage/Bucket/BaseUnit/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BaseunitByIdResult",
              "description": "Returns getBaseunitById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "usageBaseUnitId": 20,
                  "usageBaseUnitName": "Sample Text Data",
                  "name": "Count",
                  "description": "Counting items",
                  "sortOrder": 25,
                  "visible": true,
                  "isBaseBucketEligible": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageBucketBaseUnit object."
              }
            ],
            "description": "Retrieve an instance of the UsageBucketBaseUnit object by its ID."
          }
        ]
      },
      {
        "name": "Contacttype Type",
        "source_file": "ContactType-Type",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "ContactType/Type/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ContactTypeType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "ContactType/Type/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ContactTypeType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getTypeById",
            "method": "GET",
            "path": "ContactType/Type/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TypeByIdResult",
              "description": "Returns getTypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Avalara",
                  "sortOrder": 17
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ContactTypeType object."
              }
            ],
            "description": "Retrieve an instance of the ContactTypeType object by its ID."
          }
        ]
      },
      {
        "name": "Billruntype",
        "source_file": "BillRunType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "BillRunType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the BillRunType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "BillRunType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the BillRunType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getBillruntypeById",
            "method": "GET",
            "path": "BillRunType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BillruntypeByIdResult",
              "description": "Returns getBillruntypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the BillRunType object."
              }
            ],
            "description": "Retrieve an instance of the BillRunType object by its ID."
          }
        ]
      },
      {
        "name": "Account Contract Renewaltype",
        "source_file": "Account-Contract-RenewalType.json",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Account/Contract/RenewalType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountContractRenewalType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/Contract/RenewalType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountContractRenewalType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getRenewaltypeById",
            "method": "GET",
            "path": "Account/Contract/RenewalType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RenewaltypeByIdResult",
              "description": "Returns getRenewaltypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Expires at End of Term",
                  "sortOrder": 6
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountContractRenewalType object."
              }
            ],
            "description": "Retrieve an instance of the AccountContractRenewalType object by its ID."
          }
        ]
      },
      {
        "name": "Contract Commitment",
        "source_file": "Contract-Commitment",
        "endpoints": [
          {
            "name": "deleteCommitmentById",
            "method": "DELETE",
            "path": "Contract/Commitment/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CommitmentByIdResult",
              "description": "Returns deleteCommitmentById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "contractCommitment"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ContractCommitment object."
              }
            ],
            "description": "Delete an instance of the ContractCommitment object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Contract/Commitment/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ContractCommitment objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Contract/Commitment/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ContractCommitment objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Contract/Commitment/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ContractCommitment objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getCommitmentById",
            "method": "GET",
            "path": "Contract/Commitment/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CommitmentByIdResult",
              "description": "Returns getCommitmentById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "accountContractId": 19,
                  "accountContractName": "Sample Text Data",
                  "contractCommitmentTypeId": 15,
                  "contractCommitmentTypeName": "Sample Text Data",
                  "penaltyServiceId": 25,
                  "penaltyServiceName": "Sample Text Data",
                  "penaltyDescription": "Minimum quantity commit.",
                  "includeChildAccounts": true,
                  "contractCommitmentPenaltyChargeTypeId": 0,
                  "contractCommitmentPenaltyChargeTypeName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ContractCommitment object."
              }
            ],
            "description": "Retrieve an instance of the ContractCommitment object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Contract/Commitment/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ContractCommitment object."
              }
            ],
            "description": "Retrieve deep detail of the ContractCommitment object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchCommitmentById",
            "method": "PATCH",
            "path": "Contract/Commitment/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchCommitmentByIdResult",
              "description": "Returns patchCommitmentById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "contractCommitment",
                      "instance": {
                        "identity": 1,
                        "accountContractId": 2,
                        "accountContractName": "Sample Text Data",
                        "contractCommitmentTypeId": 0,
                        "contractCommitmentTypeName": "Sample Text Data",
                        "penaltyServiceId": 0,
                        "penaltyServiceName": "Sample Text Data",
                        "penaltyDescription": "Minimum quantity commit.",
                        "includeChildAccounts": true,
                        "contractCommitmentPenaltyChargeTypeId": 12,
                        "contractCommitmentPenaltyChargeTypeName": "Sample Text Data"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "details": {},
                "contractCommitments": {
                  "items": [
                    {
                      "patchType": "create",
                      "patchClientId": 1,
                      "accountContractId": 5,
                      "contractCommitmentTypeId": 1,
                      "penaltyServiceId": 26,
                      "penaltyDescription": "Minimum quantity commit.",
                      "includeChildAccounts": true,
                      "contractCommitmentPenaltyChargeTypeId": 6
                    }
                  ]
                }
              }
            ],
            "properties": {
              "name": "Sample Text Data"
            },
            "description": "Update or Add the ContractCommitment object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Contract/Commitment/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Sample Text Data"
            },
            "description": "Create a new instance of the ContractCommitment object."
          },
          {
            "name": "updateCommitmentById",
            "method": "PUT",
            "path": "Contract/Commitment/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CommitmentByIdResult",
              "description": "Returns updateCommitmentById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "accountContractId": 16,
                      "accountContractName": "Sample Text Data",
                      "contractCommitmentTypeId": 17,
                      "contractCommitmentTypeName": "Sample Text Data",
                      "penaltyServiceId": 24,
                      "penaltyServiceName": "Sample Text Data",
                      "penaltyDescription": "Minimum quantity commit.",
                      "includeChildAccounts": true,
                      "contractCommitmentPenaltyChargeTypeId": 22,
                      "contractCommitmentPenaltyChargeTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "accountContractId": 7,
              "contractCommitmentTypeId": 16,
              "penaltyServiceId": 12,
              "penaltyDescription": "Minimum quantity commit.",
              "includeChildAccounts": true,
              "contractCommitmentPenaltyChargeTypeId": 13
            },
            "description": "Update an existing instance of the ContractCommitment object."
          }
        ]
      },
      {
        "name": "Reratescheduletracking",
        "source_file": "RerateScheduleTracking",
        "endpoints": [
          {
            "name": "getByreratescheduleById",
            "method": "GET",
            "path": "RerateScheduleTracking/ByRerateSchedule/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ByreratescheduleByIdResult",
              "description": "Returns getByreratescheduleById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "rerateScheduleId": 17,
                  "rerateScheduleName": "Sample Text Data",
                  "accountId": 5,
                  "accountName": "Sample Text Data",
                  "rerateScheduleStatusTypeId": 25,
                  "rerateScheduleStatusTypeName": "Sample Text Data",
                  "rerateReasonTypeId": 7,
                  "rerateReasonTypeName": "Sample Text Data",
                  "rerateStart": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "start": "2021-04-26T15:25:27.587Z",
                  "queued": "2021-04-26T15:25:27.587Z",
                  "complete": "2021-04-26T15:25:27.587Z",
                  "queuedCount": 0,
                  "processedCount": 3,
                  "maxUsageRatedId": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the RerateScheduleTracking object."
              }
            ],
            "description": "Retrieve an instance of the RerateScheduleTracking object by its ID."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "RerateScheduleTracking/ByRerateSchedule/{id}/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the RerateScheduleTracking object."
              }
            ],
            "description": "Retrieve all of the / objects for a specified RerateScheduleTracking in a paged fashion."
          }
        ]
      },
      {
        "name": "Account Shareplan Bucketusage Byservice",
        "source_file": "Account-SharePlan-BucketUsage-ByService",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Account/SharePlan/BucketUsage/ByService/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ViewSharePlanBucketUsageByService objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/SharePlan/BucketUsage/ByService/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ViewSharePlanBucketUsageByService objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          }
        ]
      },
      {
        "name": "Usage Rate Group",
        "source_file": "Usage-Rate-Group",
        "endpoints": [
          {
            "name": "deleteGroupById",
            "method": "DELETE",
            "path": "Usage/Rate/Group/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "GroupByIdResult",
              "description": "Returns deleteGroupById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "usageRateGroup"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageRateGroup object."
              }
            ],
            "description": "Delete an instance of the UsageRateGroup object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Usage/Rate/Group/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageRateGroup objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Usage/Rate/Group/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageRateGroup objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Usage/Rate/Group/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageRateGroup objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getGroupById",
            "method": "GET",
            "path": "Usage/Rate/Group/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "GroupByIdResult",
              "description": "Returns getGroupById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 12,
                  "ownerName": "Sample Text Data",
                  "name": "All Zone 2 Data Rates",
                  "start": "2021-04-26T15:25:27.587Z",
                  "end": "2021-04-26T15:25:27.587Z",
                  "useForCost": true,
                  "timePeriodId": 0,
                  "timePeriodName": "Sample Text Data",
                  "displayName": "Gold Rates",
                  "currencyId": 9,
                  "currencyName": "Sample Text Data",
                  "isAggregated": true,
                  "isPassThrough": true,
                  "amountPrecision": 10,
                  "roundingMethodTypeId": 13,
                  "roundingMethodTypeName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "generalLedgerId": 3,
                  "generalLedgerName": "Sample Text Data",
                  "isTaxInclusive": true,
                  "aggregationTypeId": 15,
                  "aggregationTypeName": "Sample Text Data",
                  "createdByUserId": 25,
                  "createdByUserName": "Sample Text Data",
                  "updatedByUserId": 15,
                  "updatedByUserName": "Sample Text Data",
                  "isAggregatedByInvoicer": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageRateGroup object."
              }
            ],
            "description": "Retrieve an instance of the UsageRateGroup object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Usage/Rate/Group/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageRateGroup object."
              }
            ],
            "description": "Retrieve deep detail of the UsageRateGroup object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchGroupById",
            "method": "PATCH",
            "path": "Usage/Rate/Group/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchGroupByIdResult",
              "description": "Returns patchGroupById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "usageRateGroup",
                      "instance": {
                        "identity": 1,
                        "ownerId": 3,
                        "ownerName": "Sample Text Data",
                        "name": "All Zone 2 Data Rates",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 11,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Gold Rates",
                        "currencyId": 2,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "isPassThrough": true,
                        "amountPrecision": 6,
                        "roundingMethodTypeId": 4,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 11,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 14,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 7,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 19,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageRateGroup object."
              }
            ],
            "properties": {
              "details": {},
              "usageRateGroups": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "All Zone 2 Data Rates",
                    "start": "2021-04-26T15:25:27.587Z",
                    "useForCost": true,
                    "timePeriodId": 25,
                    "displayName": "Gold Rates",
                    "currencyId": 10,
                    "isAggregated": true,
                    "isPassThrough": true,
                    "amountPrecision": 21,
                    "roundingMethodTypeId": 2,
                    "updated": "2021-04-26T15:25:27.587Z",
                    "generalLedgerId": 20,
                    "isTaxInclusive": true,
                    "aggregationTypeId": 1,
                    "createdByUserId": 3,
                    "updatedByUserId": 5,
                    "isAggregatedByInvoicer": true
                  }
                ]
              }
            },
            "description": "Update or Add the UsageRateGroup object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Usage/Rate/Group/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "All Zone 2 Data Rates",
              "start": "2021-04-26T15:25:27.587Z",
              "useForCost": true,
              "timePeriodId": 15,
              "displayName": "Gold Rates",
              "currencyId": 18,
              "isAggregated": true,
              "isPassThrough": true,
              "amountPrecision": 2,
              "roundingMethodTypeId": 2,
              "updated": "2021-04-26T15:25:27.587Z",
              "generalLedgerId": 7,
              "isTaxInclusive": true,
              "aggregationTypeId": 12,
              "createdByUserId": 8,
              "updatedByUserId": 16,
              "isAggregatedByInvoicer": true
            },
            "description": "Create a new instance of the UsageRateGroup object."
          },
          {
            "name": "updateGroupById",
            "method": "PUT",
            "path": "Usage/Rate/Group/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "GroupByIdResult",
              "description": "Returns updateGroupById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 17,
                      "ownerName": "Sample Text Data",
                      "name": "All Zone 2 Data Rates",
                      "start": "2021-04-26T15:25:27.587Z",
                      "end": "2021-04-26T15:25:27.587Z",
                      "useForCost": true,
                      "timePeriodId": 3,
                      "timePeriodName": "Sample Text Data",
                      "displayName": "Gold Rates",
                      "currencyId": 22,
                      "currencyName": "Sample Text Data",
                      "isAggregated": true,
                      "isPassThrough": true,
                      "amountPrecision": 27,
                      "roundingMethodTypeId": 11,
                      "roundingMethodTypeName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "generalLedgerId": 20,
                      "generalLedgerName": "Sample Text Data",
                      "isTaxInclusive": true,
                      "aggregationTypeId": 4,
                      "aggregationTypeName": "Sample Text Data",
                      "createdByUserId": 13,
                      "createdByUserName": "Sample Text Data",
                      "updatedByUserId": 6,
                      "updatedByUserName": "Sample Text Data",
                      "isAggregatedByInvoicer": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "All Zone 2 Data Rates",
              "start": "2021-04-26T15:25:27.587Z",
              "useForCost": true,
              "timePeriodId": 27,
              "displayName": "Gold Rates",
              "currencyId": 8,
              "isAggregated": true,
              "isPassThrough": true,
              "amountPrecision": 21,
              "roundingMethodTypeId": 4,
              "updated": "2021-04-26T15:25:27.587Z",
              "generalLedgerId": 18,
              "isTaxInclusive": true,
              "aggregationTypeId": 4,
              "createdByUserId": 21,
              "updatedByUserId": 16,
              "isAggregatedByInvoicer": true
            },
            "description": "Update an existing instance of the UsageRateGroup object."
          }
        ]
      },
      {
        "name": "Contract Termination",
        "source_file": "Contract-Termination",
        "endpoints": [
          {
            "name": "deleteTerminationById",
            "method": "DELETE",
            "path": "Contract/Termination/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TerminationByIdResult",
              "description": "Returns deleteTerminationById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "contractTermination"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ContractTermination object."
              }
            ],
            "description": "Delete an instance of the ContractTermination object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Contract/Termination/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ContractTermination objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Contract/Termination/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ContractTermination objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Contract/Termination/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ContractTermination objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getTerminationById",
            "method": "GET",
            "path": "Contract/Termination/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TerminationByIdResult",
              "description": "Returns getTerminationById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "penaltyServiceId": 8,
                  "penaltyServiceName": "Sample Text Data",
                  "name": "Early Termination Fee"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ContractTermination object."
              }
            ],
            "description": "Retrieve an instance of the ContractTermination object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Contract/Termination/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ContractTermination object."
              }
            ],
            "description": "Retrieve deep detail of the ContractTermination object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchTerminationById",
            "method": "PATCH",
            "path": "Contract/Termination/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchTerminationByIdResult",
              "description": "Returns patchTerminationById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "contractTermination",
                      "instance": {
                        "identity": 1,
                        "penaltyServiceId": 3,
                        "penaltyServiceName": "Sample Text Data",
                        "name": "Early Termination Fee"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ContractTermination object."
              }
            ],
            "properties": {
              "details": {},
              "contractTerminations": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "penaltyServiceId": 21,
                    "name": "Early Termination Fee"
                  }
                ]
              }
            },
            "description": "Update or Add the ContractTermination object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Contract/Termination/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "penaltyServiceId": 15,
              "name": "Early Termination Fee"
            },
            "description": "Create a new instance of the ContractTermination object."
          },
          {
            "name": "updateTerminationById",
            "method": "PUT",
            "path": "Contract/Termination/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TerminationByIdResult",
              "description": "Returns updateTerminationById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "penaltyServiceId": 3,
                      "penaltyServiceName": "Sample Text Data",
                      "name": "Early Termination Fee"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "penaltyServiceId": 18,
              "name": "Early Termination Fee"
            },
            "description": "Update an existing instance of the ContractTermination object."
          }
        ]
      },
      {
        "name": "Generalledger",
        "source_file": "GeneralLedger",
        "endpoints": [
          {
            "name": "deleteGeneralledgerById",
            "method": "DELETE",
            "path": "GeneralLedger/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "GeneralledgerByIdResult",
              "description": "Returns deleteGeneralledgerById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "generalLedger"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the GeneralLedger object."
              }
            ],
            "description": "Delete an instance of the GeneralLedger object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "GeneralLedger/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the GeneralLedger objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "GeneralLedger/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the GeneralLedger objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getGeneralledgerById",
            "method": "GET",
            "path": "GeneralLedger/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "GeneralledgerByIdResult",
              "description": "Returns getGeneralledgerById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "glDebit": "cad-debit",
                  "glCredit": "cad-credit",
                  "ownerId": 21,
                  "ownerName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "name": "Canadian Taxes"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the GeneralLedger object."
              }
            ],
            "description": "Retrieve an instance of the GeneralLedger object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "GeneralLedger/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "glDebit": "cad-debit",
              "glCredit": "cad-credit",
              "updated": "2021-04-26T15:25:27.587Z",
              "name": "Canadian Taxes"
            },
            "description": "Create a new instance of the GeneralLedger object."
          },
          {
            "name": "updateGeneralledgerById",
            "method": "PUT",
            "path": "GeneralLedger/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "GeneralledgerByIdResult",
              "description": "Returns updateGeneralledgerById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "glDebit": "cad-debit",
                      "glCredit": "cad-credit",
                      "ownerId": 2,
                      "ownerName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "name": "Canadian Taxes"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "glDebit": "cad-debit",
              "glCredit": "cad-credit",
              "updated": "2021-04-26T15:25:27.587Z",
              "name": "Canadian Taxes"
            },
            "description": "Update an existing instance of the GeneralLedger object."
          }
        ]
      },
      {
        "name": "Dataimport Cachecategory",
        "source_file": "DataImport-CacheCategory",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "DataImport/CacheCategory/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the DataImportCacheCategory objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "DataImport/CacheCategory/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the DataImportCacheCategory objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getCachecategoryById",
            "method": "GET",
            "path": "DataImport/CacheCategory/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CachecategoryByIdResult",
              "description": "Returns getCachecategoryById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 17,
                  "ownerName": "Sample Text Data",
                  "name": "Sample Text Data",
                  "description": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the DataImportCacheCategory object."
              }
            ],
            "description": "Retrieve an instance of the DataImportCacheCategory object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "DataImport/CacheCategory/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Sample Text Data",
              "description": "Sample Text Data"
            },
            "description": "Create a new instance of the DataImportCacheCategory object."
          },
          {
            "name": "updateCachecategoryById",
            "method": "PUT",
            "path": "DataImport/CacheCategory/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CachecategoryByIdResult",
              "description": "Returns updateCachecategoryById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "name": "Sample Text Data",
                      "description": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Sample Text Data",
              "description": "Sample Text Data"
            },
            "description": "Update an existing instance of the DataImportCacheCategory object."
          }
        ]
      },
      {
        "name": "Dataimport Usage",
        "source_file": "DataImport-Usage",
        "endpoints": [
          {
            "name": "getDownload",
            "method": "GET",
            "path": "DataImport/Usage/Download",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DownloadResult",
              "description": "Returns getDownload information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 16,
                  "ownerName": "Sample Text Data",
                  "name": "Montly Sales Summary",
                  "reportFolderId": 12,
                  "reportFolderName": "Sample Text Data",
                  "title": "Montly Sales Results",
                  "repeatTitle": true,
                  "isLocked": true,
                  "isActive": true,
                  "created": "2021-04-26T15:25:27.587Z",
                  "createdByUserId": 15,
                  "createdByUserName": "Sample Text Data",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "updatedByUserId": 14,
                  "updatedByUserName": "Sample Text Data",
                  "reportDefinitionTypeId": 3,
                  "reportDefinitionTypeName": "Sample Text Data",
                  "useReportingDatabase": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the DataImportUsage objects."
          },
          {
            "name": "getFeedById",
            "method": "GET",
            "path": "DataImport/Usage/Feed/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "FeedByIdResult",
              "description": "Returns getFeedById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {}
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the DataImportUsage object."
              }
            ],
            "description": "Retrieve an instance of the DataImportUsage object by its ID."
          },
          {
            "name": "getName",
            "method": "GET",
            "path": "DataImport/Usage/Feed/{name}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "NameResult",
              "description": "Returns getName information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {}
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the DataImportUsage objects."
          },
          {
            "name": "getHistory",
            "method": "GET",
            "path": "DataImport/Usage/History",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "HistoryResult",
              "description": "Returns getHistory information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {}
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the DataImportUsage objects."
          },
          {
            "name": "getHistoryById",
            "method": "GET",
            "path": "DataImport/Usage/History/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "HistoryByIdResult",
              "description": "Returns getHistoryById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "invoiceId": 8,
                  "invoiceName": "Sample Text Data",
                  "date": "2021-04-26T15:25:27.587Z",
                  "action": "rendered",
                  "userId": 17,
                  "userName": "Sample Text Data",
                  "billRunHistoryId": 13,
                  "billRunHistoryName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the DataImportUsage object."
              }
            ],
            "description": "Retrieve an instance of the DataImportUsage object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "DataImport/Usage/History/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the DataImportUsage object."
              }
            ],
            "description": "Retrieve deep detail of the DataImportUsage object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getTrackingid",
            "method": "GET",
            "path": "DataImport/Usage/Tracking/{trackingId}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TrackingidResult",
              "description": "Returns getTrackingid information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {}
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the DataImportUsage objects."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "DataImport/Usage/Tracking/{trackingId}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the DataImportUsage objects."
          },
          {
            "name": "createReprocess",
            "method": "POST",
            "path": "DataImport/Usage/History/{id}/Reprocess",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ReprocessResult",
              "description": "Returns createReprocess information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 10,
                      "ownerName": "Sample Text Data",
                      "scheduledStart": "2021-04-26T15:25:27.587Z",
                      "start": "2021-04-26T15:25:27.587Z",
                      "complete": "2021-04-26T15:25:27.587Z",
                      "created": "2021-04-26T15:25:27.587Z",
                      "createdByUserId": 25,
                      "createdByUserName": "Sample Text Data",
                      "filterCriteria": "Sample Text Data",
                      "sentCount": "Sample Text Data",
                      "isDelete": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the DataImportUsage object."
              }
            ],
            "properties": {},
            "description": "Create a new instance of a Reprocess object that belongs to the DataImportUsage."
          },
          {
            "name": "createMultiById",
            "method": "POST",
            "path": "DataImport/Usage/Json/Multi/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "MultiByIdResult",
              "description": "Returns createMultiById information",
              "status_code": 200,
              "body": {
                "trackingId": "78578940-e75f-4984-9db3-75fdf552913d",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "action": "created",
                      "dtoTypeKey": "dataImportRequestTracking",
                      "instance": {
                        "trackingId": "a654294f-9fd6-4576-aeec-b4531b742dd1",
                        "udrFeedId": 3
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Usage Feed to which this payload should be applied."
              }
            ],
            "properties": {
              "data": [
                {
                  "DateTime": "2023-04-25T01:01:00.06",
                  "UdrIdentifierTypeName": "Unknown",
                  "OriginatingIdentifier": "4038675310",
                  "TerminatingIdentifier": "4038675346",
                  "UdrUsageIdentifier": "814-241-4332",
                  "Value": 134,
                  "Inbound": false,
                  "ReverseRating": false,
                  "UsageClassName": "data_class",
                  "UsageClassTypeName": "data_classType"
                },
                {
                  "DateTime": "2023-04-26T01:01:00.07",
                  "UdrIdentifierTypeName": "Unknown",
                  "OriginatingIdentifier": "4038675311",
                  "TerminatingIdentifier": "4038675347",
                  "UdrUsageIdentifier": "814-241-4332",
                  "Value": 135,
                  "Inbound": false,
                  "ReverseRating": false,
                  "UsageClassName": "data_class",
                  "UsageClassTypeName": "data_classType"
                }
              ]
            },
            "description": "Insert multiple raw data usage records in a JSON format for a Usage Feed specified by {id}."
          },
          {
            "name": "createJsonById",
            "method": "POST",
            "path": "DataImport/Usage/Json/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "JsonByIdResult",
              "description": "Returns createJsonById information",
              "status_code": 200,
              "body": {
                "trackingId": "b4701009-121f-4903-a33d-c0039b33a512",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "action": "created",
                      "dtoTypeKey": "dataImportRequestTracking",
                      "instance": {
                        "trackingId": "0e6042bb-ccbe-41d9-b471-69c988c990ab",
                        "udrFeedId": 3
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Usage Feed to which this payload should be applied."
              }
            ],
            "properties": {
              "DateTime": "2023-04-25T01:01:00.06",
              "UdrIdentifierTypeName": "Unknown",
              "OriginatingIdentifier": "555xtgr8675310",
              "TerminatingIdentifier": "403dsf867sfsd5346",
              "UdrUsageIdentifier": "ssty814-24ss1-433d2",
              "Value": 134,
              "Inbound": false,
              "ReverseRating": false,
              "UsageClassName": "data_class",
              "UsageClassTypeName": "data_classType"
            },
            "description": "Insert single raw data usage record in a JSON format for a Usage Feed specified by {id}"
          },
          {
            "name": "createApifeedname",
            "method": "POST",
            "path": "DataImport/Usage/{apifeedname}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ApifeednameResult",
              "description": "Returns createApifeedname information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {}
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {},
            "description": "Create a new instance of the DataImportUsage object."
          },
          {
            "name": "createUsageById",
            "method": "POST",
            "path": "DataImport/Usage/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "UsageByIdResult",
              "description": "Returns createUsageById information",
              "status_code": 200,
              "body": {
                "trackingId": "43fa3978-c1cc-4a48-afaa-5e1f9955d5ab",
                "type": "sendMessage",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "action": "messageSent",
                      "dtoTypeKey": "dataImportUsageResults",
                      "instance": {
                        "identity": 100,
                        "successful": true
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Usage Feed to which this payload should be applied."
              }
            ],
            "properties": {
              "data": [
                "106ab566-c0fd-46ed-8932-4365208cd0e3",
                "106ab566-c0fd-46ed-8932-4365208cd0e3",
                "106ab566-c0fd-46ed-8932-4365208cd0e3"
              ]
            },
            "description": "Insert raw data usage record with payload that matches the requirements of Usage Feed specified by {id}"
          }
        ]
      },
      {
        "name": "Account Package View",
        "source_file": "Account-Package-View",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Account/Package/View/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ViewAccountPackage objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/Package/View/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ViewAccountPackage objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getViewById",
            "method": "GET",
            "path": "Account/Package/View/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ViewByIdResult",
              "description": "Returns getViewById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "id": "Sample Text Data",
                  "accountId": 1,
                  "accountName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "nextBill": "2021-04-26T15:25:27.587Z",
                  "name": "Sample Text Data",
                  "lastStatusChanged": "2021-04-26T15:25:27.587Z",
                  "effective": "2021-04-26T15:25:27.587Z",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "effectiveCancel": "2021-04-26T15:25:27.587Z",
                  "inheritedEffectiveCancel": "2021-04-26T15:25:27.587Z",
                  "packageFrequencyId": 23,
                  "packageFrequencyName": "Sample Text Data",
                  "termId": 13,
                  "termName": "Sample Text Data",
                  "createdByUserId": 1,
                  "createdByUserName": "Sample Text Data",
                  "billDay": 2,
                  "inheritedBillDay": 14,
                  "updatedByUserId": 2,
                  "updatedByUserName": "Sample Text Data",
                  "usageBillDay": 20,
                  "inheritedUsageBillDay": 22,
                  "activation": "2021-04-26T15:25:27.587Z",
                  "finalBill": "2021-04-26T15:25:27.587Z",
                  "lastBilled": "2021-04-26T15:25:27.587Z",
                  "accountSharePlanId": 3,
                  "lastUsageBilled": "2021-04-26T15:25:27.587Z",
                  "accountProductCodeId": 4,
                  "quantity": 4,
                  "accountProductCodeName": "Sample Text Data",
                  "packageCategoryId": 7,
                  "packageCategoryName": "Sample Text Data",
                  "accountEffectiveCancel": "2021-04-26T15:25:27.587Z",
                  "accountInvoicerAccountId": 23,
                  "accountInvoicerName": "Sample Text Data",
                  "accountUsageInvoicerAccountId": 19,
                  "accountUsageInvoicerName": "Sample Text Data",
                  "accountTaxSettingAccountId": 26,
                  "accountTaxSettingName": "Sample Text Data",
                  "packageId": 22,
                  "packageName": "Sample Text Data",
                  "packageFrequencyFrequency": 24,
                  "packageFrequencyIsActive": true,
                  "frequencyTypeId": 5,
                  "frequencyTypeName": "Sample Text Data",
                  "billGroupId": 13,
                  "billGroupName": "Sample Text Data",
                  "postPaid": true,
                  "billingActivationTypeId": 1,
                  "fullPeriod": true,
                  "priceBookId": 27
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ViewAccountPackage object."
              }
            ],
            "description": "Retrieve an instance of the ViewAccountPackage object by its ID."
          }
        ]
      },
      {
        "name": "Invoice Discountcalculationtype",
        "source_file": "Invoice-DiscountCalculationType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Invoice/DiscountCalculationType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceDiscountCalculationType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Invoice/DiscountCalculationType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceDiscountCalculationType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDiscountcalculationtypeById",
            "method": "GET",
            "path": "Invoice/DiscountCalculationType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DiscountcalculationtypeByIdResult",
              "description": "Returns getDiscountcalculationtypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the InvoiceDiscountCalculationType object."
              }
            ],
            "description": "Retrieve an instance of the InvoiceDiscountCalculationType object by its ID."
          }
        ]
      },
      {
        "name": "Udr Aggregate Usage Summary",
        "source_file": "UDR-Aggregate-Usage-Summary",
        "endpoints": [
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/{id}/MonthlyUsageSummary/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              }
            ],
            "description": "Returns the average monthly usage summary in a Paged fashion for a specified Account."
          }
        ]
      },
      {
        "name": "Udr Mediated",
        "source_file": "Udr-Mediated",
        "endpoints": [
          {
            "name": "getMediatedById",
            "method": "GET",
            "path": "Udr/Mediated/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "MediatedByIdResult",
              "description": "Returns getMediatedById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "date": "2021-04-26T15:25:27.587Z",
                  "udrIdentifierTypeId": 10,
                  "udrName": "Sample Text Data",
                  "originatingIdentifier": "016243802",
                  "terminatingIdentifier": "017675442",
                  "udrUsageIdentifier": "EC-1",
                  "value": "Sample Text Data",
                  "reverseRating": true,
                  "usageClassId": 5,
                  "usageClassName": "Sample Text Data",
                  "usageClassGroupTypeId": 11,
                  "usageClassGroupTypeName": "Sample Text Data",
                  "uniquenessIdentifier": "9195d64c5acd24fc0500AAAAAAA",
                  "usageClassTypeId": 27,
                  "usageClassTypeName": "Sample Text Data",
                  "importBatchId": 17,
                  "importBatchName": "Sample Text Data",
                  "usageBill": "2021-04-26T15:25:27.587Z",
                  "inbound": true,
                  "candidateTerminatingIdentifiers": "Sample Text Data",
                  "primaryDataRow": 9,
                  "charge": 23,
                  "serviceTaxCategoryId": 25,
                  "serviceTaxCategoryName": "Sample Text Data",
                  "id": "Sample Text Data",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "updatedByUserId": 18,
                  "updatedByUserName": "Sample Text Data",
                  "carrier": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UDRMediated object."
              }
            ],
            "description": "Retrieve an instance of the UDRMediated object by its ID."
          }
        ]
      },
      {
        "name": "Pricechangetracking",
        "source_file": "PriceChangeTracking",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "PriceChangeTracking/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PriceChangeTracking objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "PriceChangeTracking/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PriceChangeTracking objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getPricechangetrackingById",
            "method": "GET",
            "path": "PriceChangeTracking/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PricechanrackingByIdResult",
              "description": "Returns getPricechangetrackingById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "priceChangeId": 26,
                  "priceChangeName": "Sample Text Data",
                  "priceChangeStatusTypeId": 2,
                  "priceChangeStatusTypeName": "Sample Text Data",
                  "errorMessage": "Sample Text Data",
                  "started": "2021-04-26T15:25:27.587Z",
                  "completed": "2021-04-26T15:25:27.587Z",
                  "createdByUserId": 27,
                  "createdByUserName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PriceChangeTracking object."
              }
            ],
            "description": "Retrieve an instance of the PriceChangeTracking object by its ID."
          }
        ]
      },
      {
        "name": "Payment Termtype",
        "source_file": "Payment-TermType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Payment/TermType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PaymentTermType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Payment/TermType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PaymentTermType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getTermtypeById",
            "method": "GET",
            "path": "Payment/TermType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TermtypeByIdResult",
              "description": "Returns getTermtypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Fixed Term",
                  "sortOrder": 0
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PaymentTermType object."
              }
            ],
            "description": "Retrieve an instance of the PaymentTermType object by its ID."
          }
        ]
      },
      {
        "name": "Tax Category",
        "source_file": "Tax-Category",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Tax/Category/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TaxCategory objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Tax/Category/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TaxCategory objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getCategoryById",
            "method": "GET",
            "path": "Tax/Category/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CategoryByIdResult",
              "description": "Returns getCategoryById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 5,
                  "ownerName": "Sample Text Data",
                  "name": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the TaxCategory object."
              }
            ],
            "description": "Retrieve an instance of the TaxCategory object by its ID."
          }
        ]
      },
      {
        "name": "Usage Bucket Sharelevel",
        "source_file": "Usage-Bucket-ShareLevel",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Usage/Bucket/ShareLevel/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageBucketShareLevel objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Usage/Bucket/ShareLevel/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageBucketShareLevel objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getSharelevelById",
            "method": "GET",
            "path": "Usage/Bucket/ShareLevel/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "SharelevelByIdResult",
              "description": "Returns getSharelevelById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Account",
                  "description": "Account level"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageBucketShareLevel object."
              }
            ],
            "description": "Retrieve an instance of the UsageBucketShareLevel object by its ID."
          }
        ]
      },
      {
        "name": "Payment",
        "source_file": "Payment",
        "endpoints": [
          {
            "name": "deletePaymentById",
            "method": "DELETE",
            "path": "Payment/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PaymentByIdResult",
              "description": "Returns deletePaymentById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "payment"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Payment object."
              }
            ],
            "description": "Delete an instance of the Payment object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Payment/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Payment objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Payment/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Payment objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Payment/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Payment objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getPaymentById",
            "method": "GET",
            "path": "Payment/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PaymentByIdResult",
              "description": "Returns getPaymentById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "date": "2021-04-26T15:25:27.587Z",
                  "amount": 1235.89,
                  "accountId": 6,
                  "accountName": "Sample Text Data",
                  "disbursed": true,
                  "paymentTypeId": 0,
                  "paymentTypeName": "Sample Text Data",
                  "detail": "Payment Recieved",
                  "cardTypeId": 10,
                  "cardTypeName": "Sample Text Data",
                  "checkNumber": "1236-9658",
                  "automaticDisburse": true,
                  "created": "2021-04-26T15:25:27.587Z",
                  "invoiceId": 16,
                  "invoiceName": "Sample Text Data",
                  "posting": "2021-04-26T15:25:27.587Z",
                  "baseAmount": 1345.89,
                  "invoiceAmount": 14,
                  "currencyExchangeDetailId": 19,
                  "currencyExchangeDetailName": "Sample Text Data",
                  "billRunHistoryId": 18,
                  "billRunHistoryName": "Sample Text Data",
                  "isManual": true,
                  "reversePaymentId": 21,
                  "reversePaymentName": "Sample Text Data",
                  "createdByUserId": 6,
                  "createdByUserName": "Sample Text Data",
                  "paymentMethodId": 7,
                  "paymentMethodName": "Sample Text Data",
                  "paymentPreAuthorizeId": 23,
                  "paymentPreAuthorizeName": "Sample Text Data",
                  "paymentTransactionId": 5,
                  "paymentTransactionName": "Sample Text Data",
                  "createdByPortalUserId": 4,
                  "createdByPortalUserName": "Sample Text Data",
                  "paymentStatusTypeId": 27,
                  "paymentStatusTypeName": "Sample Text Data",
                  "retryPaymentId": 16,
                  "retryPaymentName": "Sample Text Data",
                  "updated": "2021-04-26T15:25:27.587Z"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Payment object."
              }
            ],
            "description": "Retrieve an instance of the Payment object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Payment/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Payment object."
              }
            ],
            "description": "Retrieve deep detail of the Payment object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchPaymentById",
            "method": "PATCH",
            "path": "Payment/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchPaymentByIdResult",
              "description": "Returns patchPaymentById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "payment",
                      "instance": {
                        "identity": 1,
                        "date": "2021-04-26T15:25:27.587Z",
                        "amount": 1235.89,
                        "accountId": 15,
                        "accountName": "Sample Text Data",
                        "disbursed": true,
                        "paymentTypeId": 16,
                        "paymentTypeName": "Sample Text Data",
                        "detail": "Payment Recieved",
                        "cardTypeId": 24,
                        "cardTypeName": "Sample Text Data",
                        "checkNumber": "1236-9658",
                        "automaticDisburse": true,
                        "created": "2021-04-26T15:25:27.587Z",
                        "invoiceId": 20,
                        "invoiceName": "Sample Text Data",
                        "posting": "2021-04-26T15:25:27.587Z",
                        "baseAmount": 1345.89,
                        "invoiceAmount": 4,
                        "currencyExchangeDetailId": 0,
                        "currencyExchangeDetailName": "Sample Text Data",
                        "billRunHistoryId": 7,
                        "billRunHistoryName": "Sample Text Data",
                        "isManual": true,
                        "reversePaymentId": 27,
                        "reversePaymentName": "Sample Text Data",
                        "createdByUserId": 17,
                        "createdByUserName": "Sample Text Data",
                        "paymentMethodId": 10,
                        "paymentMethodName": "Sample Text Data",
                        "paymentPreAuthorizeId": 10,
                        "paymentPreAuthorizeName": "Sample Text Data",
                        "paymentTransactionId": 17,
                        "paymentTransactionName": "Sample Text Data",
                        "createdByPortalUserId": 6,
                        "createdByPortalUserName": "Sample Text Data",
                        "paymentStatusTypeId": 3,
                        "paymentStatusTypeName": "Sample Text Data",
                        "retryPaymentId": 19,
                        "retryPaymentName": "Sample Text Data",
                        "updated": "2021-04-26T15:25:27.587Z"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Payment object."
              }
            ],
            "properties": {
              "details": {},
              "payments": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "date": "2021-04-26T15:25:27.587Z",
                    "amount": 1235.89,
                    "accountId": 19,
                    "disbursed": true,
                    "paymentTypeId": 21,
                    "detail": "Payment Recieved",
                    "cardTypeId": 16,
                    "checkNumber": "1236-9658",
                    "automaticDisburse": true,
                    "invoiceId": 23,
                    "posting": "2021-04-26T15:25:27.587Z",
                    "baseAmount": 1345.89,
                    "invoiceAmount": 3,
                    "currencyExchangeDetailId": 10,
                    "billRunHistoryId": 11,
                    "isManual": true,
                    "reversePaymentId": 1,
                    "createdByUserId": 3,
                    "paymentMethodId": 13,
                    "paymentPreAuthorizeId": 15,
                    "paymentTransactionId": 7,
                    "createdByPortalUserId": 17,
                    "paymentStatusTypeId": 19,
                    "retryPaymentId": 12,
                    "updated": "2021-04-26T15:25:27.587Z"
                  }
                ]
              }
            },
            "description": "Update or Add the Payment object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Payment/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "date": "2021-04-26T15:25:27.587Z",
              "amount": 1235.89,
              "accountId": 12,
              "disbursed": true,
              "paymentTypeId": 15,
              "detail": "Payment Recieved",
              "cardTypeId": 3,
              "checkNumber": "1236-9658",
              "automaticDisburse": true,
              "invoiceId": 10,
              "posting": "2021-04-26T15:25:27.587Z",
              "baseAmount": 1345.89,
              "invoiceAmount": 2,
              "currencyExchangeDetailId": 12,
              "billRunHistoryId": 1,
              "isManual": true,
              "reversePaymentId": 5,
              "createdByUserId": 6,
              "paymentMethodId": 20,
              "paymentPreAuthorizeId": 8,
              "paymentTransactionId": 9,
              "createdByPortalUserId": 8,
              "paymentStatusTypeId": 13,
              "retryPaymentId": 17,
              "updated": "2021-04-26T15:25:27.587Z"
            },
            "description": "Create a new instance of the Payment object."
          },
          {
            "name": "createReverse",
            "method": "POST",
            "path": "Payment/Reverse",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ReverseResult",
              "description": "Returns createReverse information"
            },
            "parameters": [],
            "properties": {},
            "description": "Reverse an existing Payment. Payment details provided in body of POST request."
          },
          {
            "name": "createVendor",
            "method": "POST",
            "path": "Payment/Reverse/Vendor",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "VendorResult",
              "description": "Returns createVendor information"
            },
            "parameters": [],
            "properties": {},
            "description": "Reverse an existing Payment. Payment details provided in body of POST request."
          },
          {
            "name": "createVendor",
            "method": "POST",
            "path": "Payment/Vendor",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "VendorResult",
              "description": "Returns createVendor information"
            },
            "parameters": [],
            "properties": {},
            "description": "Create a Payment to be processed by a specified Payment gateway vendor. Payment details provided in body of POST request."
          },
          {
            "name": "updatePaymentById",
            "method": "PUT",
            "path": "Payment/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PaymentByIdResult",
              "description": "Returns updatePaymentById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "date": "2021-04-26T15:25:27.587Z",
                      "amount": 1235.89,
                      "accountId": 22,
                      "accountName": "Sample Text Data",
                      "disbursed": true,
                      "paymentTypeId": 18,
                      "paymentTypeName": "Sample Text Data",
                      "detail": "Payment Recieved",
                      "cardTypeId": 7,
                      "cardTypeName": "Sample Text Data",
                      "checkNumber": "1236-9658",
                      "automaticDisburse": true,
                      "created": "2021-04-26T15:25:27.587Z",
                      "invoiceId": 9,
                      "invoiceName": "Sample Text Data",
                      "posting": "2021-04-26T15:25:27.587Z",
                      "baseAmount": 1345.89,
                      "invoiceAmount": 0,
                      "currencyExchangeDetailId": 25,
                      "currencyExchangeDetailName": "Sample Text Data",
                      "billRunHistoryId": 18,
                      "billRunHistoryName": "Sample Text Data",
                      "isManual": true,
                      "reversePaymentId": 26,
                      "reversePaymentName": "Sample Text Data",
                      "createdByUserId": 27,
                      "createdByUserName": "Sample Text Data",
                      "paymentMethodId": 13,
                      "paymentMethodName": "Sample Text Data",
                      "paymentPreAuthorizeId": 10,
                      "paymentPreAuthorizeName": "Sample Text Data",
                      "paymentTransactionId": 13,
                      "paymentTransactionName": "Sample Text Data",
                      "createdByPortalUserId": 15,
                      "createdByPortalUserName": "Sample Text Data",
                      "paymentStatusTypeId": 2,
                      "paymentStatusTypeName": "Sample Text Data",
                      "retryPaymentId": 7,
                      "retryPaymentName": "Sample Text Data",
                      "updated": "2021-04-26T15:25:27.587Z"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "date": "2021-04-26T15:25:27.587Z",
              "amount": 1235.89,
              "accountId": 21,
              "disbursed": true,
              "paymentTypeId": 2,
              "detail": "Payment Recieved",
              "cardTypeId": 14,
              "checkNumber": "1236-9658",
              "automaticDisburse": true,
              "invoiceId": 22,
              "posting": "2021-04-26T15:25:27.587Z",
              "baseAmount": 1345.89,
              "invoiceAmount": 21,
              "currencyExchangeDetailId": 23,
              "billRunHistoryId": 19,
              "isManual": true,
              "reversePaymentId": 0,
              "createdByUserId": 7,
              "paymentMethodId": 8,
              "paymentPreAuthorizeId": 25,
              "paymentTransactionId": 23,
              "createdByPortalUserId": 1,
              "paymentStatusTypeId": 10,
              "retryPaymentId": 13,
              "updated": "2021-04-26T15:25:27.587Z"
            },
            "description": "Update an existing instance of the Payment object."
          }
        ]
      },
      {
        "name": "Usage Rate Calculationtype",
        "source_file": "Usage-Rate-CalculationType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Usage/Rate/CalculationType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageRateCalculationType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Usage/Rate/CalculationType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageRateCalculationType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getCalculationtypeById",
            "method": "GET",
            "path": "Usage/Rate/CalculationType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CalculationtypeByIdResult",
              "description": "Returns getCalculationtypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Rated",
                  "description": "Rated",
                  "sortOrder": 27,
                  "visible": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageRateCalculationType object."
              }
            ],
            "description": "Retrieve an instance of the UsageRateCalculationType object by its ID."
          }
        ]
      },
      {
        "name": "Country Addressformat",
        "source_file": "Country-AddressFormat",
        "endpoints": [
          {
            "name": "deleteAddressformatById",
            "method": "DELETE",
            "path": "Country/AddressFormat/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AddressformatByIdResult",
              "description": "Returns deleteAddressformatById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "countryAddressFormat"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CountryAddressFormat object."
              }
            ],
            "description": "Delete an instance of the CountryAddressFormat object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Country/AddressFormat/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the CountryAddressFormat objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Country/AddressFormat/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the CountryAddressFormat objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getAddressformatById",
            "method": "GET",
            "path": "Country/AddressFormat/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AddressformatByIdResult",
              "description": "Returns getAddressformatById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 17,
                  "ownerName": "Sample Text Data",
                  "name": "States and Provinces",
                  "isStateRequired": true,
                  "isStateVisible": true,
                  "isCityRequired": true,
                  "isCityVisible": true,
                  "isAddress2Visible": true,
                  "isZipCodeRequired": true,
                  "isZipCodeVisible": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CountryAddressFormat object."
              }
            ],
            "description": "Retrieve an instance of the CountryAddressFormat object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Country/AddressFormat/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {},
            "description": "Create a new instance of the CountryAddressFormat object."
          },
          {
            "name": "updateAddressformatById",
            "method": "PUT",
            "path": "Country/AddressFormat/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AddressformatByIdResult",
              "description": "Returns updateAddressformatById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 22,
                      "ownerName": "Sample Text Data",
                      "name": "States and Provinces",
                      "isStateRequired": true,
                      "isStateVisible": true,
                      "isCityRequired": true,
                      "isCityVisible": true,
                      "isAddress2Visible": true,
                      "isZipCodeRequired": true,
                      "isZipCodeVisible": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1
            },
            "description": "Update an existing instance of the CountryAddressFormat object."
          }
        ]
      },
      {
        "name": "Contactpointtype",
        "source_file": "ContactPointType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "ContactPointType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ContactPointType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "ContactPointType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ContactPointType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getContactpointtypeById",
            "method": "GET",
            "path": "ContactPointType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ContactpointtypeByIdResult",
              "description": "Returns getContactpointtypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "email",
                  "dataTypeId": 19,
                  "dataTypeName": "Sample Text Data",
                  "isRequired": true,
                  "contactTypeId": 20,
                  "contactTypeName": "Sample Text Data",
                  "allowMultiple": true,
                  "isCore": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ContactPointType object."
              }
            ],
            "description": "Retrieve an instance of the ContactPointType object by its ID."
          }
        ]
      },
      {
        "name": "Package Currency",
        "source_file": "Package-Currency",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Package/Currency/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PackageCurrency objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Package/Currency/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PackageCurrency objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getCurrencyById",
            "method": "GET",
            "path": "Package/Currency/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CurrencyByIdResult",
              "description": "Returns getCurrencyById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "isActive": true,
                  "packageFrequencyId": 24,
                  "packageFrequencyName": "Sample Text Data",
                  "packageCurrencyId": 25,
                  "packageCurrencyName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "priceBookId": 0,
                  "priceBookName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PackageCurrency object."
              }
            ],
            "description": "Retrieve an instance of the PackageCurrency object by its ID."
          }
        ]
      },
      {
        "name": "Credit Note",
        "source_file": "Credit-Note",
        "endpoints": [
          {
            "name": "deleteNoteById",
            "method": "DELETE",
            "path": "Credit/Note/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "NoteByIdResult",
              "description": "Returns deleteNoteById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "note"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CreditNote object."
              }
            ],
            "description": "Delete an instance of the CreditNote object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Credit/Note/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the CreditNote objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Credit/Note/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the CreditNote objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Credit/Note/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the CreditNote objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getNoteById",
            "method": "GET",
            "path": "Credit/Note/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "NoteByIdResult",
              "description": "Returns getNoteById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "subject": "Delivery Instuctions",
                  "text": "Drop off at rear door.",
                  "noteTypeId": 21,
                  "noteTypeName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "createdByUserId": 27,
                  "createdByUserName": "Sample Text Data",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "updatedByUserId": 15,
                  "updatedByUserName": "Sample Text Data",
                  "showOnOverview": true,
                  "isImportant": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CreditNote object."
              }
            ],
            "description": "Retrieve an instance of the CreditNote object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Credit/Note/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CreditNote object."
              }
            ],
            "description": "Retrieve deep detail of the CreditNote object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getDownload",
            "method": "GET",
            "path": "Credit/Note/{id}/Download",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DownloadResult",
              "description": "Returns getDownload information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 16,
                  "ownerName": "Sample Text Data",
                  "name": "Montly Sales Summary",
                  "reportFolderId": 12,
                  "reportFolderName": "Sample Text Data",
                  "title": "Montly Sales Results",
                  "repeatTitle": true,
                  "isLocked": true,
                  "isActive": true,
                  "created": "2021-04-26T15:25:27.587Z",
                  "createdByUserId": 15,
                  "createdByUserName": "Sample Text Data",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "updatedByUserId": 14,
                  "updatedByUserName": "Sample Text Data",
                  "reportDefinitionTypeId": 3,
                  "reportDefinitionTypeName": "Sample Text Data",
                  "useReportingDatabase": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CreditNote object."
              }
            ],
            "description": "Retrieve all of the Download objects for the specified CreditNote."
          },
          {
            "name": "createOndemandrender",
            "method": "POST",
            "path": "Credit/Note/OnDemandRender",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "OndemandrenderResult",
              "description": "Returns createOndemandrender information"
            },
            "parameters": [],
            "description": "Imediately initiates the rendering of a specified CreditNote."
          },
          {
            "name": "createSend",
            "method": "POST",
            "path": "Credit/Note/Send",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "SendResult",
              "description": "Returns createSend information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "accountId": 10,
                      "accountName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "createdByUserId": 22,
                      "createdByUserName": "Sample Text Data",
                      "templateId": 4,
                      "templateName": "Sample Text Data",
                      "sent": "2021-04-26T15:25:27.587Z",
                      "name": "Sample Text Data",
                      "date": "2021-04-26T15:25:27.587Z",
                      "invoiceDeliveryTypeId": 19,
                      "invoiceDeliveryTypeName": "Sample Text Data",
                      "description": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Delivers the specified CreditNote to the proper recipient."
          },
          {
            "name": "createSend",
            "method": "POST",
            "path": "Credit/Note/{id}/Send",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "SendResult",
              "description": "Returns createSend information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "accountId": 10,
                      "accountName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "createdByUserId": 22,
                      "createdByUserName": "Sample Text Data",
                      "templateId": 4,
                      "templateName": "Sample Text Data",
                      "sent": "2021-04-26T15:25:27.587Z",
                      "name": "Sample Text Data",
                      "date": "2021-04-26T15:25:27.587Z",
                      "invoiceDeliveryTypeId": 19,
                      "invoiceDeliveryTypeName": "Sample Text Data",
                      "description": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "accountId": 21,
              "createdByUserId": 24,
              "templateId": 16,
              "sent": "2021-04-26T15:25:27.587Z",
              "name": "Sample Text Data",
              "date": "2021-04-26T15:25:27.587Z",
              "invoiceDeliveryTypeId": 2,
              "description": "Sample Text Data"
            },
            "description": "Create a new instance of a Send object that belongs to the CreditNote."
          }
        ]
      },
      {
        "name": "Statustype",
        "source_file": "StatusType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "StatusType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the StatusType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "StatusType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the StatusType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getStatustypeById",
            "method": "GET",
            "path": "StatusType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "StatustypeByIdResult",
              "description": "Returns getStatustypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Active",
                  "ownerId": 16,
                  "ownerName": "Sample Text Data",
                  "statusTypeId": 14,
                  "statusTypeName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the StatusType object."
              }
            ],
            "description": "Retrieve an instance of the StatusType object by its ID."
          }
        ]
      },
      {
        "name": "Account Productcode",
        "source_file": "Account-ProductCode",
        "endpoints": [
          {
            "name": "deleteProductcodeById",
            "method": "DELETE",
            "path": "Account/ProductCode/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ProductcodeByIdResult",
              "description": "Returns deleteProductcodeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "accountProductCode"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountProductCode object."
              }
            ],
            "description": "Delete an instance of the AccountProductCode object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Account/ProductCode/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountProductCode objects."
          },
          {
            "name": "getAccountById",
            "method": "GET",
            "path": "Account/ProductCode/AvailableFor/Account/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AccountByIdResult",
              "description": "Returns getAccountById information"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              }
            ],
            "description": "Retrieve all AccountProductCode objects that are available for the specified Account."
          },
          {
            "name": "getPackagefrequencyid",
            "method": "GET",
            "path": "Account/ProductCode/AvailableFor/Account/{id}/PackageFrequency/{packageFrequencyId}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PackagefrequencyidResult",
              "description": "Returns getPackagefrequencyid information"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              },
              {
                "name": "packageFrequencyId",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PackageFrequency object."
              }
            ],
            "description": "Retrieve all the AccountProductCode objects that are available for the specified Account and PackageFrequency."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/ProductCode/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountProductCode objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getProductcodeById",
            "method": "GET",
            "path": "Account/ProductCode/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ProductcodeByIdResult",
              "description": "Returns getProductcodeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Sample Text Data",
                  "accountId": 14,
                  "accountName": "Sample Text Data",
                  "ownerId": 6,
                  "ownerName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountProductCode object."
              }
            ],
            "description": "Retrieve an instance of the AccountProductCode object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Account/ProductCode/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Sample Text Data",
              "accountId": 17
            },
            "description": "Create a new instance of the AccountProductCode object."
          },
          {
            "name": "updateProductcodeById",
            "method": "PUT",
            "path": "Account/ProductCode/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ProductcodeByIdResult",
              "description": "Returns updateProductcodeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data",
                      "accountId": 13,
                      "accountName": "Sample Text Data",
                      "ownerId": 15,
                      "ownerName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Sample Text Data",
              "accountId": 19
            },
            "description": "Update an existing instance of the AccountProductCode object."
          }
        ]
      },
      {
        "name": "Term",
        "source_file": "Term",
        "endpoints": [
          {
            "name": "deleteTermById",
            "method": "DELETE",
            "path": "Term/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TermByIdResult",
              "description": "Returns deleteTermById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "term"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Term object."
              }
            ],
            "description": "Delete an instance of the Term object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Term/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Term objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Term/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Term objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Term/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Term objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getTermById",
            "method": "GET",
            "path": "Term/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TermByIdResult",
              "description": "Returns getTermById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 26,
                  "ownerName": "Sample Text Data",
                  "name": "12 months",
                  "isActive": true,
                  "frequency": "1",
                  "frequencyTypeId": 12,
                  "frequencyTypeName": "Sample Text Data",
                  "penaltyServiceId": 3,
                  "penaltyServiceName": "Sample Text Data",
                  "chargeRemainder": true,
                  "termRenewalTypeId": 17,
                  "termRenewalTypeName": "Sample Text Data",
                  "renewTermId": 2,
                  "renewTermName": "Sample Text Data",
                  "revokeDiscounts": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Term object."
              }
            ],
            "description": "Retrieve an instance of the Term object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Term/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Term object."
              }
            ],
            "description": "Retrieve deep detail of the Term object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchTermById",
            "method": "PATCH",
            "path": "Term/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchTermByIdResult",
              "description": "Returns patchTermById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "term",
                      "instance": {
                        "identity": 1,
                        "ownerId": 9,
                        "ownerName": "Sample Text Data",
                        "name": "12 months",
                        "isActive": true,
                        "frequency": "1",
                        "frequencyTypeId": 16,
                        "frequencyTypeName": "Sample Text Data",
                        "penaltyServiceId": 12,
                        "penaltyServiceName": "Sample Text Data",
                        "chargeRemainder": true,
                        "termRenewalTypeId": 6,
                        "termRenewalTypeName": "Sample Text Data",
                        "renewTermId": 22,
                        "renewTermName": "Sample Text Data",
                        "revokeDiscounts": true
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Term object."
              }
            ],
            "properties": {
              "details": {},
              "terms": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "12 months",
                    "isActive": true,
                    "frequency": "1",
                    "frequencyTypeId": 23,
                    "penaltyServiceId": 2,
                    "chargeRemainder": true,
                    "termRenewalTypeId": 27,
                    "renewTermId": 22,
                    "revokeDiscounts": true
                  }
                ]
              }
            },
            "description": "Update or Add the Term object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Term/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "12 months",
              "isActive": true,
              "frequency": "1",
              "frequencyTypeId": 0,
              "penaltyServiceId": 19,
              "chargeRemainder": true,
              "termRenewalTypeId": 6,
              "renewTermId": 13,
              "revokeDiscounts": true
            },
            "description": "Create a new instance of the Term object."
          },
          {
            "name": "updateTermById",
            "method": "PUT",
            "path": "Term/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TermByIdResult",
              "description": "Returns updateTermById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "name": "12 months",
                      "isActive": true,
                      "frequency": "1",
                      "frequencyTypeId": 23,
                      "frequencyTypeName": "Sample Text Data",
                      "penaltyServiceId": 5,
                      "penaltyServiceName": "Sample Text Data",
                      "chargeRemainder": true,
                      "termRenewalTypeId": 26,
                      "termRenewalTypeName": "Sample Text Data",
                      "renewTermId": 10,
                      "renewTermName": "Sample Text Data",
                      "revokeDiscounts": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "12 months",
              "isActive": true,
              "frequency": "1",
              "frequencyTypeId": 9,
              "penaltyServiceId": 12,
              "chargeRemainder": true,
              "termRenewalTypeId": 15,
              "renewTermId": 17,
              "revokeDiscounts": true
            },
            "description": "Update an existing instance of the Term object."
          }
        ]
      },
      {
        "name": "Viewdataimportexceptionbyhistory",
        "source_file": "ViewDataImportExceptionByHistory",
        "endpoints": [
          {
            "name": "getPaged",
            "method": "GET",
            "path": "DataImportHistory/Exception/Paged",
            "errors": [
              "InternalServerError",
              "Exception"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all the data import exceptions in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getException",
            "method": "GET",
            "path": "DataImportHistory/{id}/Exception",
            "errors": [
              "InternalServerError",
              "Exception"
            ],
            "response": {
              "type": "ExceptionResult",
              "description": "Returns getException information",
              "status_code": 200,
              "body": {
                "totalCount": 1,
                "items": [
                  {
                    "dataImportExceptionId": 1,
                    "importBatchId": 31,
                    "dataImportExceptionErrorTypeId": 8,
                    "dataImportExceptionErrorTypeName": "Unknown Error",
                    "dataImportExceptionStatusTypeId": 1,
                    "dataImportExceptionStatusTypeName": "New",
                    "originatingFileRecordIndex": 1,
                    "created": "2023-05-19T12:55:32.55Z",
                    "dataImportHistoryId": 1,
                    "dataImportExceptionDataRevisionId": 9,
                    "revisionNumber": 1,
                    "dataSnippet": "UsageClassName,RaterType,BaseUnit,UsageClassTypeName,ServiceTaxCategory",
                    "exceptionDate": "2023-05-19T12:55:32Z",
                    "message": "Could not find a match for UsageRaterTypeName with value 'RaterType'.",
                    "messageDetails": "Could not find a match for UsageRaterTypeName with value 'RaterType'.",
                    "fileName": "Usage Class Import Sample - Sheet1.csv",
                    "importBatchTypeId": 3,
                    "importBatchTypeName": "Non-Usage By File"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the DataImportHistory object."
              }
            ],
            "description": "Retrieve data import exception based on its id."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "DataImportHistory/{id}/Exception/Paged",
            "errors": [
              "InternalServerError",
              "Exception"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the DataImportHistory object."
              }
            ],
            "description": "Retrieve data import exception based on its id."
          }
        ]
      },
      {
        "name": "Frequencytype",
        "source_file": "FrequencyType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "FrequencyType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the FrequencyType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "FrequencyType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the FrequencyType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getFrequencytypeById",
            "method": "GET",
            "path": "FrequencyType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "FrequencytypeByIdResult",
              "description": "Returns getFrequencytypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Month",
                  "sortOrder": "1"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the FrequencyType object."
              }
            ],
            "description": "Retrieve an instance of the FrequencyType object by its ID."
          }
        ]
      },
      {
        "name": "Invoice Dateprocesstype",
        "source_file": "Invoice-DateProcessType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Invoice/DateProcessType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceDateProcessType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Invoice/DateProcessType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceDateProcessType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDateprocesstypeById",
            "method": "GET",
            "path": "Invoice/DateProcessType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DateprocesstypeByIdResult",
              "description": "Returns getDateprocesstypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the InvoiceDateProcessType object."
              }
            ],
            "description": "Retrieve an instance of the InvoiceDateProcessType object by its ID."
          }
        ]
      },
      {
        "name": "Billrun Steptype",
        "source_file": "BillRun-StepType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "BillRun/StepType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the BillRunStepType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "BillRun/StepType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the BillRunStepType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getSteptypeById",
            "method": "GET",
            "path": "BillRun/StepType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "SteptypeByIdResult",
              "description": "Returns getSteptypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Scheduled",
                  "sortOrder": 8
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the BillRunStepType object."
              }
            ],
            "description": "Retrieve an instance of the BillRunStepType object by its ID."
          }
        ]
      },
      {
        "name": "Template",
        "source_file": "Template",
        "endpoints": [
          {
            "name": "deleteTemplateById",
            "method": "DELETE",
            "path": "Template/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TemplateByIdResult",
              "description": "Returns deleteTemplateById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "template"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Template object."
              }
            ],
            "description": "Delete an instance of the Template object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Template/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Template objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Template/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Template objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getTemplateById",
            "method": "GET",
            "path": "Template/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TemplateByIdResult",
              "description": "Returns getTemplateById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 2,
                  "ownerName": "Sample Text Data",
                  "name": "12 months",
                  "dateFormat": "dd-MMM-yyyy",
                  "dateTimeFormat": "dd-MMM-yyyy HH:mm:ss",
                  "description": "Sample Text Data",
                  "localeId": 4,
                  "localeName": "Sample Text Data",
                  "currencyPrecision": "2",
                  "createdByUserId": 8,
                  "createdByUserName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "updatedByUserId": 0,
                  "updatedByUserName": "Sample Text Data",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "templateTypeId": 25,
                  "templateTypeName": "Sample Text Data",
                  "excludeZeroValueInvoiceItems": true,
                  "documentStorageLocationId": 2,
                  "documentStorageLocationName": "Sample Text Data",
                  "fileName": "Sample Text Data",
                  "documentIdentifier": "32bb4ce1-cc03-4eb1-9d3b-381f74a1fa1f",
                  "isCore": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Template object."
              }
            ],
            "description": "Retrieve an instance of the Template object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Template/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Template object."
              }
            ],
            "description": "Retrieve deep detail of the Template object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchInvoiceById",
            "method": "PATCH",
            "path": "Template/Invoice/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchInvoiceByIdResult",
              "description": "Returns patchInvoiceById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "template",
                      "instance": {
                        "identity": 1,
                        "ownerId": 22,
                        "ownerName": "Sample Text Data",
                        "name": "12 months",
                        "dateFormat": "dd-MMM-yyyy",
                        "dateTimeFormat": "dd-MMM-yyyy HH:mm:ss",
                        "description": "Sample Text Data",
                        "localeId": 5,
                        "localeName": "Sample Text Data",
                        "currencyPrecision": "2",
                        "createdByUserId": 27,
                        "createdByUserName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updatedByUserId": 1,
                        "updatedByUserName": "Sample Text Data",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "templateTypeId": 24,
                        "templateTypeName": "Sample Text Data",
                        "excludeZeroValueInvoiceItems": true,
                        "documentStorageLocationId": 11,
                        "documentStorageLocationName": "Sample Text Data",
                        "fileName": "Sample Text Data",
                        "documentIdentifier": "32bb4ce1-cc03-4eb1-9d3b-381f74a1fa1f",
                        "isCore": true
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Template object."
              }
            ],
            "properties": {
              "details": {},
              "templates": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "12 months",
                    "dateFormat": "dd-MMM-yyyy",
                    "dateTimeFormat": "dd-MMM-yyyy HH:mm:ss",
                    "description": "Sample Text Data",
                    "localeId": 11,
                    "currencyPrecision": "2",
                    "createdByUserId": 14,
                    "updatedByUserId": 15,
                    "updated": "2021-04-26T15:25:27.587Z",
                    "templateTypeId": 13,
                    "excludeZeroValueInvoiceItems": true,
                    "documentStorageLocationId": 13,
                    "fileName": "Sample Text Data",
                    "documentIdentifier": "32bb4ce1-cc03-4eb1-9d3b-381f74a1fa1f",
                    "isCore": true
                  }
                ]
              }
            },
            "description": "Update or Add the Template object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "createCreditnote",
            "method": "POST",
            "path": "Template/CreditNote",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CreditnoteResult",
              "description": "Returns createCreditnote information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 14,
                      "ownerName": "Sample Text Data",
                      "name": "12 months",
                      "dateFormat": "dd-MMM-yyyy",
                      "dateTimeFormat": "dd-MMM-yyyy HH:mm:ss",
                      "description": "Sample Text Data",
                      "localeId": 5,
                      "localeName": "Sample Text Data",
                      "currencyPrecision": "2",
                      "createdByUserId": 17,
                      "createdByUserName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "updatedByUserId": 1,
                      "updatedByUserName": "Sample Text Data",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "templateTypeId": 26,
                      "templateTypeName": "Sample Text Data",
                      "excludeZeroValueInvoiceItems": true,
                      "documentStorageLocationId": 27,
                      "documentStorageLocationName": "Sample Text Data",
                      "fileName": "Sample Text Data",
                      "documentIdentifier": "32bb4ce1-cc03-4eb1-9d3b-381f74a1fa1f",
                      "isCore": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "12 months",
              "dateFormat": "dd-MMM-yyyy",
              "dateTimeFormat": "dd-MMM-yyyy HH:mm:ss",
              "description": "Sample Text Data",
              "localeId": 26,
              "currencyPrecision": "2",
              "createdByUserId": 9,
              "updatedByUserId": 6,
              "updated": "2021-04-26T15:25:27.587Z",
              "templateTypeId": 23,
              "excludeZeroValueInvoiceItems": true,
              "documentStorageLocationId": 9,
              "fileName": "Sample Text Data",
              "documentIdentifier": "32bb4ce1-cc03-4eb1-9d3b-381f74a1fa1f",
              "isCore": true
            },
            "description": "Create a new instance of the Template object."
          },
          {
            "name": "createInvoice",
            "method": "POST",
            "path": "Template/Invoice",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "InvoiceResult",
              "description": "Returns createInvoice information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 18,
                      "ownerName": "Sample Text Data",
                      "name": "12 months",
                      "dateFormat": "dd-MMM-yyyy",
                      "dateTimeFormat": "dd-MMM-yyyy HH:mm:ss",
                      "description": "Sample Text Data",
                      "localeId": 15,
                      "localeName": "Sample Text Data",
                      "currencyPrecision": "2",
                      "createdByUserId": 1,
                      "createdByUserName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "updatedByUserId": 14,
                      "updatedByUserName": "Sample Text Data",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "templateTypeId": 9,
                      "templateTypeName": "Sample Text Data",
                      "excludeZeroValueInvoiceItems": true,
                      "documentStorageLocationId": 16,
                      "documentStorageLocationName": "Sample Text Data",
                      "fileName": "Sample Text Data",
                      "documentIdentifier": "32bb4ce1-cc03-4eb1-9d3b-381f74a1fa1f",
                      "isCore": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "12 months",
              "dateFormat": "dd-MMM-yyyy",
              "dateTimeFormat": "dd-MMM-yyyy HH:mm:ss",
              "description": "Sample Text Data",
              "localeId": 7,
              "currencyPrecision": "2",
              "createdByUserId": 20,
              "updatedByUserId": 0,
              "updated": "2021-04-26T15:25:27.587Z",
              "templateTypeId": 23,
              "excludeZeroValueInvoiceItems": true,
              "documentStorageLocationId": 17,
              "fileName": "Sample Text Data",
              "documentIdentifier": "32bb4ce1-cc03-4eb1-9d3b-381f74a1fa1f",
              "isCore": true
            },
            "description": "Create a new instance of the Template object."
          },
          {
            "name": "updateCreditnoteById",
            "method": "PUT",
            "path": "Template/CreditNote/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CreditnoteByIdResult",
              "description": "Returns updateCreditnoteById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 25,
                      "ownerName": "Sample Text Data",
                      "name": "12 months",
                      "dateFormat": "dd-MMM-yyyy",
                      "dateTimeFormat": "dd-MMM-yyyy HH:mm:ss",
                      "description": "Sample Text Data",
                      "localeId": 15,
                      "localeName": "Sample Text Data",
                      "currencyPrecision": "2",
                      "createdByUserId": 0,
                      "createdByUserName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "updatedByUserId": 18,
                      "updatedByUserName": "Sample Text Data",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "templateTypeId": 10,
                      "templateTypeName": "Sample Text Data",
                      "excludeZeroValueInvoiceItems": true,
                      "documentStorageLocationId": 23,
                      "documentStorageLocationName": "Sample Text Data",
                      "fileName": "Sample Text Data",
                      "documentIdentifier": "32bb4ce1-cc03-4eb1-9d3b-381f74a1fa1f",
                      "isCore": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "12 months",
              "dateFormat": "dd-MMM-yyyy",
              "dateTimeFormat": "dd-MMM-yyyy HH:mm:ss",
              "description": "Sample Text Data",
              "localeId": 12,
              "currencyPrecision": "2",
              "createdByUserId": 25,
              "updatedByUserId": 7,
              "updated": "2021-04-26T15:25:27.587Z",
              "templateTypeId": 20,
              "excludeZeroValueInvoiceItems": true,
              "documentStorageLocationId": 26,
              "fileName": "Sample Text Data",
              "documentIdentifier": "32bb4ce1-cc03-4eb1-9d3b-381f74a1fa1f",
              "isCore": true
            },
            "description": "Update an existing instance of the Template object."
          },
          {
            "name": "updateInvoiceById",
            "method": "PUT",
            "path": "Template/Invoice/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "InvoiceByIdResult",
              "description": "Returns updateInvoiceById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 7,
                      "ownerName": "Sample Text Data",
                      "name": "12 months",
                      "dateFormat": "dd-MMM-yyyy",
                      "dateTimeFormat": "dd-MMM-yyyy HH:mm:ss",
                      "description": "Sample Text Data",
                      "localeId": 6,
                      "localeName": "Sample Text Data",
                      "currencyPrecision": "2",
                      "createdByUserId": 18,
                      "createdByUserName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "updatedByUserId": 11,
                      "updatedByUserName": "Sample Text Data",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "templateTypeId": 6,
                      "templateTypeName": "Sample Text Data",
                      "excludeZeroValueInvoiceItems": true,
                      "documentStorageLocationId": 2,
                      "documentStorageLocationName": "Sample Text Data",
                      "fileName": "Sample Text Data",
                      "documentIdentifier": "32bb4ce1-cc03-4eb1-9d3b-381f74a1fa1f",
                      "isCore": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "12 months",
              "dateFormat": "dd-MMM-yyyy",
              "dateTimeFormat": "dd-MMM-yyyy HH:mm:ss",
              "description": "Sample Text Data",
              "localeId": 7,
              "currencyPrecision": "2",
              "createdByUserId": 12,
              "updatedByUserId": 25,
              "updated": "2021-04-26T15:25:27.587Z",
              "templateTypeId": 13,
              "excludeZeroValueInvoiceItems": true,
              "documentStorageLocationId": 17,
              "fileName": "Sample Text Data",
              "documentIdentifier": "32bb4ce1-cc03-4eb1-9d3b-381f74a1fa1f",
              "isCore": true
            },
            "description": "Update an existing instance of the Template object."
          }
        ]
      },
      {
        "name": "Tax Exemptlevel",
        "source_file": "Tax-ExemptLevel",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Tax/ExemptLevel/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TaxExemptLevel objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Tax/ExemptLevel/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TaxExemptLevel objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getExemptlevelById",
            "method": "GET",
            "path": "Tax/ExemptLevel/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ExemptlevelByIdResult",
              "description": "Returns getExemptlevelById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Federal"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the TaxExemptLevel object."
              }
            ],
            "description": "Retrieve an instance of the TaxExemptLevel object by its ID."
          }
        ]
      },
      {
        "name": "Payment Term",
        "source_file": "Payment-Term",
        "endpoints": [
          {
            "name": "deleteTermById",
            "method": "DELETE",
            "path": "Payment/Term/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TermByIdResult",
              "description": "Returns deleteTermById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "term"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PaymentTerm object."
              }
            ],
            "description": "Delete an instance of the PaymentTerm object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Payment/Term/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PaymentTerm objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Payment/Term/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PaymentTerm objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getTermById",
            "method": "GET",
            "path": "Payment/Term/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TermByIdResult",
              "description": "Returns getTermById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 26,
                  "ownerName": "Sample Text Data",
                  "name": "12 months",
                  "isActive": true,
                  "frequency": "1",
                  "frequencyTypeId": 12,
                  "frequencyTypeName": "Sample Text Data",
                  "penaltyServiceId": 3,
                  "penaltyServiceName": "Sample Text Data",
                  "chargeRemainder": true,
                  "termRenewalTypeId": 17,
                  "termRenewalTypeName": "Sample Text Data",
                  "renewTermId": 2,
                  "renewTermName": "Sample Text Data",
                  "revokeDiscounts": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PaymentTerm object."
              }
            ],
            "description": "Retrieve an instance of the PaymentTerm object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Payment/Term/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Net30",
              "paymentTermTypeId": 22,
              "value": 21
            },
            "description": "Create a new instance of the PaymentTerm object."
          },
          {
            "name": "updateTermById",
            "method": "PUT",
            "path": "Payment/Term/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TermByIdResult",
              "description": "Returns updateTermById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "name": "12 months",
                      "isActive": true,
                      "frequency": "1",
                      "frequencyTypeId": 23,
                      "frequencyTypeName": "Sample Text Data",
                      "penaltyServiceId": 5,
                      "penaltyServiceName": "Sample Text Data",
                      "chargeRemainder": true,
                      "termRenewalTypeId": 26,
                      "termRenewalTypeName": "Sample Text Data",
                      "renewTermId": 10,
                      "renewTermName": "Sample Text Data",
                      "revokeDiscounts": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Net30",
              "paymentTermTypeId": 6,
              "value": 0
            },
            "description": "Update an existing instance of the PaymentTerm object."
          }
        ]
      },
      {
        "name": "Account Forget",
        "source_file": "Account-Forget",
        "endpoints": [
          {
            "name": "create",
            "method": "POST",
            "path": "Account/Forget/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {},
            "description": "Create a new instance of the AccountForget object."
          }
        ]
      },
      {
        "name": "Billgroup Accountexclude",
        "source_file": "BillGroup-AccountExclude",
        "endpoints": [
          {
            "name": "deleteAccountexcludeById",
            "method": "DELETE",
            "path": "BillGroup/AccountExclude/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AccountexcludeByIdResult",
              "description": "Returns deleteAccountexcludeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "billGroupAccountExclude"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the BillGroupAccountExclude object."
              }
            ],
            "description": "Delete an instance of the BillGroupAccountExclude object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "BillGroup/AccountExclude/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the BillGroupAccountExclude objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "BillGroup/AccountExclude/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the BillGroupAccountExclude objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getAccountexcludeById",
            "method": "GET",
            "path": "BillGroup/AccountExclude/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AccountexcludeByIdResult",
              "description": "Returns getAccountexcludeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "billGroupId": 1,
                  "billGroupName": "Sample Text Data",
                  "accountId": 25,
                  "accountName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the BillGroupAccountExclude object."
              }
            ],
            "description": "Retrieve an instance of the BillGroupAccountExclude object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "BillGroup/AccountExclude/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Create a new instance of the BillGroupAccountExclude object."
          },
          {
            "name": "updateAccountexcludeById",
            "method": "PUT",
            "path": "BillGroup/AccountExclude/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AccountexcludeByIdResult",
              "description": "Returns updateAccountexcludeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "billGroupId": 19,
                      "billGroupName": "Sample Text Data",
                      "accountId": 19,
                      "accountName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Update an existing instance of the BillGroupAccountExclude object."
          }
        ]
      },
      {
        "name": "Viewaccountserviceusagebucketconsumption",
        "source_file": "ViewAccountServiceUsageBucketConsumption",
        "endpoints": [
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/Service/Usage/Bucket/Consumption/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve consumption details for an account's bucket for a particular service.Retreive all the consumption details for a bucket attached to an account's service by providing different parameters. An example of calling this API would be Account/Service/Usage/Bucket/Paged?UdrUsageIdentifier=CCCC"
          }
        ]
      },
      {
        "name": "Usageratedexceptiontype",
        "source_file": "UsageRatedExceptionType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "UsageRatedExceptionType/",
            "errors": [
              "InternalServerError",
              "Exception"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageRatedExceptionType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "UsageRatedExceptionType/Paged",
            "errors": [
              "InternalServerError",
              "Exception"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageRatedExceptionType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getUsageratedexceptiontypeById",
            "method": "GET",
            "path": "UsageRatedExceptionType/{id}",
            "errors": [
              "InternalServerError",
              "Exception"
            ],
            "response": {
              "type": "UsageratedexceptiontypeByIdResult",
              "description": "Returns getUsageratedexceptiontypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "sortOrder": 7,
                  "description": "Unable to find or apply rate for the record",
                  "name": "Rate Not Found"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageRatedExceptionType object."
              }
            ],
            "description": "Retrieve an instance of the UsageRatedExceptionType object by its ID."
          }
        ]
      },
      {
        "name": "Package Service",
        "source_file": "Package-Service",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Package/Service/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PackageService objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Package/Service/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PackageService objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Package/Service/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PackageService objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getServiceById",
            "method": "GET",
            "path": "Package/Service/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ServiceByIdResult",
              "description": "Returns getServiceById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Activation Fee",
                  "ownerId": 2,
                  "ownerName": "Sample Text Data",
                  "serviceTypeId": 3,
                  "serviceTypeName": "Sample Text Data",
                  "usageFrequency": 13,
                  "usageFrequencyTypeId": 23,
                  "usageFrequencyTypeName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "isActive": true,
                  "isTaxExempt": true,
                  "isTaxInclusive": true,
                  "generalLedgerId": 17,
                  "generalLedgerName": "Sample Text Data",
                  "taxCodeId": 23,
                  "taxCodeName": "Sample Text Data",
                  "serviceTaxCategoryId": 21,
                  "serviceTaxCategoryName": "Sample Text Data",
                  "defaultServiceStatusTypeId": 3,
                  "defaultServiceStatusTypeName": "Sample Text Data",
                  "serviceCategoryId": 20,
                  "serviceCategoryName": "Sample Text Data",
                  "description": "One time charge for activation",
                  "id": 24
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PackageService object."
              }
            ],
            "description": "Retrieve an instance of the PackageService object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Package/Service/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PackageService object."
              }
            ],
            "description": "Retrieve deep detail of the PackageService object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          }
        ]
      },
      {
        "name": "Geotree Location Group",
        "source_file": "GeoTree-Location-Group",
        "endpoints": [
          {
            "name": "deleteGroupById",
            "method": "DELETE",
            "path": "GeoTree/Location/Group/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "GroupByIdResult",
              "description": "Returns deleteGroupById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "usageRateGroup"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the GeoTreeLocationGroup object."
              }
            ],
            "description": "Delete an instance of the GeoTreeLocationGroup object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "GeoTree/Location/Group/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the GeoTreeLocationGroup objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "GeoTree/Location/Group/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the GeoTreeLocationGroup objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "GeoTree/Location/Group/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the GeoTreeLocationGroup objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getGroupById",
            "method": "GET",
            "path": "GeoTree/Location/Group/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "GroupByIdResult",
              "description": "Returns getGroupById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 12,
                  "ownerName": "Sample Text Data",
                  "name": "All Zone 2 Data Rates",
                  "start": "2021-04-26T15:25:27.587Z",
                  "end": "2021-04-26T15:25:27.587Z",
                  "useForCost": true,
                  "timePeriodId": 0,
                  "timePeriodName": "Sample Text Data",
                  "displayName": "Gold Rates",
                  "currencyId": 9,
                  "currencyName": "Sample Text Data",
                  "isAggregated": true,
                  "isPassThrough": true,
                  "amountPrecision": 10,
                  "roundingMethodTypeId": 13,
                  "roundingMethodTypeName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "generalLedgerId": 3,
                  "generalLedgerName": "Sample Text Data",
                  "isTaxInclusive": true,
                  "aggregationTypeId": 15,
                  "aggregationTypeName": "Sample Text Data",
                  "createdByUserId": 25,
                  "createdByUserName": "Sample Text Data",
                  "updatedByUserId": 15,
                  "updatedByUserName": "Sample Text Data",
                  "isAggregatedByInvoicer": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the GeoTreeLocationGroup object."
              }
            ],
            "description": "Retrieve an instance of the GeoTreeLocationGroup object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "GeoTree/Location/Group/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the GeoTreeLocationGroup object."
              }
            ],
            "description": "Retrieve deep detail of the GeoTreeLocationGroup object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchGroupById",
            "method": "PATCH",
            "path": "GeoTree/Location/Group/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchGroupByIdResult",
              "description": "Returns patchGroupById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "usageRateGroup",
                      "instance": {
                        "identity": 1,
                        "ownerId": 3,
                        "ownerName": "Sample Text Data",
                        "name": "All Zone 2 Data Rates",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 11,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Gold Rates",
                        "currencyId": 2,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "isPassThrough": true,
                        "amountPrecision": 6,
                        "roundingMethodTypeId": 4,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 11,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 14,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 7,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 19,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the GeoTreeLocationGroup object."
              }
            ],
            "properties": {
              "details": {},
              "geoTreeLocationGroups": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "Zone 1",
                    "description": "Rates for the Wester Hemisphere",
                    "sortOrder": 7
                  }
                ]
              }
            },
            "description": "Update or Add the GeoTreeLocationGroup object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "GeoTree/Location/Group/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Zone 1",
              "description": "Rates for the Wester Hemisphere",
              "sortOrder": 17
            },
            "description": "Create a new instance of the GeoTreeLocationGroup object."
          },
          {
            "name": "updateGroupById",
            "method": "PUT",
            "path": "GeoTree/Location/Group/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "GroupByIdResult",
              "description": "Returns updateGroupById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 17,
                      "ownerName": "Sample Text Data",
                      "name": "All Zone 2 Data Rates",
                      "start": "2021-04-26T15:25:27.587Z",
                      "end": "2021-04-26T15:25:27.587Z",
                      "useForCost": true,
                      "timePeriodId": 3,
                      "timePeriodName": "Sample Text Data",
                      "displayName": "Gold Rates",
                      "currencyId": 22,
                      "currencyName": "Sample Text Data",
                      "isAggregated": true,
                      "isPassThrough": true,
                      "amountPrecision": 27,
                      "roundingMethodTypeId": 11,
                      "roundingMethodTypeName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "generalLedgerId": 20,
                      "generalLedgerName": "Sample Text Data",
                      "isTaxInclusive": true,
                      "aggregationTypeId": 4,
                      "aggregationTypeName": "Sample Text Data",
                      "createdByUserId": 13,
                      "createdByUserName": "Sample Text Data",
                      "updatedByUserId": 6,
                      "updatedByUserName": "Sample Text Data",
                      "isAggregatedByInvoicer": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Zone 1",
              "description": "Rates for the Wester Hemisphere",
              "sortOrder": 14
            },
            "description": "Update an existing instance of the GeoTreeLocationGroup object."
          }
        ]
      },
      {
        "name": "Account Contract Tracking Termination",
        "source_file": "Account-Contract-Tracking-Termination",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Account/Contract/Tracking/Termination/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountContractTrackingTermination objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/Contract/Tracking/Termination/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountContractTrackingTermination objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getTerminationById",
            "method": "GET",
            "path": "Account/Contract/Tracking/Termination/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TerminationByIdResult",
              "description": "Returns getTerminationById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "penaltyServiceId": 8,
                  "penaltyServiceName": "Sample Text Data",
                  "name": "Early Termination Fee"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountContractTrackingTermination object."
              }
            ],
            "description": "Retrieve an instance of the AccountContractTrackingTermination object by its ID."
          }
        ]
      },
      {
        "name": "Accountsreceivable Terms",
        "source_file": "AccountsReceivable-Terms",
        "endpoints": [
          {
            "name": "deleteTermsById",
            "method": "DELETE",
            "path": "AccountsReceivable/Terms/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TermsByIdResult",
              "description": "Returns deleteTermsById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "accountsReceivableTerms"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountsReceivableTerms object."
              }
            ],
            "description": "Delete an instance of the AccountsReceivableTerms object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "AccountsReceivable/Terms/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountsReceivableTerms objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "AccountsReceivable/Terms/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountsReceivableTerms objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getTermsById",
            "method": "GET",
            "path": "AccountsReceivable/Terms/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TermsByIdResult",
              "description": "Returns getTermsById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 24,
                  "ownerName": "Sample Text Data",
                  "name": "Net 30",
                  "paymentTermId": 11,
                  "paymentTermName": "Sample Text Data",
                  "paymentDunningRuleId": 3,
                  "paymentDunningRuleName": "Sample Text Data",
                  "isDefault": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountsReceivableTerms object."
              }
            ],
            "description": "Retrieve an instance of the AccountsReceivableTerms object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "AccountsReceivable/Terms/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Net 30",
              "paymentTermId": 9,
              "paymentDunningRuleId": 26,
              "isDefault": true
            },
            "description": "Create a new instance of the AccountsReceivableTerms object."
          },
          {
            "name": "updateTermsById",
            "method": "PUT",
            "path": "AccountsReceivable/Terms/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TermsByIdResult",
              "description": "Returns updateTermsById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 6,
                      "ownerName": "Sample Text Data",
                      "name": "Net 30",
                      "paymentTermId": 16,
                      "paymentTermName": "Sample Text Data",
                      "paymentDunningRuleId": 23,
                      "paymentDunningRuleName": "Sample Text Data",
                      "isDefault": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Net 30",
              "paymentTermId": 10,
              "paymentDunningRuleId": 27,
              "isDefault": true
            },
            "description": "Update an existing instance of the AccountsReceivableTerms object."
          }
        ]
      },
      {
        "name": "Invoice Delivery",
        "source_file": "Invoice-Delivery",
        "endpoints": [
          {
            "name": "deleteDeliveryById",
            "method": "DELETE",
            "path": "Invoice/Delivery/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DeliveryByIdResult",
              "description": "Returns deleteDeliveryById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "invoiceDelivery"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the InvoiceDelivery object."
              }
            ],
            "description": "Delete an instance of the InvoiceDelivery object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Invoice/Delivery/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceDelivery objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Invoice/Delivery/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceDelivery objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Invoice/Delivery/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceDelivery objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getDeliveryById",
            "method": "GET",
            "path": "Invoice/Delivery/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DeliveryByIdResult",
              "description": "Returns getDeliveryById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 25,
                  "ownerName": "Sample Text Data",
                  "name": "Sample Text Data",
                  "templateId": 0,
                  "templateName": "Sample Text Data",
                  "emailTemplateId": 7,
                  "emailTemplateName": "Sample Text Data",
                  "invoiceDeliveryTypeId": 11,
                  "invoiceDeliveryTypeName": "Sample Text Data",
                  "transferLocationId": 1,
                  "transferLocationName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the InvoiceDelivery object."
              }
            ],
            "description": "Retrieve an instance of the InvoiceDelivery object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Invoice/Delivery/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the InvoiceDelivery object."
              }
            ],
            "description": "Retrieve deep detail of the InvoiceDelivery object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchDeliveryById",
            "method": "PATCH",
            "path": "Invoice/Delivery/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchDeliveryByIdResult",
              "description": "Returns patchDeliveryById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "invoiceDelivery",
                      "instance": {
                        "identity": 1,
                        "ownerId": 14,
                        "ownerName": "Sample Text Data",
                        "name": "Sample Text Data",
                        "templateId": 10,
                        "templateName": "Sample Text Data",
                        "emailTemplateId": 18,
                        "emailTemplateName": "Sample Text Data",
                        "invoiceDeliveryTypeId": 24,
                        "invoiceDeliveryTypeName": "Sample Text Data",
                        "transferLocationId": 24,
                        "transferLocationName": "Sample Text Data"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the InvoiceDelivery object."
              }
            ],
            "properties": {
              "details": {},
              "invoiceDeliverys": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "Sample Text Data",
                    "templateId": 13,
                    "emailTemplateId": 17,
                    "invoiceDeliveryTypeId": 26,
                    "transferLocationId": 9
                  }
                ]
              }
            },
            "description": "Update or Add the InvoiceDelivery object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Invoice/Delivery/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Sample Text Data",
              "templateId": 15,
              "emailTemplateId": 4,
              "invoiceDeliveryTypeId": 0,
              "transferLocationId": 10
            },
            "description": "Create a new instance of the InvoiceDelivery object."
          },
          {
            "name": "updateDeliveryById",
            "method": "PUT",
            "path": "Invoice/Delivery/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DeliveryByIdResult",
              "description": "Returns updateDeliveryById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 22,
                      "ownerName": "Sample Text Data",
                      "name": "Sample Text Data",
                      "templateId": 12,
                      "templateName": "Sample Text Data",
                      "emailTemplateId": 9,
                      "emailTemplateName": "Sample Text Data",
                      "invoiceDeliveryTypeId": 25,
                      "invoiceDeliveryTypeName": "Sample Text Data",
                      "transferLocationId": 11,
                      "transferLocationName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Sample Text Data",
              "templateId": 24,
              "emailTemplateId": 16,
              "invoiceDeliveryTypeId": 2,
              "transferLocationId": 24
            },
            "description": "Update an existing instance of the InvoiceDelivery object."
          }
        ]
      },
      {
        "name": "Priceplan Type",
        "source_file": "PricePlan-Type",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "PricePlan/Type/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PricePlanType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "PricePlan/Type/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PricePlanType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getTypeById",
            "method": "GET",
            "path": "PricePlan/Type/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TypeByIdResult",
              "description": "Returns getTypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Avalara",
                  "sortOrder": 17
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PricePlanType object."
              }
            ],
            "description": "Retrieve an instance of the PricePlanType object by its ID."
          }
        ]
      },
      {
        "name": "Rerateschedule",
        "source_file": "RerateSchedule",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "RerateSchedule/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the RerateSchedule objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "RerateSchedule/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the RerateSchedule objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getReratescheduleById",
            "method": "GET",
            "path": "RerateSchedule/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ReratescheduleByIdResult",
              "description": "Returns getReratescheduleById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "start": "2021-04-26T15:25:27.587Z",
                  "complete": "2021-04-26T15:25:27.587Z",
                  "created": "2021-04-26T15:25:27.587Z",
                  "createdByUserId": 26,
                  "createdByUserName": "Sample Text Data",
                  "rerateScheduleStatusTypeId": 24,
                  "rerateScheduleStatusTypeName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the RerateSchedule object."
              }
            ],
            "description": "Retrieve an instance of the RerateSchedule object by its ID."
          }
        ]
      },
      {
        "name": "User",
        "source_file": "User",
        "endpoints": [
          {
            "name": "getUserById",
            "method": "GET",
            "path": "Administration/User/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "UserByIdResult",
              "description": "Returns getUserById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {}
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AdministrationUser object."
              }
            ],
            "description": "Retrieve an instance of the AdministrationUser object by its ID."
          },
          {
            "name": "getLoginhistory",
            "method": "GET",
            "path": "User/{userId}/LoginHistory",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "LoginhistoryResult",
              "description": "Returns getLoginhistory information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {}
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AdministrationUser objects."
          },
          {
            "name": "getLoginhistory",
            "method": "GET",
            "path": "User/{userName}/LoginHistory",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "LoginhistoryResult",
              "description": "Returns getLoginhistory information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {}
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AdministrationUser objects."
          },
          {
            "name": "patchUserById",
            "method": "PATCH",
            "path": "Administration/User/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchUserByIdResult",
              "description": "Returns patchUserById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "administrationUser",
                      "instance": {}
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AdministrationUser object."
              }
            ],
            "properties": {
              "details": {},
              "administrationUsers": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1
                  }
                ]
              }
            },
            "description": "Update or Add the AdministrationUser object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Administration/User/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {},
            "description": "Create a new instance of the AdministrationUser object."
          }
        ]
      },
      {
        "name": "Eventregistration",
        "source_file": "EventRegistration",
        "endpoints": [
          {
            "name": "getExternal",
            "method": "GET",
            "path": "EventRegistration/External",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ExternalResult",
              "description": "Returns getExternal information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "eventDtoTypeKey": "Sample Text Data",
                    "eventActionTypeId": 27,
                    "eventActionTypeName": "Sample Text Data",
                    "eventQueueTypeId": 11,
                    "eventQueueTypeName": "Sample Text Data",
                    "isRetrieved": true,
                    "isTracked": true,
                    "isActive": true,
                    "isInternal": true,
                    "name": "Sample Text Data",
                    "tokenContextTypeId": 23,
                    "tokenContextTypeName": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the EventRegistration objects."
          }
        ]
      },
      {
        "name": "Rerate Now",
        "source_file": "Rerate-Now",
        "endpoints": [
          {
            "name": "create",
            "method": "POST",
            "path": "Rerate/Now/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "rerateScheduleId": 21,
              "accountId": 25,
              "rerateStart": "Sample Text Data",
              "rerateTypeId": 26,
              "createdByUserId": 7,
              "rerateReasonTypeId": 23,
              "entityIdentifier": "Sample Text Data"
            },
            "description": "Create a new instance of the Rerate object."
          }
        ]
      },
      {
        "name": "Service Basetype",
        "source_file": "Service-BaseType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Service/BaseType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ServiceBaseType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Service/BaseType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ServiceBaseType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getBasetypeById",
            "method": "GET",
            "path": "Service/BaseType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BasetypeByIdResult",
              "description": "Returns getBasetypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Recurring Charge",
                  "sortOrder": 20,
                  "tokenName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ServiceBaseType object."
              }
            ],
            "description": "Retrieve an instance of the ServiceBaseType object by its ID."
          }
        ]
      },
      {
        "name": "Dailyusagesummary Byaccountservice",
        "source_file": "DailyUsageSummary-ByAccountService",
        "endpoints": [
          {
            "name": "getPaged",
            "method": "GET",
            "path": "DailyUsageSummary/ByAccountService/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ViewUDRDailyAggregateUsage objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          }
        ]
      },
      {
        "name": "Invoice Exportoptiontype",
        "source_file": "Invoice-ExportOptionType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Invoice/ExportOptionType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceExportOptionType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Invoice/ExportOptionType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceExportOptionType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getExportoptiontypeById",
            "method": "GET",
            "path": "Invoice/ExportOptionType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ExportoptiontypeByIdResult",
              "description": "Returns getExportoptiontypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the InvoiceExportOptionType object."
              }
            ],
            "description": "Retrieve an instance of the InvoiceExportOptionType object by its ID."
          }
        ]
      },
      {
        "name": "State",
        "source_file": "State",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "State/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the State objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "State/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the State objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getStateById",
            "method": "GET",
            "path": "State/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "StateByIdResult",
              "description": "Returns getStateById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "countryId": 8,
                  "countryName": "Sample Text Data",
                  "name": "California",
                  "sortOrder": "1",
                  "code": "CA",
                  "isVisible": true,
                  "ownerId": 1,
                  "ownerName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the State object."
              }
            ],
            "description": "Retrieve an instance of the State object by its ID."
          }
        ]
      },
      {
        "name": "Account Contract Tracking Commitment",
        "source_file": "Account-Contract-Tracking-Commitment.json",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Account/Contract/Tracking/Commitment/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountContractTrackingCommitment objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/Contract/Tracking/Commitment/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountContractTrackingCommitment objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getCommitmentById",
            "method": "GET",
            "path": "Account/Contract/Tracking/Commitment/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CommitmentByIdResult",
              "description": "Returns getCommitmentById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "accountContractId": 19,
                  "accountContractName": "Sample Text Data",
                  "contractCommitmentTypeId": 15,
                  "contractCommitmentTypeName": "Sample Text Data",
                  "penaltyServiceId": 25,
                  "penaltyServiceName": "Sample Text Data",
                  "penaltyDescription": "Minimum quantity commit.",
                  "includeChildAccounts": true,
                  "contractCommitmentPenaltyChargeTypeId": 0,
                  "contractCommitmentPenaltyChargeTypeName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountContractTrackingCommitment object."
              }
            ],
            "description": "Retrieve an instance of the AccountContractTrackingCommitment object by its ID."
          }
        ]
      },
      {
        "name": "Tax Rate",
        "source_file": "Tax-Rate",
        "endpoints": [
          {
            "name": "deleteRateById",
            "method": "DELETE",
            "path": "Tax/Rate/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RateByIdResult",
              "description": "Returns deleteRateById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "usageRate"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the TaxRate object."
              }
            ],
            "description": "Delete an instance of the TaxRate object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Tax/Rate/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TaxRate objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Tax/Rate/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TaxRate objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getRateById",
            "method": "GET",
            "path": "Tax/Rate/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RateByIdResult",
              "description": "Returns getRateById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "usageRateGroupId": 17,
                  "usageRateGroupName": "Sample Text Data",
                  "usageClassId": 12,
                  "usageClassName": "Sample Text Data",
                  "amount": 2.52,
                  "geoTreeLocationId": 21,
                  "geoTreeLocationName": "Sample Text Data",
                  "additional": true,
                  "retired": true,
                  "ownerId": 14,
                  "ownerName": "Sample Text Data",
                  "usageRoundingId": 20,
                  "usageRoundingName": "Sample Text Data",
                  "displayName": "My Rate",
                  "geoTreeLocationGroupId": 7,
                  "geoTreeLocationGroupName": "Sample Text Data",
                  "minimumCharge": 5.34,
                  "usageUnitId": 11,
                  "usageUnitName": "Sample Text Data",
                  "usageRateCalculationTypeId": 14,
                  "usageRateCalculationTypeName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "generalLedgerId": 24,
                  "generalLedgerName": "Sample Text Data",
                  "serviceTaxCategoryId": 3,
                  "serviceTaxCategoryName": "Sample Text Data",
                  "createdByUserId": 11,
                  "createdByUserName": "Sample Text Data",
                  "updatedByUserId": 2,
                  "updatedByUserName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the TaxRate object."
              }
            ],
            "description": "Retrieve an instance of the TaxRate object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Tax/Rate/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "rate": 1.13,
              "name": "VAT",
              "generalLedgerId": 7,
              "displayName": "VAT",
              "taxOnTax": true,
              "systemGenerated": true,
              "taxCategoryId": 21
            },
            "description": "Create a new instance of the TaxRate object."
          },
          {
            "name": "updateRateById",
            "method": "PUT",
            "path": "Tax/Rate/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RateByIdResult",
              "description": "Returns updateRateById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "usageRateGroupId": 6,
                      "usageRateGroupName": "Sample Text Data",
                      "usageClassId": 11,
                      "usageClassName": "Sample Text Data",
                      "amount": 2.52,
                      "geoTreeLocationId": 4,
                      "geoTreeLocationName": "Sample Text Data",
                      "additional": true,
                      "retired": true,
                      "ownerId": 8,
                      "ownerName": "Sample Text Data",
                      "usageRoundingId": 17,
                      "usageRoundingName": "Sample Text Data",
                      "displayName": "My Rate",
                      "geoTreeLocationGroupId": 20,
                      "geoTreeLocationGroupName": "Sample Text Data",
                      "minimumCharge": 5.34,
                      "usageUnitId": 22,
                      "usageUnitName": "Sample Text Data",
                      "usageRateCalculationTypeId": 10,
                      "usageRateCalculationTypeName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "generalLedgerId": 25,
                      "generalLedgerName": "Sample Text Data",
                      "serviceTaxCategoryId": 7,
                      "serviceTaxCategoryName": "Sample Text Data",
                      "createdByUserId": 22,
                      "createdByUserName": "Sample Text Data",
                      "updatedByUserId": 15,
                      "updatedByUserName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "rate": 1.13,
              "name": "VAT",
              "generalLedgerId": 10,
              "displayName": "VAT",
              "taxOnTax": true,
              "systemGenerated": true,
              "taxCategoryId": 18
            },
            "description": "Update an existing instance of the TaxRate object."
          }
        ]
      },
      {
        "name": "Extension Attribute",
        "source_file": "Extension-Attribute",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Extension/Attribute/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ExtensionAttribute objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Extension/Attribute/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ExtensionAttribute objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Extension/Attribute/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ExtensionAttribute objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getAttributeById",
            "method": "GET",
            "path": "Extension/Attribute/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AttributeByIdResult",
              "description": "Returns getAttributeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 9,
                  "ownerName": "Sample Text Data",
                  "name": "CPQ Order Number",
                  "hint": "The number from your CPQ system",
                  "description": "This is the linking order number from our CPQ system",
                  "columnName": "cpqOrderNumber",
                  "defaultValue": "00000",
                  "isRequired": true,
                  "isActive": true,
                  "dataSourceColumnDataTypeId": 16,
                  "dataSourceColumnDataTypeName": "Sample Text Data",
                  "multiSelectDataSourceColumnDataTypeId": 15,
                  "multiSelectDataSourceColumnDataTypeName": "Sample Text Data",
                  "extensionAttributeEntityId": 5,
                  "extensionAttributeEntityName": "Sample Text Data",
                  "isUnique": true,
                  "minValue": "5",
                  "maxValue": "500",
                  "validationDataTypeId": 1,
                  "validationDataTypeName": "Sample Text Data",
                  "validationRegEx": "^[1-9]\\d{2}-\\d{3}-\\d{4}",
                  "formula": "Sample Text Data",
                  "extensionAttributeListTypeId": 20,
                  "extensionAttributeListTypeName": "Sample Text Data",
                  "createdByUserId": 22,
                  "createdByUserName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ExtensionAttribute object."
              }
            ],
            "description": "Retrieve an instance of the ExtensionAttribute object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Extension/Attribute/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ExtensionAttribute object."
              }
            ],
            "description": "Retrieve deep detail of the ExtensionAttribute object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          }
        ]
      },
      {
        "name": "Pricebook",
        "source_file": "PriceBook",
        "endpoints": [
          {
            "name": "deletePricebookById",
            "method": "DELETE",
            "path": "PriceBook/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PricebookByIdResult",
              "description": "Returns deletePricebookById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "priceBook"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PriceBook object."
              }
            ],
            "description": "Delete an instance of the PriceBook object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "PriceBook/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PriceBook objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "PriceBook/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PriceBook objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "PriceBook/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PriceBook objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getPricebookById",
            "method": "GET",
            "path": "PriceBook/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PricebookByIdResult",
              "description": "Returns getPricebookById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 7,
                  "ownerName": "Sample Text Data",
                  "name": "Authorized",
                  "priceBookRegionId": 24,
                  "priceBookRegionName": "Sample Text Data",
                  "description": "Authorized",
                  "isStandard": true,
                  "isActive": true,
                  "created": "2021-04-26T15:25:27.587Z"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PriceBook object."
              }
            ],
            "description": "Retrieve an instance of the PriceBook object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "PriceBook/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PriceBook object."
              }
            ],
            "description": "Retrieve deep detail of the PriceBook object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchPricebookById",
            "method": "PATCH",
            "path": "PriceBook/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchPricebookByIdResult",
              "description": "Returns patchPricebookById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "priceBook",
                      "instance": {
                        "identity": 1,
                        "ownerId": 5,
                        "ownerName": "Sample Text Data",
                        "name": "Authorized",
                        "priceBookRegionId": 4,
                        "priceBookRegionName": "Sample Text Data",
                        "description": "Authorized",
                        "isStandard": true,
                        "isActive": true,
                        "created": "2021-04-26T15:25:27.587Z"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PriceBook object."
              }
            ],
            "properties": {
              "details": {},
              "priceBooks": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "Authorized",
                    "priceBookRegionId": 23,
                    "description": "Authorized",
                    "isStandard": true,
                    "isActive": true
                  }
                ]
              }
            },
            "description": "Update or Add the PriceBook object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "PriceBook/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Authorized",
              "priceBookRegionId": 9,
              "description": "Authorized",
              "isStandard": true,
              "isActive": true
            },
            "description": "Create a new instance of the PriceBook object."
          },
          {
            "name": "updatePricebookById",
            "method": "PUT",
            "path": "PriceBook/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PricebookByIdResult",
              "description": "Returns updatePricebookById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 18,
                      "ownerName": "Sample Text Data",
                      "name": "Authorized",
                      "priceBookRegionId": 11,
                      "priceBookRegionName": "Sample Text Data",
                      "description": "Authorized",
                      "isStandard": true,
                      "isActive": true,
                      "created": "2021-04-26T15:25:27.587Z"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Authorized",
              "priceBookRegionId": 3,
              "description": "Authorized",
              "isStandard": true,
              "isActive": true
            },
            "description": "Update an existing instance of the PriceBook object."
          }
        ]
      },
      {
        "name": "Contract Commitmenttype",
        "source_file": "Contract-CommitmentType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Contract/CommitmentType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ContractCommitmentType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Contract/CommitmentType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ContractCommitmentType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getCommitmenttypeById",
            "method": "GET",
            "path": "Contract/CommitmentType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CommitmenttypeByIdResult",
              "description": "Returns getCommitmenttypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Invoice Amount",
                  "sortOrder": 14
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ContractCommitmentType object."
              }
            ],
            "description": "Retrieve an instance of the ContractCommitmentType object by its ID."
          }
        ]
      },
      {
        "name": "Dataimport",
        "source_file": "DataImport",
        "endpoints": [
          {
            "name": "getLastupload",
            "method": "GET",
            "path": "DataImport/{id}/LastUpload",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "LastuploadResult",
              "description": "Returns getLastupload information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 5,
                  "ownerName": "Sample Text Data",
                  "name": "Sample Text Data",
                  "dataProfileId": 17,
                  "dataProfileName": "Sample Text Data",
                  "envelopesPerRequest": 0,
                  "patchesPerEnvelope": 6,
                  "stopOnError": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the DataImport object."
              }
            ],
            "description": "Retrieve the most recent DataImportUpload instance."
          }
        ]
      },
      {
        "name": "Account",
        "source_file": "Account.json",
        "endpoints": [
          {
            "name": "deleteAccountById",
            "method": "DELETE",
            "path": "Account/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AccountByIdResult",
              "description": "Returns deleteAccountById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "account"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              }
            ],
            "description": "Delete an instance of the Account object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "deleteContact",
            "method": "DELETE",
            "path": "Account/{id}/Contact",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ContactResult",
              "description": "Returns deleteContact information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "account"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              },
              {
                "name": "contactId",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Contact object sent down in the body of the request in JSON format.{\n    \"details\": {\n        \"items\": [\n            {\n                \"identity\": 1\n            }\n        ]\n    }\n}"
              }
            ],
            "description": "Delete a Contact object from the Account. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "deleteContactid",
            "method": "DELETE",
            "path": "Account/{id}/Contact/{contactId}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ContactidResult",
              "description": "Returns deleteContactid information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "account"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              },
              {
                "name": "contact/{contactid}Id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Contact/{contactId} object sent down in the body of the request in JSON format.{\n    \"details\": {\n        \"items\": [\n            {\n                \"identity\": 1\n            }\n        ]\n    }\n}"
              }
            ],
            "description": "Delete a Contact/{contactId} object from the Account. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "deleteNote",
            "method": "DELETE",
            "path": "Account/{id}/Note",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "NoteResult",
              "description": "Returns deleteNote information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "account"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              },
              {
                "name": "noteId",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Note object sent down in the body of the request in JSON format.{\n    \"details\": {\n        \"items\": [\n            {\n                \"identity\": 1\n            }\n        ]\n    }\n}"
              }
            ],
            "description": "Delete a Note object from the Account. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "deleteNoteid",
            "method": "DELETE",
            "path": "Account/{id}/Note/{noteId}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "NoteidResult",
              "description": "Returns deleteNoteid information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "account"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              },
              {
                "name": "note/{noteid}Id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Note/{noteId} object sent down in the body of the request in JSON format.{\n    \"details\": {\n        \"items\": [\n            {\n                \"identity\": 1\n            }\n        ]\n    }\n}"
              }
            ],
            "description": "Delete a Note/{noteId} object from the Account. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Account/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Account objects."
          },
          {
            "name": "getBybillingcontact",
            "method": "GET",
            "path": "Account/ByBillingContact",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BybillingcontactResult",
              "description": "Returns getBybillingcontact information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "currencyId": 16,
                    "currencyName": "Sample Text Data",
                    "ownerId": 1,
                    "ownerName": "Sample Text Data",
                    "name": "My Account",
                    "created": "2021-04-26T15:25:27.587Z",
                    "accountStatusTypeId": 13,
                    "accountStatusTypeName": "Sample Text Data",
                    "billGroupId": 25,
                    "billGroupName": "Sample Text Data",
                    "actingOwnerId": 8,
                    "actingOwnerName": "Sample Text Data",
                    "updated": "2021-04-26T15:25:27.587Z",
                    "effectiveCancel": "2021-04-26T15:25:27.587Z",
                    "invoiceDeliveryId": 21,
                    "invoiceDeliveryName": "Sample Text Data",
                    "accountsReceivableTermsId": 1,
                    "accountsReceivableTermsName": "Sample Text Data",
                    "accountTypeId": 26,
                    "accountTypeName": "Sample Text Data",
                    "billDay": 1,
                    "accountTaxCategoryId": 19,
                    "accountTaxCategoryName": "Sample Text Data",
                    "taxCodeId": 11,
                    "taxCodeName": "Sample Text Data",
                    "invoicerAccountId": "My Invoicer Account",
                    "invoicerAccountName": "Sample Text Data",
                    "usageInvoicerAccountId": "My Usage Invoicer Account",
                    "usageInvoicerAccountName": "Sample Text Data",
                    "taxSettingAccountId": "My Usage Invoicer Account",
                    "taxSettingAccountName": "Sample Text Data",
                    "usageBillDay": 1,
                    "isReadOnlyBillDay": true,
                    "isReadOnlyUsageBillDay": false,
                    "displayName": "My Account Display Name",
                    "createdByUserId": 27,
                    "createdByUserName": "Sample Text Data",
                    "pendingBillDay": "15",
                    "pendingUsageBillDay": "15",
                    "lifeline": false,
                    "externalAccountIdentifier": "ExternalID-2001",
                    "vATNumber": "VAT499001",
                    "eInvoiceEndpointId": "01394200362",
                    "eInvoiceSchemeId": "9935",
                    "zeroInclusiveTaxWhenExempt": false,
                    "defaultPaymentGatewayId": 14,
                    "defaultPaymentGatewayName": "Sample Text Data",
                    "defaultAdyenMerchantAccountId": 8,
                    "defaultAdyenMerchantAccountName": "Sample Text Data",
                    "id": 12
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Account objects."
          },
          {
            "name": "getByextension",
            "method": "GET",
            "path": "Account/ByExtension",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ByextensionResult",
              "description": "Returns getByextension information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "accountId": 22,
                    "accountName": "Sample Text Data",
                    "created": "2021-04-26T15:25:27.587Z",
                    "nextBill": "2021-04-26T15:25:27.587Z",
                    "name": "Sample Text Data",
                    "lastStatusChanged": "2021-04-26T15:25:27.587Z",
                    "effective": "2021-04-26T15:25:27.587Z",
                    "updated": "2021-04-26T15:25:27.587Z",
                    "effectiveCancel": "2021-04-26T15:25:27.587Z",
                    "packageFrequencyId": 7,
                    "packageFrequencyName": "Sample Text Data",
                    "createdByUserId": 16,
                    "createdByUserName": "Sample Text Data",
                    "billDay": 7,
                    "updatedByUserId": 7,
                    "updatedByUserName": "Sample Text Data",
                    "usageBillDay": 7,
                    "activation": "2021-04-26T15:25:27.587Z",
                    "finalBill": "2021-04-26T15:25:27.587Z",
                    "lastBilled": "2021-04-26T15:25:27.587Z",
                    "accountSharePlanId": 6,
                    "accountSharePlanName": "Sample Text Data",
                    "lastUsageBilled": "2021-04-26T15:25:27.587Z",
                    "accountProductCodeId": 6,
                    "accountProductCodeName": "Sample Text Data",
                    "packageCategoryId": 0,
                    "packageCategoryName": "Sample Text Data",
                    "chargeRecurringIfUsage": true,
                    "updatedByPortalUserId": 25,
                    "updatedByPortalUserName": "Sample Text Data",
                    "pendingBillDay": "15",
                    "pendingUsageBillDay": "15",
                    "billCancelOptionTypeId": 26,
                    "billCancelOptionTypeName": "Sample Text Data",
                    "waiveEarlyTerminationFee": false,
                    "billingActivationTypeId": 13,
                    "billingActivationTypeName": "Sample Text Data",
                    "quantity": "1",
                    "isQuantityAllowed": false,
                    "importLastBilled": "2021-04-26T15:25:27.587Z",
                    "priceBookId": 19,
                    "priceBookName": "Sample Text Data",
                    "accountContractId": 5,
                    "accountContractName": "Sample Text Data",
                    "taxAddressId": 26,
                    "taxAddressName": "Sample Text Data",
                    "id": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Account objects."
          },
          {
            "name": "getByhierarchy",
            "method": "GET",
            "path": "Account/ByHierarchy",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ByhierarchyResult",
              "description": "Returns getByhierarchy information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "currencyId": 1,
                    "currencyName": "Sample Text Data",
                    "ownerId": 21,
                    "ownerName": "Sample Text Data",
                    "name": "My Account",
                    "created": "2021-04-26T15:25:27.587Z",
                    "accountStatusTypeId": 15,
                    "accountStatusTypeName": "Sample Text Data",
                    "billGroupId": 3,
                    "billGroupName": "Sample Text Data",
                    "actingOwnerId": 24,
                    "actingOwnerName": "Sample Text Data",
                    "updated": "2021-04-26T15:25:27.587Z",
                    "effectiveCancel": "2021-04-26T15:25:27.587Z",
                    "invoiceDeliveryId": 1,
                    "invoiceDeliveryName": "Sample Text Data",
                    "accountsReceivableTermsId": 25,
                    "accountsReceivableTermsName": "Sample Text Data",
                    "accountTypeId": 6,
                    "accountTypeName": "Sample Text Data",
                    "billDay": 1,
                    "accountTaxCategoryId": 13,
                    "accountTaxCategoryName": "Sample Text Data",
                    "taxCodeId": 5,
                    "taxCodeName": "Sample Text Data",
                    "invoicerAccountId": "My Invoicer Account",
                    "invoicerAccountName": "Sample Text Data",
                    "usageInvoicerAccountId": "My Usage Invoicer Account",
                    "usageInvoicerAccountName": "Sample Text Data",
                    "taxSettingAccountId": "My Usage Invoicer Account",
                    "taxSettingAccountName": "Sample Text Data",
                    "usageBillDay": 1,
                    "isReadOnlyBillDay": true,
                    "isReadOnlyUsageBillDay": false,
                    "displayName": "My Account Display Name",
                    "createdByUserId": 20,
                    "createdByUserName": "Sample Text Data",
                    "pendingBillDay": "15",
                    "pendingUsageBillDay": "15",
                    "lifeline": false,
                    "externalAccountIdentifier": "ExternalID-2001",
                    "vATNumber": "VAT499001",
                    "eInvoiceEndpointId": "01394200362",
                    "eInvoiceSchemeId": "9935",
                    "zeroInclusiveTaxWhenExempt": false,
                    "defaultPaymentGatewayId": 9,
                    "defaultPaymentGatewayName": "Sample Text Data",
                    "defaultAdyenMerchantAccountId": 19,
                    "defaultAdyenMerchantAccountName": "Sample Text Data",
                    "id": 14
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Account objects."
          },
          {
            "name": "getByname",
            "method": "GET",
            "path": "Account/ByName",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BynameResult",
              "description": "Returns getByname information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "accountId": 16,
                    "accountName": "Sample Text Data",
                    "name": "Sample Text Data",
                    "date": "2021-04-26T15:25:27.587Z",
                    "sent": "2021-04-26T15:25:27.587Z",
                    "due": "2021-04-26T15:25:27.587Z",
                    "lastChecked": "2021-04-26T15:25:27.587Z",
                    "invoiceStatusTypeId": 5,
                    "invoiceStatusTypeName": "Sample Text Data",
                    "processed": "2021-04-26T15:25:27.587Z",
                    "billRunHistoryId": 9,
                    "billRunHistoryName": "Sample Text Data",
                    "previousBalance": 102.52,
                    "balance": 202.52,
                    "created": "2021-04-26T15:25:27.587Z",
                    "closed": "2021-04-26T15:25:27.587Z",
                    "total": 100.15,
                    "totalCharge": 100.15,
                    "totalTax": 12.15,
                    "totalDiscount": 10.36,
                    "totalPaymentApplied": 12.36,
                    "totalCreditApplied": 11.36,
                    "totalPaymentAttached": 7.36,
                    "totalCreditAttached": 5.34,
                    "baseTotal": 100.15,
                    "baseTotalCharge": 100.15,
                    "baseTotalDiscount": 10.36,
                    "baseTotalPaymentApplied": 12.36,
                    "baseTotalCreditApplied": 11.36,
                    "baseTotalPaymentAttached": 7.36,
                    "baseTotalCreditAttached": 5.34,
                    "baseBalance": 5.34,
                    "baseTotalTax": 12.15,
                    "basePreviousBalance": 102.52,
                    "isVoid": true,
                    "isVoiding": true,
                    "doNotDeliver": true,
                    "updated": "2021-04-26T15:25:27.587Z"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Account objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Account objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Account/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Account objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getAccountById",
            "method": "GET",
            "path": "Account/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AccountByIdResult",
              "description": "Returns getAccountById information"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              }
            ],
            "description": "Retrieve an instance of the Account object by its ID."
          },
          {
            "name": "getBalance",
            "method": "GET",
            "path": "Account/{id}/Balance",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BalanceResult",
              "description": "Returns getBalance information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "currencyId": 19,
                  "currencyName": "Sample Text Data",
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "My Account",
                  "created": "2021-04-26T15:25:27.587Z",
                  "accountStatusTypeId": 5,
                  "accountStatusTypeName": "Sample Text Data",
                  "billGroupId": 6,
                  "billGroupName": "Sample Text Data",
                  "actingOwnerId": 27,
                  "actingOwnerName": "Sample Text Data",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "effectiveCancel": "2021-04-26T15:25:27.587Z",
                  "invoiceDeliveryId": 1,
                  "invoiceDeliveryName": "Sample Text Data",
                  "accountsReceivableTermsId": 7,
                  "accountsReceivableTermsName": "Sample Text Data",
                  "accountTypeId": 13,
                  "accountTypeName": "Sample Text Data",
                  "billDay": 1,
                  "accountTaxCategoryId": 25,
                  "accountTaxCategoryName": "Sample Text Data",
                  "taxCodeId": 3,
                  "taxCodeName": "Sample Text Data",
                  "invoicerAccountId": "My Invoicer Account",
                  "invoicerAccountName": "Sample Text Data",
                  "usageInvoicerAccountId": "My Usage Invoicer Account",
                  "usageInvoicerAccountName": "Sample Text Data",
                  "taxSettingAccountId": "My Usage Invoicer Account",
                  "taxSettingAccountName": "Sample Text Data",
                  "usageBillDay": 1,
                  "isReadOnlyBillDay": true,
                  "isReadOnlyUsageBillDay": false,
                  "displayName": "My Account Display Name",
                  "createdByUserId": 11,
                  "createdByUserName": "Sample Text Data",
                  "pendingBillDay": "15",
                  "pendingUsageBillDay": "15",
                  "lifeline": false,
                  "externalAccountIdentifier": "ExternalID-2001",
                  "vATNumber": "VAT499001",
                  "eInvoiceEndpointId": "01394200362",
                  "eInvoiceSchemeId": "9935",
                  "zeroInclusiveTaxWhenExempt": false,
                  "defaultPaymentGatewayId": 23,
                  "defaultPaymentGatewayName": "Sample Text Data",
                  "defaultAdyenMerchantAccountId": 14,
                  "defaultAdyenMerchantAccountName": "Sample Text Data",
                  "id": 17
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              }
            ],
            "description": "Retrieve the Account Balance and the Balance Due for a specified Account ID."
          },
          {
            "name": "getContact",
            "method": "GET",
            "path": "Account/{id}/Contact",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ContactResult",
              "description": "Returns getContact information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "details": {
                    "totalCount": 1,
                    "items": [
                      {
                        "identity": 1,
                        "contactTypeId": 15,
                        "contactTypeName": "Sample Text Data",
                        "title": "Sample Text Data",
                        "firstName": "Sample Text Data",
                        "lastName": "Sample Text Data",
                        "isUsedForTax": true,
                        "updated": "2021-04-26T15:25:27.587Z"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              }
            ],
            "description": "Retrieve all of the Contact objects for the specified Account."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/{id}/Contact/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              }
            ],
            "description": "Retrieve all of the Contact objects for a specified Account in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getContactid",
            "method": "GET",
            "path": "Account/{id}/Contact/{contactId}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ContactidResult",
              "description": "Returns getContactid information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "details": {
                    "totalCount": 1,
                    "items": [
                      {
                        "identity": 1,
                        "contactTypeId": 4,
                        "contactTypeName": "Sample Text Data",
                        "title": "Sample Text Data",
                        "firstName": "Sample Text Data",
                        "lastName": "Sample Text Data",
                        "isUsedForTax": true,
                        "updated": "2021-04-26T15:25:27.587Z"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              },
              {
                "name": "contactId",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Contact object."
              }
            ],
            "description": "Retrieve a specified Contact object by its ID for a specified Account."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Account/{id}/Contact/{contactId}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              }
            ],
            "description": "Retrieve deep detail of the Account object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Account/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              }
            ],
            "description": "Retrieve deep detail of the Account object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getNote",
            "method": "GET",
            "path": "Account/{id}/Note",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "NoteResult",
              "description": "Returns getNote information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "details": {
                    "totalCount": 1,
                    "items": [
                      {
                        "identity": 1,
                        "subject": "Sample Text Data",
                        "text": "Sample Text Data",
                        "noteTypeId": 10,
                        "noteTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "createdByUserId": 19,
                        "createdByUserName": "Sample Text Data",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "updatedByUserId": 11,
                        "updatedByUserName": "Sample Text Data",
                        "showOnOverview": true,
                        "isImportant": true
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              }
            ],
            "description": "Retrieve all of the Note objects for the specified Account."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/{id}/Note/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              }
            ],
            "description": "Retrieve all of the Note objects for a specified Account in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getNoteid",
            "method": "GET",
            "path": "Account/{id}/Note/{noteId}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "NoteidResult",
              "description": "Returns getNoteid information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "details": {
                    "totalCount": 1,
                    "items": [
                      {
                        "identity": 1,
                        "subject": "Sample Text Data",
                        "text": "Sample Text Data",
                        "noteTypeId": 22,
                        "noteTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "createdByUserId": 13,
                        "createdByUserName": "Sample Text Data",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "updatedByUserId": 24,
                        "updatedByUserName": "Sample Text Data",
                        "showOnOverview": true,
                        "isImportant": true
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              },
              {
                "name": "noteId",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Note object."
              }
            ],
            "description": "Retrieve a specified Note object by its ID for a specified Account."
          },
          {
            "name": "getTaxaddress",
            "method": "GET",
            "path": "Account/{id}/TaxAddress",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TaxaddressResult",
              "description": "Returns getTaxaddress information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "currencyId": 17,
                  "currencyName": "Sample Text Data",
                  "ownerId": 13,
                  "ownerName": "Sample Text Data",
                  "name": "My Account",
                  "created": "2021-04-26T15:25:27.587Z",
                  "accountStatusTypeId": 25,
                  "accountStatusTypeName": "Sample Text Data",
                  "billGroupId": 0,
                  "billGroupName": "Sample Text Data",
                  "actingOwnerId": 11,
                  "actingOwnerName": "Sample Text Data",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "effectiveCancel": "2021-04-26T15:25:27.587Z",
                  "invoiceDeliveryId": 2,
                  "invoiceDeliveryName": "Sample Text Data",
                  "accountsReceivableTermsId": 17,
                  "accountsReceivableTermsName": "Sample Text Data",
                  "accountTypeId": 18,
                  "accountTypeName": "Sample Text Data",
                  "billDay": 1,
                  "accountTaxCategoryId": 27,
                  "accountTaxCategoryName": "Sample Text Data",
                  "taxCodeId": 21,
                  "taxCodeName": "Sample Text Data",
                  "invoicerAccountId": "My Invoicer Account",
                  "invoicerAccountName": "Sample Text Data",
                  "usageInvoicerAccountId": "My Usage Invoicer Account",
                  "usageInvoicerAccountName": "Sample Text Data",
                  "taxSettingAccountId": "My Usage Invoicer Account",
                  "taxSettingAccountName": "Sample Text Data",
                  "usageBillDay": 1,
                  "isReadOnlyBillDay": true,
                  "isReadOnlyUsageBillDay": false,
                  "displayName": "My Account Display Name",
                  "createdByUserId": 17,
                  "createdByUserName": "Sample Text Data",
                  "pendingBillDay": "15",
                  "pendingUsageBillDay": "15",
                  "lifeline": false,
                  "externalAccountIdentifier": "ExternalID-2001",
                  "vATNumber": "VAT499001",
                  "eInvoiceEndpointId": "01394200362",
                  "eInvoiceSchemeId": "9935",
                  "zeroInclusiveTaxWhenExempt": false,
                  "defaultPaymentGatewayId": 2,
                  "defaultPaymentGatewayName": "Sample Text Data",
                  "defaultAdyenMerchantAccountId": 5,
                  "defaultAdyenMerchantAccountName": "Sample Text Data",
                  "id": 16
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              }
            ],
            "description": "Retrieve the Tax Address details for a specified Account ID."
          },
          {
            "name": "getAvailablefor",
            "method": "GET",
            "path": "Account/{id}/TaxAddress/AvailableFor",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AvailableforResult",
              "description": "Returns getAvailablefor information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "currencyId": 2,
                  "currencyName": "Sample Text Data",
                  "ownerId": 5,
                  "ownerName": "Sample Text Data",
                  "name": "My Account",
                  "created": "2021-04-26T15:25:27.587Z",
                  "accountStatusTypeId": 18,
                  "accountStatusTypeName": "Sample Text Data",
                  "billGroupId": 8,
                  "billGroupName": "Sample Text Data",
                  "actingOwnerId": 27,
                  "actingOwnerName": "Sample Text Data",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "effectiveCancel": "2021-04-26T15:25:27.587Z",
                  "invoiceDeliveryId": 27,
                  "invoiceDeliveryName": "Sample Text Data",
                  "accountsReceivableTermsId": 20,
                  "accountsReceivableTermsName": "Sample Text Data",
                  "accountTypeId": 18,
                  "accountTypeName": "Sample Text Data",
                  "billDay": 1,
                  "accountTaxCategoryId": 23,
                  "accountTaxCategoryName": "Sample Text Data",
                  "taxCodeId": 10,
                  "taxCodeName": "Sample Text Data",
                  "invoicerAccountId": "My Invoicer Account",
                  "invoicerAccountName": "Sample Text Data",
                  "usageInvoicerAccountId": "My Usage Invoicer Account",
                  "usageInvoicerAccountName": "Sample Text Data",
                  "taxSettingAccountId": "My Usage Invoicer Account",
                  "taxSettingAccountName": "Sample Text Data",
                  "usageBillDay": 1,
                  "isReadOnlyBillDay": true,
                  "isReadOnlyUsageBillDay": false,
                  "displayName": "My Account Display Name",
                  "createdByUserId": 0,
                  "createdByUserName": "Sample Text Data",
                  "pendingBillDay": "15",
                  "pendingUsageBillDay": "15",
                  "lifeline": false,
                  "externalAccountIdentifier": "ExternalID-2001",
                  "vATNumber": "VAT499001",
                  "eInvoiceEndpointId": "01394200362",
                  "eInvoiceSchemeId": "9935",
                  "zeroInclusiveTaxWhenExempt": false,
                  "defaultPaymentGatewayId": 25,
                  "defaultPaymentGatewayName": "Sample Text Data",
                  "defaultAdyenMerchantAccountId": 14,
                  "defaultAdyenMerchantAccountName": "Sample Text Data",
                  "id": 12
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              }
            ],
            "description": "Retrieve the Tax Address details for a specified Account ID."
          },
          {
            "name": "patchAccountById",
            "method": "PATCH",
            "path": "Account/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchAccountByIdResult",
              "description": "Returns patchAccountById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "account",
                      "instance": {
                        "identity": 1,
                        "currencyId": 12,
                        "currencyName": "Sample Text Data",
                        "ownerId": 24,
                        "ownerName": "Sample Text Data",
                        "name": "My Account",
                        "created": "2021-04-26T15:25:27.587Z",
                        "accountStatusTypeId": 20,
                        "accountStatusTypeName": "Sample Text Data",
                        "billGroupId": 3,
                        "billGroupName": "Sample Text Data",
                        "actingOwnerId": 20,
                        "actingOwnerName": "Sample Text Data",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "effectiveCancel": "2021-04-26T15:25:27.587Z",
                        "invoiceDeliveryId": 8,
                        "invoiceDeliveryName": "Sample Text Data",
                        "accountsReceivableTermsId": 5,
                        "accountsReceivableTermsName": "Sample Text Data",
                        "accountTypeId": 20,
                        "accountTypeName": "Sample Text Data",
                        "billDay": 1,
                        "accountTaxCategoryId": 7,
                        "accountTaxCategoryName": "Sample Text Data",
                        "taxCodeId": 14,
                        "taxCodeName": "Sample Text Data",
                        "invoicerAccountId": "My Invoicer Account",
                        "invoicerAccountName": "Sample Text Data",
                        "usageInvoicerAccountId": "My Usage Invoicer Account",
                        "usageInvoicerAccountName": "Sample Text Data",
                        "taxSettingAccountId": "My Usage Invoicer Account",
                        "taxSettingAccountName": "Sample Text Data",
                        "usageBillDay": 1,
                        "isReadOnlyBillDay": true,
                        "isReadOnlyUsageBillDay": false,
                        "displayName": "My Account Display Name",
                        "createdByUserId": 24,
                        "createdByUserName": "Sample Text Data",
                        "pendingBillDay": "15",
                        "pendingUsageBillDay": "15",
                        "lifeline": false,
                        "externalAccountIdentifier": "ExternalID-2001",
                        "vATNumber": "VAT499001",
                        "eInvoiceEndpointId": "01394200362",
                        "eInvoiceSchemeId": "9935",
                        "zeroInclusiveTaxWhenExempt": false,
                        "defaultPaymentGatewayId": 23,
                        "defaultPaymentGatewayName": "Sample Text Data",
                        "defaultAdyenMerchantAccountId": 2,
                        "defaultAdyenMerchantAccountName": "Sample Text Data",
                        "id": 5
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              }
            ],
            "properties": {
              "patchType": "create",
              "patchClientId": 1,
              "currencyId": 12,
              "name": "My Account",
              "accountStatusTypeId": 23,
              "billGroupId": 25,
              "updated": "2021-04-26T15:25:27.587Z",
              "effectiveCancel": "2021-04-26T15:25:27.587Z",
              "invoiceDeliveryId": 1,
              "accountsReceivableTermsId": 25,
              "accountTypeId": 9,
              "billDay": 1,
              "accountTaxCategoryId": 16,
              "taxCodeId": 11,
              "invoicerAccountId": "My Invoicer Account",
              "usageInvoicerAccountId": "My Usage Invoicer Account",
              "taxSettingAccountId": "My Usage Invoicer Account",
              "usageBillDay": 1,
              "isReadOnlyBillDay": true,
              "isReadOnlyUsageBillDay": false,
              "displayName": "My Account Display Name",
              "createdByUserId": 16,
              "pendingBillDay": "15",
              "pendingUsageBillDay": "15",
              "lifeline": false,
              "externalAccountIdentifier": "ExternalID-2001",
              "vATNumber": "VAT499001",
              "eInvoiceEndpointId": "01394200362",
              "eInvoiceSchemeId": "9935",
              "zeroInclusiveTaxWhenExempt": false,
              "defaultPaymentGatewayId": 14,
              "defaultAdyenMerchantAccountId": 17,
              "id": 5
            },
            "description": "Update or Add the Account object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Account/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Create a new instance of the Account object."
          },
          {
            "name": "createContact",
            "method": "POST",
            "path": "Account/{id}/Contact",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ContactResult",
              "description": "Returns createContact information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "contactTypeId": 26,
                      "contactTypeName": "Sample Text Data",
                      "title": "Sample Text Data",
                      "firstName": "Sample Text Data",
                      "lastName": "Sample Text Data",
                      "isUsedForTax": true,
                      "updated": "2021-04-26T15:25:27.587Z"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              }
            ],
            "properties": {
              "contactTypeId": 15,
              "title": "Sample Text Data",
              "firstName": "Sample Text Data",
              "lastName": "Sample Text Data",
              "isUsedForTax": true,
              "updated": "2021-04-26T15:25:27.587Z"
            },
            "description": "Create a new instance of a Contact object that belongs to the Account."
          },
          {
            "name": "createNote",
            "method": "POST",
            "path": "Account/{id}/Note",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "NoteResult",
              "description": "Returns createNote information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "subject": "Sample Text Data",
                      "text": "Sample Text Data",
                      "noteTypeId": 25,
                      "noteTypeName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "createdByUserId": 5,
                      "createdByUserName": "Sample Text Data",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "updatedByUserId": 19,
                      "updatedByUserName": "Sample Text Data",
                      "showOnOverview": true,
                      "isImportant": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              }
            ],
            "properties": {
              "subject": "Sample Text Data",
              "text": "Sample Text Data",
              "noteTypeId": 19,
              "createdByUserId": 0,
              "updatedByUserId": 9,
              "showOnOverview": true,
              "isImportant": true
            },
            "description": "Create a new instance of a Note object that belongs to the Account."
          },
          {
            "name": "createPatch",
            "method": "POST",
            "path": "Account/{id}/Patch",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PatchResult",
              "description": "Returns createPatch information"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              }
            ],
            "description": "This method is only created as work around in order to provide PATCH capability for Salesforce that can only submit POST calls. Typically an internal API with limited use."
          },
          {
            "name": "updateAccountById",
            "method": "PUT",
            "path": "Account/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AccountByIdResult",
              "description": "Returns updateAccountById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "currencyId": 17,
                      "currencyName": "Sample Text Data",
                      "ownerId": 6,
                      "ownerName": "Sample Text Data",
                      "name": "My Account",
                      "created": "2021-04-26T15:25:27.587Z",
                      "accountStatusTypeId": 26,
                      "accountStatusTypeName": "Sample Text Data",
                      "billGroupId": 3,
                      "billGroupName": "Sample Text Data",
                      "actingOwnerId": 6,
                      "actingOwnerName": "Sample Text Data",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "effectiveCancel": "2021-04-26T15:25:27.587Z",
                      "invoiceDeliveryId": 25,
                      "invoiceDeliveryName": "Sample Text Data",
                      "accountsReceivableTermsId": 16,
                      "accountsReceivableTermsName": "Sample Text Data",
                      "accountTypeId": 1,
                      "accountTypeName": "Sample Text Data",
                      "billDay": 1,
                      "accountTaxCategoryId": 21,
                      "accountTaxCategoryName": "Sample Text Data",
                      "taxCodeId": 7,
                      "taxCodeName": "Sample Text Data",
                      "invoicerAccountId": "My Invoicer Account",
                      "invoicerAccountName": "Sample Text Data",
                      "usageInvoicerAccountId": "My Usage Invoicer Account",
                      "usageInvoicerAccountName": "Sample Text Data",
                      "taxSettingAccountId": "My Usage Invoicer Account",
                      "taxSettingAccountName": "Sample Text Data",
                      "usageBillDay": 1,
                      "isReadOnlyBillDay": true,
                      "isReadOnlyUsageBillDay": false,
                      "displayName": "My Account Display Name",
                      "createdByUserId": 9,
                      "createdByUserName": "Sample Text Data",
                      "pendingBillDay": "15",
                      "pendingUsageBillDay": "15",
                      "lifeline": false,
                      "externalAccountIdentifier": "ExternalID-2001",
                      "vATNumber": "VAT499001",
                      "eInvoiceEndpointId": "01394200362",
                      "eInvoiceSchemeId": "9935",
                      "zeroInclusiveTaxWhenExempt": false,
                      "defaultPaymentGatewayId": 10,
                      "defaultPaymentGatewayName": "Sample Text Data",
                      "defaultAdyenMerchantAccountId": 1,
                      "defaultAdyenMerchantAccountName": "Sample Text Data",
                      "id": 25
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "currencyId": 1,
              "name": "My Account",
              "accountStatusTypeId": 12,
              "billGroupId": 15,
              "updated": "2021-04-26T15:25:27.587Z",
              "effectiveCancel": "2021-04-26T15:25:27.587Z",
              "invoiceDeliveryId": 18,
              "accountsReceivableTermsId": 27,
              "accountTypeId": 26,
              "billDay": 1,
              "accountTaxCategoryId": 10,
              "taxCodeId": 0,
              "invoicerAccountId": "My Invoicer Account",
              "usageInvoicerAccountId": "My Usage Invoicer Account",
              "taxSettingAccountId": "My Usage Invoicer Account",
              "usageBillDay": 1,
              "isReadOnlyBillDay": true,
              "isReadOnlyUsageBillDay": false,
              "displayName": "My Account Display Name",
              "createdByUserId": 14,
              "pendingBillDay": "15",
              "pendingUsageBillDay": "15",
              "lifeline": false,
              "externalAccountIdentifier": "ExternalID-2001",
              "vATNumber": "VAT499001",
              "eInvoiceEndpointId": "01394200362",
              "eInvoiceSchemeId": "9935",
              "zeroInclusiveTaxWhenExempt": false,
              "defaultPaymentGatewayId": 19,
              "defaultAdyenMerchantAccountId": 12,
              "id": 3
            },
            "description": "Update an existing instance of the Account object."
          },
          {
            "name": "updateContact",
            "method": "PUT",
            "path": "Account/{id}/Contact",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ContactResult",
              "description": "Returns updateContact information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "contactTypeId": 20,
                      "contactTypeName": "Sample Text Data",
                      "title": "Sample Text Data",
                      "firstName": "Sample Text Data",
                      "lastName": "Sample Text Data",
                      "isUsedForTax": true,
                      "updated": "2021-04-26T15:25:27.587Z"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              }
            ],
            "properties": {
              "identity": 1,
              "contactTypeId": 18,
              "title": "Sample Text Data",
              "firstName": "Sample Text Data",
              "lastName": "Sample Text Data",
              "isUsedForTax": true,
              "updated": "2021-04-26T15:25:27.587Z"
            },
            "description": "Update an existing instance of a Contact object that belongs to the Account."
          },
          {
            "name": "updateNote",
            "method": "PUT",
            "path": "Account/{id}/Note",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "NoteResult",
              "description": "Returns updateNote information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "subject": "Sample Text Data",
                      "text": "Sample Text Data",
                      "noteTypeId": 23,
                      "noteTypeName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "createdByUserId": 4,
                      "createdByUserName": "Sample Text Data",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "updatedByUserId": 18,
                      "updatedByUserName": "Sample Text Data",
                      "showOnOverview": true,
                      "isImportant": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              }
            ],
            "properties": {
              "identity": 1,
              "subject": "Sample Text Data",
              "text": "Sample Text Data",
              "noteTypeId": 23,
              "createdByUserId": 10,
              "updatedByUserId": 17,
              "showOnOverview": true,
              "isImportant": true
            },
            "description": "Update an existing instance of a Note object that belongs to the Account."
          }
        ]
      },
      {
        "name": "Invoice Byudrmediated",
        "source_file": "Invoice-ByUdrMediated",
        "endpoints": [
          {
            "name": "getByudrmediatedById",
            "method": "GET",
            "path": "Invoice/ByUdrMediated/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ByudrmediatedByIdResult",
              "description": "Returns getByudrmediatedById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {}
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the InvoiceByUdrMediated object."
              }
            ],
            "description": "Retrieve an instance of the InvoiceByUdrMediated object by its ID."
          }
        ]
      },
      {
        "name": "Geotree Location",
        "source_file": "GeoTree-Location",
        "endpoints": [
          {
            "name": "deleteLocationById",
            "method": "DELETE",
            "path": "GeoTree/Location/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "LocationByIdResult",
              "description": "Returns deleteLocationById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "geoTreeLocation"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the GeoTreeLocation object."
              }
            ],
            "description": "Delete an instance of the GeoTreeLocation object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "GeoTree/Location/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the GeoTreeLocation objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "GeoTree/Location/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the GeoTreeLocation objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "GeoTree/Location/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the GeoTreeLocation objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getLocationById",
            "method": "GET",
            "path": "GeoTree/Location/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "LocationByIdResult",
              "description": "Returns getLocationById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "United States",
                  "depth": 11
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the GeoTreeLocation object."
              }
            ],
            "description": "Retrieve an instance of the GeoTreeLocation object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "GeoTree/Location/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the GeoTreeLocation object."
              }
            ],
            "description": "Retrieve deep detail of the GeoTreeLocation object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchLocationById",
            "method": "PATCH",
            "path": "GeoTree/Location/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchLocationByIdResult",
              "description": "Returns patchLocationById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "geoTreeLocation",
                      "instance": {
                        "identity": 1,
                        "name": "United States",
                        "depth": 2
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the GeoTreeLocation object."
              }
            ],
            "properties": {
              "details": {},
              "geoTreeLocations": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "United States"
                  }
                ]
              }
            },
            "description": "Update or Add the GeoTreeLocation object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "GeoTree/Location/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "United States"
            },
            "description": "Create a new instance of the GeoTreeLocation object."
          },
          {
            "name": "updateLocationById",
            "method": "PUT",
            "path": "GeoTree/Location/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "LocationByIdResult",
              "description": "Returns updateLocationById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "United States",
                      "depth": 1
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "United States"
            },
            "description": "Update an existing instance of the GeoTreeLocation object."
          }
        ]
      },
      {
        "name": "Servicetype",
        "source_file": "ServiceType",
        "endpoints": [
          {
            "name": "deleteServicetypeById",
            "method": "DELETE",
            "path": "ServiceType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ServicetypeByIdResult",
              "description": "Returns deleteServicetypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "serviceType"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ServiceType object."
              }
            ],
            "description": "Delete an instance of the ServiceType object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "ServiceType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ServiceType objects."
          },
          {
            "name": "getShareplans",
            "method": "GET",
            "path": "ServiceType/AvailableFor/SharePlans",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ShareplansResult",
              "description": "Returns getShareplans information"
            },
            "parameters": [],
            "description": "This end point is Unused. NOTE: This API is marked for deprication and will be removed in v5 of the API."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "ServiceType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ServiceType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getServicetypeById",
            "method": "GET",
            "path": "ServiceType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ServicetypeByIdResult",
              "description": "Returns getServicetypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Monthly Fee",
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "serviceBaseTypeId": 8,
                  "serviceBaseTypeName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ServiceType object."
              }
            ],
            "description": "Retrieve an instance of the ServiceType object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "ServiceType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Monthly Fee",
              "serviceBaseTypeId": 4
            },
            "description": "Create a new instance of the ServiceType object."
          },
          {
            "name": "updateServicetypeById",
            "method": "PUT",
            "path": "ServiceType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ServicetypeByIdResult",
              "description": "Returns updateServicetypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Monthly Fee",
                      "ownerId": 4,
                      "ownerName": "Sample Text Data",
                      "serviceBaseTypeId": 22,
                      "serviceBaseTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Monthly Fee",
              "serviceBaseTypeId": 23
            },
            "description": "Update an existing instance of the ServiceType object."
          }
        ]
      },
      {
        "name": "Package Category",
        "source_file": "Package-Category",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Package/Category/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PackageCategory objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Package/Category/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PackageCategory objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getCategoryById",
            "method": "GET",
            "path": "Package/Category/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CategoryByIdResult",
              "description": "Returns getCategoryById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 5,
                  "ownerName": "Sample Text Data",
                  "name": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PackageCategory object."
              }
            ],
            "description": "Retrieve an instance of the PackageCategory object by its ID."
          }
        ]
      },
      {
        "name": "Webhookadyencallback",
        "source_file": "WebhookAdyenCallback",
        "endpoints": [
          {
            "name": "createAdyen",
            "method": "POST",
            "path": "Webhook/Callback/Adyen",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AdyenResult",
              "description": "Returns createAdyen information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {}
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {},
            "description": "Create a new instance of the WebhookCallback object."
          }
        ]
      },
      {
        "name": "Package Frequency",
        "source_file": "Package-Frequency",
        "endpoints": [
          {
            "name": "deleteFrequencyById",
            "method": "DELETE",
            "path": "Package/Frequency/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "FrequencyByIdResult",
              "description": "Returns deleteFrequencyById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "packageFrequency"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PackageFrequency object."
              }
            ],
            "description": "Delete an instance of the PackageFrequency object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Package/Frequency/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PackageFrequency objects."
          },
          {
            "name": "getCurrencyid",
            "method": "GET",
            "path": "Package/Frequency/AvailableFor/Package/{id}/Currency/{currencyId}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CurrencyidResult",
              "description": "Returns getCurrencyid information"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Package object."
              },
              {
                "name": "currencyId",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Currency object."
              }
            ],
            "description": "Retrieve the PackageFrequency objects for the specified Package and Currency"
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Package/Frequency/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PackageFrequency objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Package/Frequency/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PackageFrequency objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getFrequencyById",
            "method": "GET",
            "path": "Package/Frequency/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "FrequencyByIdResult",
              "description": "Returns getFrequencyById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "frequency": 1,
                  "isActive": true,
                  "packageId": 14,
                  "packageName": "Sample Text Data",
                  "frequencyTypeId": 3,
                  "frequencyTypeName": "Sample Text Data",
                  "termId": 9,
                  "termName": "Sample Text Data",
                  "sku": "SKU-123-FOO",
                  "name": "Monthly Gold Package",
                  "isUsageBucketSharePlanPackageFrequency": false,
                  "countingRuleId": 7,
                  "countingRuleName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "id": 21
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PackageFrequency object."
              }
            ],
            "description": "Retrieve an instance of the PackageFrequency object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Package/Frequency/{id}/Basic/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PackageFrequency object."
              }
            ],
            "description": "Retrieve deep detail of the PackageFrequency object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Package/Frequency/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PackageFrequency object."
              }
            ],
            "description": "Retrieve deep detail of the PackageFrequency object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getPricing",
            "method": "GET",
            "path": "Package/Frequency/{packageFrequencyId}/PriceBook/{priceBookId}/Currency/{currencyCode:alpha}/Pricing",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PricingResult",
              "description": "Returns getPricing information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "frequency": 14,
                    "isActive": true,
                    "packageId": 8,
                    "packageName": "Sample Text Data",
                    "frequencyTypeId": 9,
                    "frequencyTypeName": "Sample Text Data",
                    "termId": 14,
                    "termName": "Sample Text Data",
                    "sku": "SKU-123-FOO",
                    "name": "Monthly Gold Package",
                    "isUsageBucketSharePlanPackageFrequency": false,
                    "countingRuleId": 16,
                    "countingRuleName": "Sample Text Data",
                    "created": "2021-04-26T15:25:27.587Z",
                    "updated": "2021-04-26T15:25:27.587Z",
                    "id": 21
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PackageFrequency objects."
          },
          {
            "name": "getPricing",
            "method": "GET",
            "path": "Package/Frequency/{packageFrequencyId}/PriceBook/{priceBookId}/Currency/{currencyId}/Pricing",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PricingResult",
              "description": "Returns getPricing information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "frequency": 14,
                    "isActive": true,
                    "packageId": 8,
                    "packageName": "Sample Text Data",
                    "frequencyTypeId": 9,
                    "frequencyTypeName": "Sample Text Data",
                    "termId": 14,
                    "termName": "Sample Text Data",
                    "sku": "SKU-123-FOO",
                    "name": "Monthly Gold Package",
                    "isUsageBucketSharePlanPackageFrequency": false,
                    "countingRuleId": 16,
                    "countingRuleName": "Sample Text Data",
                    "created": "2021-04-26T15:25:27.587Z",
                    "updated": "2021-04-26T15:25:27.587Z",
                    "id": 21
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PackageFrequency objects."
          },
          {
            "name": "getUsagebuckettier",
            "method": "GET",
            "path": "Package/Frequency/{packageFrequencyid}/PriceBook/{priceBookId}/Currency/{currencyCode:alpha}/UsageBucketTier",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "UsagebuckettierResult",
              "description": "Returns getUsagebuckettier information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "frequency": 4,
                    "isActive": true,
                    "packageId": 20,
                    "packageName": "Sample Text Data",
                    "frequencyTypeId": 19,
                    "frequencyTypeName": "Sample Text Data",
                    "termId": 5,
                    "termName": "Sample Text Data",
                    "sku": "SKU-123-FOO",
                    "name": "Monthly Gold Package",
                    "isUsageBucketSharePlanPackageFrequency": false,
                    "countingRuleId": 0,
                    "countingRuleName": "Sample Text Data",
                    "created": "2021-04-26T15:25:27.587Z",
                    "updated": "2021-04-26T15:25:27.587Z",
                    "id": 27
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PackageFrequency objects."
          },
          {
            "name": "getUsagebuckettier",
            "method": "GET",
            "path": "Package/Frequency/{packageFrequencyid}/PriceBook/{priceBookId}/Currency/{currencyId}/UsageBucketTier",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "UsagebuckettierResult",
              "description": "Returns getUsagebuckettier information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "frequency": 4,
                    "isActive": true,
                    "packageId": 20,
                    "packageName": "Sample Text Data",
                    "frequencyTypeId": 19,
                    "frequencyTypeName": "Sample Text Data",
                    "termId": 5,
                    "termName": "Sample Text Data",
                    "sku": "SKU-123-FOO",
                    "name": "Monthly Gold Package",
                    "isUsageBucketSharePlanPackageFrequency": false,
                    "countingRuleId": 0,
                    "countingRuleName": "Sample Text Data",
                    "created": "2021-04-26T15:25:27.587Z",
                    "updated": "2021-04-26T15:25:27.587Z",
                    "id": 27
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PackageFrequency objects."
          },
          {
            "name": "patchFrequencyById",
            "method": "PATCH",
            "path": "Package/Frequency/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchFrequencyByIdResult",
              "description": "Returns patchFrequencyById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "packageFrequency",
                      "instance": {
                        "identity": 1,
                        "frequency": 10,
                        "isActive": true,
                        "packageId": 3,
                        "packageName": "Sample Text Data",
                        "frequencyTypeId": 10,
                        "frequencyTypeName": "Sample Text Data",
                        "termId": 3,
                        "termName": "Sample Text Data",
                        "sku": "SKU-123-FOO",
                        "name": "Monthly Gold Package",
                        "isUsageBucketSharePlanPackageFrequency": false,
                        "countingRuleId": 21,
                        "countingRuleName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "id": 5
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PackageFrequency object."
              }
            ],
            "properties": {
              "details": {},
              "packageFrequencys": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "frequency": 22,
                    "isActive": true,
                    "packageId": 25,
                    "frequencyTypeId": 0,
                    "termId": 10,
                    "sku": "SKU-123-FOO",
                    "name": "Monthly Gold Package",
                    "isUsageBucketSharePlanPackageFrequency": false,
                    "countingRuleId": 22,
                    "updated": "2021-04-26T15:25:27.587Z",
                    "id": 6
                  }
                ]
              }
            },
            "description": "Update or Add the PackageFrequency object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Package/Frequency/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "frequency": 14,
              "isActive": true,
              "packageId": 9,
              "frequencyTypeId": 4,
              "termId": 5,
              "sku": "SKU-123-FOO",
              "name": "Monthly Gold Package",
              "isUsageBucketSharePlanPackageFrequency": false,
              "countingRuleId": 18,
              "updated": "2021-04-26T15:25:27.587Z",
              "id": 19
            },
            "description": "Create a new instance of the PackageFrequency object."
          },
          {
            "name": "updateFrequencyById",
            "method": "PUT",
            "path": "Package/Frequency/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "FrequencyByIdResult",
              "description": "Returns updateFrequencyById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "frequency": 18,
                      "isActive": true,
                      "packageId": 22,
                      "packageName": "Sample Text Data",
                      "frequencyTypeId": 25,
                      "frequencyTypeName": "Sample Text Data",
                      "termId": 2,
                      "termName": "Sample Text Data",
                      "sku": "SKU-123-FOO",
                      "name": "Monthly Gold Package",
                      "isUsageBucketSharePlanPackageFrequency": false,
                      "countingRuleId": 11,
                      "countingRuleName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "id": 7
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "frequency": 7,
              "isActive": true,
              "packageId": 25,
              "frequencyTypeId": 18,
              "termId": 2,
              "sku": "SKU-123-FOO",
              "name": "Monthly Gold Package",
              "isUsageBucketSharePlanPackageFrequency": false,
              "countingRuleId": 4,
              "updated": "2021-04-26T15:25:27.587Z",
              "id": 5
            },
            "description": "Update an existing instance of the PackageFrequency object."
          }
        ]
      },
      {
        "name": "Usage Unit",
        "source_file": "Usage-Unit",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Usage/Unit/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageUnit objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Usage/Unit/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageUnit objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getUnitById",
            "method": "GET",
            "path": "Usage/Unit/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "UnitByIdResult",
              "description": "Returns getUnitById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "usageBaseUnitId": 3,
                  "usageBaseUnitName": "Sample Text Data",
                  "name": "Seconds",
                  "description": "Seconds",
                  "multiplierToBaseUnitType": "1024",
                  "sortOrder": 1,
                  "visible": true,
                  "isBytesInBinaryUnit": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageUnit object."
              }
            ],
            "description": "Retrieve an instance of the UsageUnit object by its ID."
          }
        ]
      },
      {
        "name": "Tax Vendor",
        "source_file": "Tax-Vendor",
        "endpoints": [
          {
            "name": "deleteVendorById",
            "method": "DELETE",
            "path": "Tax/Vendor/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "VendorByIdResult",
              "description": "Returns deleteVendorById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "taxVendor"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the TaxVendor object."
              }
            ],
            "description": "Delete an instance of the TaxVendor object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Tax/Vendor/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TaxVendor objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Tax/Vendor/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TaxVendor objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getVendorById",
            "method": "GET",
            "path": "Tax/Vendor/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "VendorByIdResult",
              "description": "Returns getVendorById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 4,
                  "ownerName": "Sample Text Data",
                  "name": "AvaTax",
                  "companyIdentifier": "logisense_co",
                  "uRL": "https://mytaxintegrator.com/integrate",
                  "clientId": "12313-13123-3123",
                  "clientProfileId": "12313-13123-3123",
                  "isActive": true,
                  "taxVendorServiceClassId": 12,
                  "taxVendorServiceClassName": "Sample Text Data",
                  "taxVendorBusinessClassId": 26,
                  "taxVendorBusinessClassName": "Sample Text Data",
                  "taxVendorTypeId": 20,
                  "taxVendorTypeName": "Sample Text Data",
                  "defaultAccountTaxCategoryId": 0,
                  "defaultAccountTaxCategoryName": "Sample Text Data",
                  "defaultServiceTaxCategoryId": 7,
                  "defaultServiceTaxCategoryName": "Sample Text Data",
                  "userKeyName": "Sample Text Data",
                  "passwordKeyName": "Sample Text Data",
                  "facilities": true,
                  "franchise": true,
                  "regulated": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the TaxVendor object."
              }
            ],
            "description": "Retrieve an instance of the TaxVendor object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Tax/Vendor/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "AvaTax",
              "companyIdentifier": "logisense_co",
              "uRL": "https://mytaxintegrator.com/integrate",
              "clientId": "12313-13123-3123",
              "clientProfileId": "12313-13123-3123",
              "isActive": true,
              "taxVendorServiceClassId": 23,
              "taxVendorBusinessClassId": 1,
              "taxVendorTypeId": 3,
              "defaultAccountTaxCategoryId": 7,
              "defaultServiceTaxCategoryId": 24,
              "userKeyName": "Sample Text Data",
              "passwordKeyName": "Sample Text Data",
              "facilities": true,
              "franchise": true,
              "regulated": true
            },
            "description": "Create a new instance of the TaxVendor object."
          },
          {
            "name": "updateVendorById",
            "method": "PUT",
            "path": "Tax/Vendor/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "VendorByIdResult",
              "description": "Returns updateVendorById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "name": "AvaTax",
                      "companyIdentifier": "logisense_co",
                      "uRL": "https://mytaxintegrator.com/integrate",
                      "clientId": "12313-13123-3123",
                      "clientProfileId": "12313-13123-3123",
                      "isActive": true,
                      "taxVendorServiceClassId": 26,
                      "taxVendorServiceClassName": "Sample Text Data",
                      "taxVendorBusinessClassId": 10,
                      "taxVendorBusinessClassName": "Sample Text Data",
                      "taxVendorTypeId": 2,
                      "taxVendorTypeName": "Sample Text Data",
                      "defaultAccountTaxCategoryId": 15,
                      "defaultAccountTaxCategoryName": "Sample Text Data",
                      "defaultServiceTaxCategoryId": 19,
                      "defaultServiceTaxCategoryName": "Sample Text Data",
                      "userKeyName": "Sample Text Data",
                      "passwordKeyName": "Sample Text Data",
                      "facilities": true,
                      "franchise": true,
                      "regulated": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "AvaTax",
              "companyIdentifier": "logisense_co",
              "uRL": "https://mytaxintegrator.com/integrate",
              "clientId": "12313-13123-3123",
              "clientProfileId": "12313-13123-3123",
              "isActive": true,
              "taxVendorServiceClassId": 20,
              "taxVendorBusinessClassId": 20,
              "taxVendorTypeId": 12,
              "defaultAccountTaxCategoryId": 12,
              "defaultServiceTaxCategoryId": 4,
              "userKeyName": "Sample Text Data",
              "passwordKeyName": "Sample Text Data",
              "facilities": true,
              "franchise": true,
              "regulated": true
            },
            "description": "Update an existing instance of the TaxVendor object."
          }
        ]
      },
      {
        "name": "Billgroup",
        "source_file": "BillGroup",
        "endpoints": [
          {
            "name": "deleteBillgroupById",
            "method": "DELETE",
            "path": "BillGroup/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BillgroupByIdResult",
              "description": "Returns deleteBillgroupById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "billGroup"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the BillGroup object."
              }
            ],
            "description": "Delete an instance of the BillGroup object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "BillGroup/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the BillGroup objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "BillGroup/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the BillGroup objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "BillGroup/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the BillGroup objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getBillgroupById",
            "method": "GET",
            "path": "BillGroup/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BillgroupByIdResult",
              "description": "Returns getBillgroupById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "First of the Month",
                  "ownerId": 24,
                  "ownerName": "Sample Text Data",
                  "billDay": 25,
                  "invoiceDateProcessTypeId": 3,
                  "invoiceDateProcessTypeName": "Sample Text Data",
                  "invoiceDueDateTypeId": 27,
                  "invoiceDueDateTypeName": "Sample Text Data",
                  "usageBillDay": 18,
                  "invoiceDeliveryId": 12,
                  "invoiceDeliveryName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the BillGroup object."
              }
            ],
            "description": "Retrieve an instance of the BillGroup object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "BillGroup/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the BillGroup object."
              }
            ],
            "description": "Retrieve deep detail of the BillGroup object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchBillgroupById",
            "method": "PATCH",
            "path": "BillGroup/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchBillgroupByIdResult",
              "description": "Returns patchBillgroupById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "billGroup",
                      "instance": {
                        "identity": 1,
                        "name": "First of the Month",
                        "ownerId": 25,
                        "ownerName": "Sample Text Data",
                        "billDay": 1,
                        "invoiceDateProcessTypeId": 1,
                        "invoiceDateProcessTypeName": "Sample Text Data",
                        "invoiceDueDateTypeId": 27,
                        "invoiceDueDateTypeName": "Sample Text Data",
                        "usageBillDay": 4,
                        "invoiceDeliveryId": 14,
                        "invoiceDeliveryName": "Sample Text Data"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the BillGroup object."
              }
            ],
            "properties": {
              "details": {},
              "billGroups": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "First of the Month",
                    "billDay": 8,
                    "invoiceDateProcessTypeId": 21,
                    "invoiceDueDateTypeId": 19,
                    "usageBillDay": 16,
                    "invoiceDeliveryId": 21
                  }
                ]
              }
            },
            "description": "Update or Add the BillGroup object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "BillGroup/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "First of the Month",
              "billDay": 0,
              "invoiceDateProcessTypeId": 16,
              "invoiceDueDateTypeId": 20,
              "usageBillDay": 16,
              "invoiceDeliveryId": 23
            },
            "description": "Create a new instance of the BillGroup object."
          },
          {
            "name": "updateBillgroupById",
            "method": "PUT",
            "path": "BillGroup/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BillgroupByIdResult",
              "description": "Returns updateBillgroupById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "First of the Month",
                      "ownerId": 20,
                      "ownerName": "Sample Text Data",
                      "billDay": 3,
                      "invoiceDateProcessTypeId": 3,
                      "invoiceDateProcessTypeName": "Sample Text Data",
                      "invoiceDueDateTypeId": 21,
                      "invoiceDueDateTypeName": "Sample Text Data",
                      "usageBillDay": 5,
                      "invoiceDeliveryId": 8,
                      "invoiceDeliveryName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "First of the Month",
              "billDay": 22,
              "invoiceDateProcessTypeId": 7,
              "invoiceDueDateTypeId": 0,
              "usageBillDay": 11,
              "invoiceDeliveryId": 16
            },
            "description": "Update an existing instance of the BillGroup object."
          }
        ]
      },
      {
        "name": "Usage Baseunit",
        "source_file": "Usage-BaseUnit",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Usage/BaseUnit/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageBaseUnit objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Usage/BaseUnit/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageBaseUnit objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getBaseunitById",
            "method": "GET",
            "path": "Usage/BaseUnit/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BaseunitByIdResult",
              "description": "Returns getBaseunitById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "usageBaseUnitId": 20,
                  "usageBaseUnitName": "Sample Text Data",
                  "name": "Count",
                  "description": "Counting items",
                  "sortOrder": 25,
                  "visible": true,
                  "isBaseBucketEligible": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageBaseUnit object."
              }
            ],
            "description": "Retrieve an instance of the UsageBaseUnit object by its ID."
          }
        ]
      },
      {
        "name": "Service Taxcategory",
        "source_file": "Service-TaxCategory",
        "endpoints": [
          {
            "name": "deleteTaxcategoryById",
            "method": "DELETE",
            "path": "Service/TaxCategory/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TaxcategoryByIdResult",
              "description": "Returns deleteTaxcategoryById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "serviceTaxCategory"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ServiceTaxCategory object."
              }
            ],
            "description": "Delete an instance of the ServiceTaxCategory object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Service/TaxCategory/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ServiceTaxCategory objects."
          },
          {
            "name": "getAvatax",
            "method": "GET",
            "path": "Service/TaxCategory/AvaTax",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AvataxResult",
              "description": "Returns getAvatax information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "ownerId": 25,
                    "ownerName": "Sample Text Data",
                    "name": "Land Line Taxable"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ServiceTaxCategory objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Service/TaxCategory/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ServiceTaxCategory objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getTaxcategoryById",
            "method": "GET",
            "path": "Service/TaxCategory/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TaxcategoryByIdResult",
              "description": "Returns getTaxcategoryById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 10,
                  "ownerName": "Sample Text Data",
                  "name": "Land Line Taxable"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ServiceTaxCategory object."
              }
            ],
            "description": "Retrieve an instance of the ServiceTaxCategory object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Service/TaxCategory/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Land Line Taxable"
            },
            "description": "Create a new instance of the ServiceTaxCategory object."
          },
          {
            "name": "updateTaxcategoryById",
            "method": "PUT",
            "path": "Service/TaxCategory/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TaxcategoryByIdResult",
              "description": "Returns updateTaxcategoryById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 26,
                      "ownerName": "Sample Text Data",
                      "name": "Land Line Taxable"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Land Line Taxable"
            },
            "description": "Update an existing instance of the ServiceTaxCategory object."
          }
        ]
      },
      {
        "name": "Statustiertype",
        "source_file": "StatusTierType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "StatusTierType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the StatusTierType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "StatusTierType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the StatusTierType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getStatustiertypeById",
            "method": "GET",
            "path": "StatusTierType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "StatustiertypeByIdResult",
              "description": "Returns getStatustiertypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Per Status"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the StatusTierType object."
              }
            ],
            "description": "Retrieve an instance of the StatusTierType object by its ID."
          }
        ]
      },
      {
        "name": "Termtype",
        "source_file": "TermType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "TermType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TermType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "TermType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TermType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getTermtypeById",
            "method": "GET",
            "path": "TermType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TermtypeByIdResult",
              "description": "Returns getTermtypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Fixed Term",
                  "sortOrder": 0
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the TermType object."
              }
            ],
            "description": "Retrieve an instance of the TermType object by its ID."
          }
        ]
      },
      {
        "name": "Usage Rate",
        "source_file": "Usage-Rate",
        "endpoints": [
          {
            "name": "deleteRateById",
            "method": "DELETE",
            "path": "Usage/Rate/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RateByIdResult",
              "description": "Returns deleteRateById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "usageRate"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageRate object."
              }
            ],
            "description": "Delete an instance of the UsageRate object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Usage/Rate/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageRate objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Usage/Rate/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageRate objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Usage/Rate/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageRate objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getRateById",
            "method": "GET",
            "path": "Usage/Rate/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RateByIdResult",
              "description": "Returns getRateById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "usageRateGroupId": 17,
                  "usageRateGroupName": "Sample Text Data",
                  "usageClassId": 12,
                  "usageClassName": "Sample Text Data",
                  "amount": 2.52,
                  "geoTreeLocationId": 21,
                  "geoTreeLocationName": "Sample Text Data",
                  "additional": true,
                  "retired": true,
                  "ownerId": 14,
                  "ownerName": "Sample Text Data",
                  "usageRoundingId": 20,
                  "usageRoundingName": "Sample Text Data",
                  "displayName": "My Rate",
                  "geoTreeLocationGroupId": 7,
                  "geoTreeLocationGroupName": "Sample Text Data",
                  "minimumCharge": 5.34,
                  "usageUnitId": 11,
                  "usageUnitName": "Sample Text Data",
                  "usageRateCalculationTypeId": 14,
                  "usageRateCalculationTypeName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "generalLedgerId": 24,
                  "generalLedgerName": "Sample Text Data",
                  "serviceTaxCategoryId": 3,
                  "serviceTaxCategoryName": "Sample Text Data",
                  "createdByUserId": 11,
                  "createdByUserName": "Sample Text Data",
                  "updatedByUserId": 2,
                  "updatedByUserName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageRate object."
              }
            ],
            "description": "Retrieve an instance of the UsageRate object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Usage/Rate/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageRate object."
              }
            ],
            "description": "Retrieve deep detail of the UsageRate object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchRateById",
            "method": "PATCH",
            "path": "Usage/Rate/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchRateByIdResult",
              "description": "Returns patchRateById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "usageRate",
                      "instance": {
                        "identity": 1,
                        "usageRateGroupId": 5,
                        "usageRateGroupName": "Sample Text Data",
                        "usageClassId": 23,
                        "usageClassName": "Sample Text Data",
                        "amount": 2.52,
                        "geoTreeLocationId": 23,
                        "geoTreeLocationName": "Sample Text Data",
                        "additional": true,
                        "retired": true,
                        "ownerId": 26,
                        "ownerName": "Sample Text Data",
                        "usageRoundingId": 2,
                        "usageRoundingName": "Sample Text Data",
                        "displayName": "My Rate",
                        "geoTreeLocationGroupId": 23,
                        "geoTreeLocationGroupName": "Sample Text Data",
                        "minimumCharge": 5.34,
                        "usageUnitId": 7,
                        "usageUnitName": "Sample Text Data",
                        "usageRateCalculationTypeId": 19,
                        "usageRateCalculationTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 0,
                        "generalLedgerName": "Sample Text Data",
                        "serviceTaxCategoryId": 3,
                        "serviceTaxCategoryName": "Sample Text Data",
                        "createdByUserId": 19,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 25,
                        "updatedByUserName": "Sample Text Data"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageRate object."
              }
            ],
            "properties": {
              "details": {},
              "usageRates": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "usageRateGroupId": 10,
                    "usageClassId": 11,
                    "amount": 2.52,
                    "geoTreeLocationId": 6,
                    "additional": true,
                    "usageRoundingId": 0,
                    "displayName": "My Rate",
                    "geoTreeLocationGroupId": 15,
                    "minimumCharge": 5.34,
                    "usageUnitId": 17,
                    "usageRateCalculationTypeId": 18,
                    "updated": "2021-04-26T15:25:27.587Z",
                    "generalLedgerId": 10,
                    "serviceTaxCategoryId": 4,
                    "createdByUserId": 8,
                    "updatedByUserId": 5
                  }
                ]
              }
            },
            "description": "Update or Add the UsageRate object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Usage/Rate/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "usageRateGroupId": 27,
              "usageClassId": 22,
              "amount": 2.52,
              "geoTreeLocationId": 22,
              "additional": true,
              "usageRoundingId": 27,
              "displayName": "My Rate",
              "geoTreeLocationGroupId": 14,
              "minimumCharge": 5.34,
              "usageUnitId": 20,
              "usageRateCalculationTypeId": 20,
              "updated": "2021-04-26T15:25:27.587Z",
              "generalLedgerId": 22,
              "serviceTaxCategoryId": 16,
              "createdByUserId": 8,
              "updatedByUserId": 22
            },
            "description": "Create a new instance of the UsageRate object."
          },
          {
            "name": "updateRateById",
            "method": "PUT",
            "path": "Usage/Rate/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RateByIdResult",
              "description": "Returns updateRateById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "usageRateGroupId": 6,
                      "usageRateGroupName": "Sample Text Data",
                      "usageClassId": 11,
                      "usageClassName": "Sample Text Data",
                      "amount": 2.52,
                      "geoTreeLocationId": 4,
                      "geoTreeLocationName": "Sample Text Data",
                      "additional": true,
                      "retired": true,
                      "ownerId": 8,
                      "ownerName": "Sample Text Data",
                      "usageRoundingId": 17,
                      "usageRoundingName": "Sample Text Data",
                      "displayName": "My Rate",
                      "geoTreeLocationGroupId": 20,
                      "geoTreeLocationGroupName": "Sample Text Data",
                      "minimumCharge": 5.34,
                      "usageUnitId": 22,
                      "usageUnitName": "Sample Text Data",
                      "usageRateCalculationTypeId": 10,
                      "usageRateCalculationTypeName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "generalLedgerId": 25,
                      "generalLedgerName": "Sample Text Data",
                      "serviceTaxCategoryId": 7,
                      "serviceTaxCategoryName": "Sample Text Data",
                      "createdByUserId": 22,
                      "createdByUserName": "Sample Text Data",
                      "updatedByUserId": 15,
                      "updatedByUserName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "usageRateGroupId": 17,
              "usageClassId": 24,
              "amount": 2.52,
              "geoTreeLocationId": 27,
              "additional": true,
              "usageRoundingId": 4,
              "displayName": "My Rate",
              "geoTreeLocationGroupId": 23,
              "minimumCharge": 5.34,
              "usageUnitId": 16,
              "usageRateCalculationTypeId": 26,
              "updated": "2021-04-26T15:25:27.587Z",
              "generalLedgerId": 4,
              "serviceTaxCategoryId": 12,
              "createdByUserId": 21,
              "updatedByUserId": 16
            },
            "description": "Update an existing instance of the UsageRate object."
          }
        ]
      },
      {
        "name": "Priceplan Tiertype",
        "source_file": "PricePlan-TierType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "PricePlan/TierType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PricePlanTierType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "PricePlan/TierType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PricePlanTierType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getTiertypeById",
            "method": "GET",
            "path": "PricePlan/TierType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TiertypeByIdResult",
              "description": "Returns getTiertypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Tiered Bracketed",
                  "sortOrder": 19
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PricePlanTierType object."
              }
            ],
            "description": "Retrieve an instance of the PricePlanTierType object by its ID."
          }
        ]
      },
      {
        "name": "Emailsetting",
        "source_file": "EmailSetting",
        "endpoints": [
          {
            "name": "deleteEmailsettingById",
            "method": "DELETE",
            "path": "EmailSetting/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "EmailsettingByIdResult",
              "description": "Returns deleteEmailsettingById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "emailSetting"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the EmailSetting object."
              }
            ],
            "description": "Delete an instance of the EmailSetting object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "getGooglejwtById",
            "method": "GET",
            "path": "EmailSetting/GoogleJWT/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "GooglejwtByIdResult",
              "description": "Returns getGooglejwtById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 21,
                  "ownerName": "Sample Text Data",
                  "name": "Sample Text Data",
                  "fromEmailAddress": "Sample Text Data",
                  "fromName": "Sample Text Data",
                  "useSecureConnection": true,
                  "maxAttachmentsSizeInMiB": 6,
                  "failureNotificationUserId": 12,
                  "failureNotificationUserName": "Sample Text Data",
                  "emailHostTypeId": 6,
                  "emailHostTypeName": "Sample Text Data",
                  "emailSettingsKeyName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the EmailSetting object."
              }
            ],
            "description": "Retrieve an instance of the EmailSetting object by its ID."
          },
          {
            "name": "getSmtpauthById",
            "method": "GET",
            "path": "EmailSetting/SMTPAuth/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "SmtpauthByIdResult",
              "description": "Returns getSmtpauthById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 14,
                  "ownerName": "Sample Text Data",
                  "name": "Sample Text Data",
                  "fromEmailAddress": "Sample Text Data",
                  "fromName": "Sample Text Data",
                  "useSecureConnection": true,
                  "maxAttachmentsSizeInMiB": 17,
                  "failureNotificationUserId": 4,
                  "failureNotificationUserName": "Sample Text Data",
                  "emailHostTypeId": 13,
                  "emailHostTypeName": "Sample Text Data",
                  "emailSettingsKeyName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the EmailSetting object."
              }
            ],
            "description": "Retrieve an instance of the EmailSetting object by its ID."
          },
          {
            "name": "createGooglejwt",
            "method": "POST",
            "path": "EmailSetting/GoogleJWT",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "GooglejwtResult",
              "description": "Returns createGooglejwt information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "name": "Sample Text Data",
                      "fromEmailAddress": "Sample Text Data",
                      "fromName": "Sample Text Data",
                      "useSecureConnection": true,
                      "maxAttachmentsSizeInMiB": 17,
                      "failureNotificationUserId": 9,
                      "failureNotificationUserName": "Sample Text Data",
                      "emailHostTypeId": 9,
                      "emailHostTypeName": "Sample Text Data",
                      "emailSettingsKeyName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Sample Text Data",
              "fromEmailAddress": "Sample Text Data",
              "fromName": "Sample Text Data",
              "useSecureConnection": true,
              "maxAttachmentsSizeInMiB": 8,
              "failureNotificationUserId": 10,
              "emailHostTypeId": 7,
              "emailSettingsKeyName": "Sample Text Data"
            },
            "description": "Create a new instance of the EmailSetting object."
          },
          {
            "name": "createSmtpauth",
            "method": "POST",
            "path": "EmailSetting/SMTPAuth",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "SmtpauthResult",
              "description": "Returns createSmtpauth information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 4,
                      "ownerName": "Sample Text Data",
                      "name": "Sample Text Data",
                      "fromEmailAddress": "Sample Text Data",
                      "fromName": "Sample Text Data",
                      "useSecureConnection": true,
                      "maxAttachmentsSizeInMiB": 1,
                      "failureNotificationUserId": 26,
                      "failureNotificationUserName": "Sample Text Data",
                      "emailHostTypeId": 17,
                      "emailHostTypeName": "Sample Text Data",
                      "emailSettingsKeyName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Sample Text Data",
              "fromEmailAddress": "Sample Text Data",
              "fromName": "Sample Text Data",
              "useSecureConnection": true,
              "maxAttachmentsSizeInMiB": 3,
              "failureNotificationUserId": 24,
              "emailHostTypeId": 13,
              "emailSettingsKeyName": "Sample Text Data"
            },
            "description": "Create a new instance of the EmailSetting object."
          },
          {
            "name": "updateGooglejwtById",
            "method": "PUT",
            "path": "EmailSetting/GoogleJWT/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "GooglejwtByIdResult",
              "description": "Returns updateGooglejwtById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 23,
                      "ownerName": "Sample Text Data",
                      "name": "Sample Text Data",
                      "fromEmailAddress": "Sample Text Data",
                      "fromName": "Sample Text Data",
                      "useSecureConnection": true,
                      "maxAttachmentsSizeInMiB": 5,
                      "failureNotificationUserId": 8,
                      "failureNotificationUserName": "Sample Text Data",
                      "emailHostTypeId": 25,
                      "emailHostTypeName": "Sample Text Data",
                      "emailSettingsKeyName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Sample Text Data",
              "fromEmailAddress": "Sample Text Data",
              "fromName": "Sample Text Data",
              "useSecureConnection": true,
              "maxAttachmentsSizeInMiB": 0,
              "failureNotificationUserId": 9,
              "emailHostTypeId": 16,
              "emailSettingsKeyName": "Sample Text Data"
            },
            "description": "Update an existing instance of the EmailSetting object."
          },
          {
            "name": "updateSmtpauthById",
            "method": "PUT",
            "path": "EmailSetting/SMTPAuth/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "SmtpauthByIdResult",
              "description": "Returns updateSmtpauthById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 13,
                      "ownerName": "Sample Text Data",
                      "name": "Sample Text Data",
                      "fromEmailAddress": "Sample Text Data",
                      "fromName": "Sample Text Data",
                      "useSecureConnection": true,
                      "maxAttachmentsSizeInMiB": 4,
                      "failureNotificationUserId": 11,
                      "failureNotificationUserName": "Sample Text Data",
                      "emailHostTypeId": 19,
                      "emailHostTypeName": "Sample Text Data",
                      "emailSettingsKeyName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Sample Text Data",
              "fromEmailAddress": "Sample Text Data",
              "fromName": "Sample Text Data",
              "useSecureConnection": true,
              "maxAttachmentsSizeInMiB": 0,
              "failureNotificationUserId": 1,
              "emailHostTypeId": 5,
              "emailSettingsKeyName": "Sample Text Data"
            },
            "description": "Update an existing instance of the EmailSetting object."
          }
        ]
      },
      {
        "name": "Billrun History",
        "source_file": "BillRun-History",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "BillRun/History/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the BillRunHistory objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "BillRun/History/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the BillRunHistory objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getHistoryById",
            "method": "GET",
            "path": "BillRun/History/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "HistoryByIdResult",
              "description": "Returns getHistoryById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "invoiceId": 8,
                  "invoiceName": "Sample Text Data",
                  "date": "2021-04-26T15:25:27.587Z",
                  "action": "rendered",
                  "userId": 17,
                  "userName": "Sample Text Data",
                  "billRunHistoryId": 13,
                  "billRunHistoryName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the BillRunHistory object."
              }
            ],
            "description": "Retrieve an instance of the BillRunHistory object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "BillRun/History/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the BillRunHistory object."
              }
            ],
            "description": "Retrieve deep detail of the BillRunHistory object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "createRecovery",
            "method": "POST",
            "path": "BillRun/History/{id}/Recovery",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RecoveryResult",
              "description": "Returns createRecovery information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 5,
                      "ownerName": "Sample Text Data",
                      "billRunId": 1,
                      "billRunName": "Sample Text Data",
                      "name": "Sample Text Data",
                      "complete": true,
                      "billRunScheduleId": 1,
                      "billRunScheduleName": "Sample Text Data",
                      "currencyExchangeId": 13,
                      "currencyExchangeName": "Sample Text Data",
                      "parentBillRunHistoryId": 10,
                      "parentBillRunHistoryName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the BillRunHistory object."
              }
            ],
            "properties": {
              "billRunId": 27,
              "name": "Sample Text Data",
              "billRunScheduleId": 21,
              "currencyExchangeId": 23,
              "parentBillRunHistoryId": 4
            },
            "description": "Create a new instance of a Recovery object that belongs to the BillRunHistory."
          }
        ]
      },
      {
        "name": "Emailtemplate",
        "source_file": "EmailTemplate",
        "endpoints": [
          {
            "name": "deleteEmailtemplateById",
            "method": "DELETE",
            "path": "EmailTemplate/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "EmailtemplateByIdResult",
              "description": "Returns deleteEmailtemplateById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "emailTemplate"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the EmailTemplate object."
              }
            ],
            "description": "Delete an instance of the EmailTemplate object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "EmailTemplate/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the EmailTemplate objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "EmailTemplate/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the EmailTemplate objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getEmailtemplateById",
            "method": "GET",
            "path": "EmailTemplate/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "EmailtemplateByIdResult",
              "description": "Returns getEmailtemplateById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "Sample Text Data",
                  "emailTemplateTypeId": 4,
                  "emailTemplateTypeName": "Sample Text Data",
                  "description": "Sample Text Data",
                  "isActive": true,
                  "subject": "Sample Text Data",
                  "fromName": "Sample Text Data",
                  "fromEmailAddress": "Sample Text Data",
                  "localeId": 9,
                  "localeName": "Sample Text Data",
                  "eventRegistrationId": 12,
                  "eventRegistrationName": "Sample Text Data",
                  "tokenContextTypeId": 0,
                  "tokenContextTypeName": "Sample Text Data",
                  "storageLocationId": 19,
                  "storageLocationName": "Sample Text Data",
                  "documentIdentifier": "Sample Text Data",
                  "fileName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "updated": "2021-04-26T15:25:27.587Z"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the EmailTemplate object."
              }
            ],
            "description": "Retrieve an instance of the EmailTemplate object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "EmailTemplate/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the EmailTemplate object."
              }
            ],
            "description": "Retrieve deep detail of the EmailTemplate object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchUploadById",
            "method": "PATCH",
            "path": "EmailTemplate/Upload/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchUploadByIdResult",
              "description": "Returns patchUploadById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "emailTemplate",
                      "instance": {
                        "identity": 1,
                        "ownerId": 8,
                        "ownerName": "Sample Text Data",
                        "name": "Sample Text Data",
                        "emailTemplateTypeId": 19,
                        "emailTemplateTypeName": "Sample Text Data",
                        "description": "Sample Text Data",
                        "isActive": true,
                        "subject": "Sample Text Data",
                        "fromName": "Sample Text Data",
                        "fromEmailAddress": "Sample Text Data",
                        "localeId": 3,
                        "localeName": "Sample Text Data",
                        "eventRegistrationId": 17,
                        "eventRegistrationName": "Sample Text Data",
                        "tokenContextTypeId": 13,
                        "tokenContextTypeName": "Sample Text Data",
                        "storageLocationId": 2,
                        "storageLocationName": "Sample Text Data",
                        "documentIdentifier": "Sample Text Data",
                        "fileName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the EmailTemplate object."
              }
            ],
            "properties": {
              "details": {},
              "emailTemplates": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "Sample Text Data",
                    "emailTemplateTypeId": 24,
                    "description": "Sample Text Data",
                    "isActive": true,
                    "subject": "Sample Text Data",
                    "fromName": "Sample Text Data",
                    "fromEmailAddress": "Sample Text Data",
                    "localeId": 9,
                    "eventRegistrationId": 2,
                    "tokenContextTypeId": 5,
                    "storageLocationId": 9,
                    "documentIdentifier": "Sample Text Data",
                    "fileName": "Sample Text Data",
                    "updated": "2021-04-26T15:25:27.587Z"
                  }
                ]
              }
            },
            "description": "Update or Add the EmailTemplate object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "createUpload",
            "method": "POST",
            "path": "EmailTemplate/Upload",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "UploadResult",
              "description": "Returns createUpload information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 9,
                      "ownerName": "Sample Text Data",
                      "name": "Sample Text Data",
                      "emailTemplateTypeId": 14,
                      "emailTemplateTypeName": "Sample Text Data",
                      "description": "Sample Text Data",
                      "isActive": true,
                      "subject": "Sample Text Data",
                      "fromName": "Sample Text Data",
                      "fromEmailAddress": "Sample Text Data",
                      "localeId": 10,
                      "localeName": "Sample Text Data",
                      "eventRegistrationId": 21,
                      "eventRegistrationName": "Sample Text Data",
                      "tokenContextTypeId": 16,
                      "tokenContextTypeName": "Sample Text Data",
                      "storageLocationId": 19,
                      "storageLocationName": "Sample Text Data",
                      "documentIdentifier": "Sample Text Data",
                      "fileName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "updated": "2021-04-26T15:25:27.587Z"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Sample Text Data",
              "emailTemplateTypeId": 19,
              "description": "Sample Text Data",
              "isActive": true,
              "subject": "Sample Text Data",
              "fromName": "Sample Text Data",
              "fromEmailAddress": "Sample Text Data",
              "localeId": 2,
              "eventRegistrationId": 15,
              "tokenContextTypeId": 5,
              "storageLocationId": 11,
              "documentIdentifier": "Sample Text Data",
              "fileName": "Sample Text Data",
              "updated": "2021-04-26T15:25:27.587Z"
            },
            "description": "Create a new instance of the EmailTemplate object."
          },
          {
            "name": "updateUploadById",
            "method": "PUT",
            "path": "EmailTemplate/Upload/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "UploadByIdResult",
              "description": "Returns updateUploadById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 1,
                      "ownerName": "Sample Text Data",
                      "name": "Sample Text Data",
                      "emailTemplateTypeId": 18,
                      "emailTemplateTypeName": "Sample Text Data",
                      "description": "Sample Text Data",
                      "isActive": true,
                      "subject": "Sample Text Data",
                      "fromName": "Sample Text Data",
                      "fromEmailAddress": "Sample Text Data",
                      "localeId": 14,
                      "localeName": "Sample Text Data",
                      "eventRegistrationId": 15,
                      "eventRegistrationName": "Sample Text Data",
                      "tokenContextTypeId": 23,
                      "tokenContextTypeName": "Sample Text Data",
                      "storageLocationId": 4,
                      "storageLocationName": "Sample Text Data",
                      "documentIdentifier": "Sample Text Data",
                      "fileName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "updated": "2021-04-26T15:25:27.587Z"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Sample Text Data",
              "emailTemplateTypeId": 23,
              "description": "Sample Text Data",
              "isActive": true,
              "subject": "Sample Text Data",
              "fromName": "Sample Text Data",
              "fromEmailAddress": "Sample Text Data",
              "localeId": 24,
              "eventRegistrationId": 11,
              "tokenContextTypeId": 8,
              "storageLocationId": 24,
              "documentIdentifier": "Sample Text Data",
              "fileName": "Sample Text Data",
              "updated": "2021-04-26T15:25:27.587Z"
            },
            "description": "Update an existing instance of the EmailTemplate object."
          }
        ]
      },
      {
        "name": "Billrun Schedule Statustype",
        "source_file": "BillRun-Schedule-StatusType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "BillRun/Schedule/StatusType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the BillRunScheduleStatusType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "BillRun/Schedule/StatusType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the BillRunScheduleStatusType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getStatustypeById",
            "method": "GET",
            "path": "BillRun/Schedule/StatusType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "StatustypeByIdResult",
              "description": "Returns getStatustypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Active",
                  "ownerId": 16,
                  "ownerName": "Sample Text Data",
                  "statusTypeId": 14,
                  "statusTypeName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the BillRunScheduleStatusType object."
              }
            ],
            "description": "Retrieve an instance of the BillRunScheduleStatusType object by its ID."
          }
        ]
      },
      {
        "name": "Discount Promocode",
        "source_file": "Discount-PromoCode",
        "endpoints": [
          {
            "name": "deletePromocodeById",
            "method": "DELETE",
            "path": "Discount/PromoCode/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PromocodeByIdResult",
              "description": "Returns deletePromocodeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "discountPromoCode"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the DiscountPromoCode object."
              }
            ],
            "description": "Delete an instance of the DiscountPromoCode object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Discount/PromoCode/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the DiscountPromoCode objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Discount/PromoCode/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the DiscountPromoCode objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Discount/PromoCode/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the DiscountPromoCode objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getPromocodeById",
            "method": "GET",
            "path": "Discount/PromoCode/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PromocodeByIdResult",
              "description": "Returns getPromocodeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 2,
                  "ownerName": "Sample Text Data",
                  "name": "Christmas Promo",
                  "promoDescription": "10% off Set up fees - Christmas Promo",
                  "discountStart": "2021-04-26T15:25:27.587Z",
                  "discountEnd": "2021-04-26T15:25:27.587Z",
                  "isActive": true,
                  "isProrated": true,
                  "isNegativeAllowed": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the DiscountPromoCode object."
              }
            ],
            "description": "Retrieve an instance of the DiscountPromoCode object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Discount/PromoCode/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the DiscountPromoCode object."
              }
            ],
            "description": "Retrieve deep detail of the DiscountPromoCode object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchPromocodeById",
            "method": "PATCH",
            "path": "Discount/PromoCode/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchPromocodeByIdResult",
              "description": "Returns patchPromocodeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "discountPromoCode",
                      "instance": {
                        "identity": 1,
                        "ownerId": 5,
                        "ownerName": "Sample Text Data",
                        "name": "Christmas Promo",
                        "promoDescription": "10% off Set up fees - Christmas Promo",
                        "discountStart": "2021-04-26T15:25:27.587Z",
                        "discountEnd": "2021-04-26T15:25:27.587Z",
                        "isActive": true,
                        "isProrated": true,
                        "isNegativeAllowed": true
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the DiscountPromoCode object."
              }
            ],
            "properties": {
              "details": {},
              "discountPromoCodes": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "Christmas Promo",
                    "promoDescription": "10% off Set up fees - Christmas Promo",
                    "discountStart": "2021-04-26T15:25:27.587Z",
                    "discountEnd": "2021-04-26T15:25:27.587Z",
                    "isActive": true,
                    "isProrated": true,
                    "isNegativeAllowed": true
                  }
                ]
              }
            },
            "description": "Update or Add the DiscountPromoCode object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Discount/PromoCode/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Christmas Promo",
              "promoDescription": "10% off Set up fees - Christmas Promo",
              "discountStart": "2021-04-26T15:25:27.587Z",
              "discountEnd": "2021-04-26T15:25:27.587Z",
              "isActive": true,
              "isProrated": true,
              "isNegativeAllowed": true
            },
            "description": "Create a new instance of the DiscountPromoCode object."
          },
          {
            "name": "updatePromocodeById",
            "method": "PUT",
            "path": "Discount/PromoCode/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PromocodeByIdResult",
              "description": "Returns updatePromocodeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 13,
                      "ownerName": "Sample Text Data",
                      "name": "Christmas Promo",
                      "promoDescription": "10% off Set up fees - Christmas Promo",
                      "discountStart": "2021-04-26T15:25:27.587Z",
                      "discountEnd": "2021-04-26T15:25:27.587Z",
                      "isActive": true,
                      "isProrated": true,
                      "isNegativeAllowed": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Christmas Promo",
              "promoDescription": "10% off Set up fees - Christmas Promo",
              "discountStart": "2021-04-26T15:25:27.587Z",
              "discountEnd": "2021-04-26T15:25:27.587Z",
              "isActive": true,
              "isProrated": true,
              "isNegativeAllowed": true
            },
            "description": "Update an existing instance of the DiscountPromoCode object."
          }
        ]
      },
      {
        "name": "Tax Vendor Service Class",
        "source_file": "Tax-Vendor-Service-Class",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Tax/Vendor/Service/Class/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TaxVendorServiceClass objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Tax/Vendor/Service/Class/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TaxVendorServiceClass objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getClassById",
            "method": "GET",
            "path": "Tax/Vendor/Service/Class/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ClassByIdResult",
              "description": "Returns getClassById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Roaming Voice",
                  "usageRaterTypeId": 7,
                  "usageRaterTypeName": "Sample Text Data",
                  "usageBaseUnitId": 12,
                  "usageBaseUnitName": "Sample Text Data",
                  "usageClassTypeId": 18,
                  "usageClassTypeName": "Sample Text Data",
                  "serviceTaxCategoryId": 3,
                  "serviceTaxCategoryName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "createdByUserId": 15,
                  "createdByUserName": "Sample Text Data",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "updatedByUserId": 17,
                  "updatedByUserName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the TaxVendorServiceClass object."
              }
            ],
            "description": "Retrieve an instance of the TaxVendorServiceClass object by its ID."
          }
        ]
      },
      {
        "name": "Orderstatustype",
        "source_file": "OrderStatusType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "OrderStatusType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the OrderStatusType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "OrderStatusType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the OrderStatusType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getOrderstatustypeById",
            "method": "GET",
            "path": "OrderStatusType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "OrderstatustypeByIdResult",
              "description": "Returns getOrderstatustypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "completed",
                  "sortOrder": 0
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the OrderStatusType object."
              }
            ],
            "description": "Retrieve an instance of the OrderStatusType object by its ID."
          }
        ]
      },
      {
        "name": "Usage Classtype",
        "source_file": "Usage-ClassType",
        "endpoints": [
          {
            "name": "deleteClasstypeById",
            "method": "DELETE",
            "path": "Usage/ClassType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ClasstypeByIdResult",
              "description": "Returns deleteClasstypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "usageClassType"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageClassType object."
              }
            ],
            "description": "Delete an instance of the UsageClassType object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Usage/ClassType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageClassType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Usage/ClassType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageClassType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getClasstypeById",
            "method": "GET",
            "path": "Usage/ClassType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ClasstypeByIdResult",
              "description": "Returns getClasstypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Data Classes",
                  "sortOrder": 2,
                  "created": "2021-04-26T15:25:27.587Z",
                  "createdByUserId": 27,
                  "createdByUserName": "Sample Text Data",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "updatedByUserId": 9,
                  "updatedByUserName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageClassType object."
              }
            ],
            "description": "Retrieve an instance of the UsageClassType object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Usage/ClassType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Data Classes",
              "createdByUserId": 13,
              "updated": "2021-04-26T15:25:27.587Z",
              "updatedByUserId": 14
            },
            "description": "Create a new instance of the UsageClassType object."
          },
          {
            "name": "updateClasstypeById",
            "method": "PUT",
            "path": "Usage/ClassType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ClasstypeByIdResult",
              "description": "Returns updateClasstypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Data Classes",
                      "sortOrder": 12,
                      "created": "2021-04-26T15:25:27.587Z",
                      "createdByUserId": 3,
                      "createdByUserName": "Sample Text Data",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "updatedByUserId": 23,
                      "updatedByUserName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Data Classes",
              "createdByUserId": 4,
              "updated": "2021-04-26T15:25:27.587Z",
              "updatedByUserId": 17
            },
            "description": "Update an existing instance of the UsageClassType object."
          }
        ]
      },
      {
        "name": "Accounttype",
        "source_file": "AccountType",
        "endpoints": [
          {
            "name": "deleteAccounttypeById",
            "method": "DELETE",
            "path": "AccountType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AccounttypeByIdResult",
              "description": "Returns deleteAccounttypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "accountType"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountType object."
              }
            ],
            "description": "Delete an instance of the AccountType object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "AccountType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "AccountType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getAccounttypeById",
            "method": "GET",
            "path": "AccountType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AccounttypeByIdResult",
              "description": "Returns getAccounttypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 2,
                  "ownerName": "Sample Text Data",
                  "name": "Customer",
                  "isDefault": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountType object."
              }
            ],
            "description": "Retrieve an instance of the AccountType object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "AccountType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Customer",
              "isDefault": true
            },
            "description": "Create a new instance of the AccountType object."
          },
          {
            "name": "updateAccounttypeById",
            "method": "PUT",
            "path": "AccountType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AccounttypeByIdResult",
              "description": "Returns updateAccounttypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 14,
                      "ownerName": "Sample Text Data",
                      "name": "Customer",
                      "isDefault": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Customer",
              "isDefault": true
            },
            "description": "Update an existing instance of the AccountType object."
          }
        ]
      },
      {
        "name": "Package Service Priceplan",
        "source_file": "Package-Service-PricePlan",
        "endpoints": [
          {
            "name": "deletePriceplanById",
            "method": "DELETE",
            "path": "Package/Service/PricePlan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PriceplanByIdResult",
              "description": "Returns deletePriceplanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "packageServicePricePlan"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PackageServicePricePlan object."
              }
            ],
            "description": "Delete an instance of the PackageServicePricePlan object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Package/Service/PricePlan/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PackageServicePricePlan objects."
          },
          {
            "name": "getAccountproductcodeid",
            "method": "GET",
            "path": "Package/Service/PricePlan/AvailableFor/Account/{id}/AccountProductCode/{accountProductCodeId}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AccountproductcodeidResult",
              "description": "Returns getAccountproductcodeid information",
              "status_code": 200,
              "body": {
                "trackingId": "bc7b30cb-cb26-44f3-9a52-819adadb8721",
                "instance": {
                  "identity": 2069,
                  "packageServiceId": 1,
                  "packageFrequencyId": 45,
                  "packageFrequencyName": "DSL Package - 1 Month",
                  "packageCurrencyId": 3,
                  "isCountOnFirstUsage": false,
                  "packageId": 1,
                  "packageName": "DSL Package",
                  "serviceId": 1,
                  "serviceName": "Extreme DSL Service",
                  "packageFrequencyPackageCurrencyIsActive": true,
                  "currencyId": 1,
                  "currencyName": "United States Dollar",
                  "currencyCode": "USD",
                  "statusTierTypeId": 1,
                  "statusTierTypeName": "Not Tiered"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              },
              {
                "name": "accountProductCodeId",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountProductCode object."
              }
            ],
            "description": "Retrieve the PackageServicePricePlan that is available for the specified Account and AccountProductCode."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Package/Service/PricePlan/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PackageServicePricePlan objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Package/Service/PricePlan/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PackageServicePricePlan objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getPriceplanById",
            "method": "GET",
            "path": "Package/Service/PricePlan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PriceplanByIdResult",
              "description": "Returns getPriceplanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "packageServiceId": 20,
                  "packageServiceName": "Sample Text Data",
                  "packageFrequencyId": 16,
                  "packageFrequencyName": "Sample Text Data",
                  "packageCurrencyId": 23,
                  "packageCurrencyName": "Sample Text Data",
                  "accountPricePlanId": 12,
                  "accountPricePlanName": "Sample Text Data",
                  "accountProductCodeId": 8,
                  "accountProductCodeName": "Sample Text Data",
                  "priceBookId": 1,
                  "priceBookName": "Sample Text Data",
                  "pricePlanTypeId": 11,
                  "pricePlanTypeName": "Sample Text Data",
                  "effective": "Sample Text Data",
                  "priceChangeTrackingId": 13,
                  "priceChangeTrackingName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "updated": "2021-04-26T15:25:27.587Z"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PackageServicePricePlan object."
              }
            ],
            "description": "Retrieve an instance of the PackageServicePricePlan object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Package/Service/PricePlan/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PackageServicePricePlan object."
              }
            ],
            "description": "Retrieve deep detail of the PackageServicePricePlan object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchPriceplanById",
            "method": "PATCH",
            "path": "Package/Service/PricePlan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchPriceplanByIdResult",
              "description": "Returns patchPriceplanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "packageServicePricePlan",
                      "instance": {
                        "identity": 1,
                        "packageServiceId": 11,
                        "packageServiceName": "Sample Text Data",
                        "packageFrequencyId": 12,
                        "packageFrequencyName": "Sample Text Data",
                        "packageCurrencyId": 24,
                        "packageCurrencyName": "Sample Text Data",
                        "accountPricePlanId": 15,
                        "accountPricePlanName": "Sample Text Data",
                        "accountProductCodeId": 10,
                        "accountProductCodeName": "Sample Text Data",
                        "priceBookId": 3,
                        "priceBookName": "Sample Text Data",
                        "pricePlanTypeId": 15,
                        "pricePlanTypeName": "Sample Text Data",
                        "effective": "Sample Text Data",
                        "priceChangeTrackingId": 0,
                        "priceChangeTrackingName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PackageServicePricePlan object."
              }
            ],
            "properties": {
              "details": {},
              "packageServicePricePlans": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "packageServiceId": 13,
                    "packageFrequencyId": 21,
                    "packageCurrencyId": 5,
                    "accountPricePlanId": 15,
                    "accountProductCodeId": 9,
                    "priceBookId": 7,
                    "pricePlanTypeId": 4,
                    "effective": "Sample Text Data",
                    "priceChangeTrackingId": 6,
                    "updated": "2021-04-26T15:25:27.587Z"
                  }
                ]
              }
            },
            "description": "Update or Add the PackageServicePricePlan object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Package/Service/PricePlan/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "packageServiceId": 4,
              "packageFrequencyId": 6,
              "packageCurrencyId": 17,
              "accountPricePlanId": 24,
              "accountProductCodeId": 23,
              "priceBookId": 15,
              "pricePlanTypeId": 22,
              "effective": "Sample Text Data",
              "priceChangeTrackingId": 14,
              "updated": "2021-04-26T15:25:27.587Z"
            },
            "description": "Create a new instance of the PackageServicePricePlan object."
          },
          {
            "name": "updatePriceplanById",
            "method": "PUT",
            "path": "Package/Service/PricePlan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PriceplanByIdResult",
              "description": "Returns updatePriceplanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "packageServiceId": 6,
                      "packageServiceName": "Sample Text Data",
                      "packageFrequencyId": 23,
                      "packageFrequencyName": "Sample Text Data",
                      "packageCurrencyId": 21,
                      "packageCurrencyName": "Sample Text Data",
                      "accountPricePlanId": 0,
                      "accountPricePlanName": "Sample Text Data",
                      "accountProductCodeId": 2,
                      "accountProductCodeName": "Sample Text Data",
                      "priceBookId": 25,
                      "priceBookName": "Sample Text Data",
                      "pricePlanTypeId": 10,
                      "pricePlanTypeName": "Sample Text Data",
                      "effective": "Sample Text Data",
                      "priceChangeTrackingId": 21,
                      "priceChangeTrackingName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "updated": "2021-04-26T15:25:27.587Z"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "packageServiceId": 24,
              "packageFrequencyId": 3,
              "packageCurrencyId": 6,
              "accountPricePlanId": 12,
              "accountProductCodeId": 18,
              "priceBookId": 6,
              "pricePlanTypeId": 10,
              "effective": "Sample Text Data",
              "priceChangeTrackingId": 10,
              "updated": "2021-04-26T15:25:27.587Z"
            },
            "description": "Update an existing instance of the PackageServicePricePlan object."
          },
          {
            "name": "updateDiscountrank",
            "method": "PUT",
            "path": "Package/Service/PricePlan/{id}/DiscountRank",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DiscountrankResult",
              "description": "Returns updateDiscountrank information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "packageServiceId": 24,
                      "packageServiceName": "Sample Text Data",
                      "packageFrequencyId": 12,
                      "packageFrequencyName": "Sample Text Data",
                      "packageCurrencyId": 11,
                      "packageCurrencyName": "Sample Text Data",
                      "accountPricePlanId": 16,
                      "accountPricePlanName": "Sample Text Data",
                      "accountProductCodeId": 15,
                      "accountProductCodeName": "Sample Text Data",
                      "priceBookId": 27,
                      "priceBookName": "Sample Text Data",
                      "pricePlanTypeId": 21,
                      "pricePlanTypeName": "Sample Text Data",
                      "effective": "Sample Text Data",
                      "priceChangeTrackingId": 18,
                      "priceChangeTrackingName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "updated": "2021-04-26T15:25:27.587Z"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Package Service Price Plan object."
              }
            ],
            "properties": [
              13,
              20,
              12,
              41
            ],
            "description": "Re-arrange the order of the Package Service Price Plan Discounts.The Rank defined based on the order of the discounts will be used to identify the priority. This API is expecting all the Package Service Price Plan Discount ids to be passed in order of priority."
          }
        ]
      },
      {
        "name": "Contacttype",
        "source_file": "ContactType",
        "endpoints": [
          {
            "name": "deleteContacttypeById",
            "method": "DELETE",
            "path": "ContactType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ContacttypeByIdResult",
              "description": "Returns deleteContacttypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "contactType"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ContactType object."
              }
            ],
            "description": "Delete an instance of the ContactType object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "ContactType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ContactType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "ContactType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ContactType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "ContactType/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ContactType objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getContacttypeById",
            "method": "GET",
            "path": "ContactType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ContacttypeByIdResult",
              "description": "Returns getContacttypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Shipping",
                  "ownerId": 11,
                  "ownerName": "Sample Text Data",
                  "isRequired": true,
                  "contactTypeTypeId": 22,
                  "contactTypeTypeName": "Sample Text Data",
                  "description": "Shipping contact for the account",
                  "sendEmail": true,
                  "showOnOverview": true,
                  "showOnNewAccount": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ContactType object."
              }
            ],
            "description": "Retrieve an instance of the ContactType object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "ContactType/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ContactType object."
              }
            ],
            "description": "Retrieve deep detail of the ContactType object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchContacttypeById",
            "method": "PATCH",
            "path": "ContactType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchContacttypeByIdResult",
              "description": "Returns patchContacttypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "contactType",
                      "instance": {
                        "identity": 1,
                        "name": "Shipping",
                        "ownerId": 2,
                        "ownerName": "Sample Text Data",
                        "isRequired": true,
                        "contactTypeTypeId": 26,
                        "contactTypeTypeName": "Sample Text Data",
                        "description": "Shipping contact for the account",
                        "sendEmail": true,
                        "showOnOverview": true,
                        "showOnNewAccount": true
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ContactType object."
              }
            ],
            "properties": {
              "details": {},
              "contactTypes": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "Shipping",
                    "isRequired": true,
                    "contactTypeTypeId": 3,
                    "description": "Shipping contact for the account",
                    "sendEmail": true,
                    "showOnOverview": true,
                    "showOnNewAccount": true
                  }
                ]
              }
            },
            "description": "Update or Add the ContactType object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "ContactType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Shipping",
              "isRequired": true,
              "contactTypeTypeId": 0,
              "description": "Shipping contact for the account",
              "sendEmail": true,
              "showOnOverview": true,
              "showOnNewAccount": true
            },
            "description": "Create a new instance of the ContactType object."
          },
          {
            "name": "updateContacttypeById",
            "method": "PUT",
            "path": "ContactType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ContacttypeByIdResult",
              "description": "Returns updateContacttypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Shipping",
                      "ownerId": 15,
                      "ownerName": "Sample Text Data",
                      "isRequired": true,
                      "contactTypeTypeId": 10,
                      "contactTypeTypeName": "Sample Text Data",
                      "description": "Shipping contact for the account",
                      "sendEmail": true,
                      "showOnOverview": true,
                      "showOnNewAccount": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Shipping",
              "isRequired": true,
              "contactTypeTypeId": 5,
              "description": "Shipping contact for the account",
              "sendEmail": true,
              "showOnOverview": true,
              "showOnNewAccount": true
            },
            "description": "Update an existing instance of the ContactType object."
          }
        ]
      },
      {
        "name": "Accounttaxexemptlevel",
        "source_file": "AccountTaxExemptLevel",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "AccountTaxExemptLevel/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountTaxExemptLevel objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "AccountTaxExemptLevel/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountTaxExemptLevel objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getAccounttaxexemptlevelById",
            "method": "GET",
            "path": "AccountTaxExemptLevel/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AccounttaxexemptlevelByIdResult",
              "description": "Returns getAccounttaxexemptlevelById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "accountId": 1,
                  "accountName": "Sample Text Data",
                  "taxExemptLevelId": 21,
                  "taxExemptLevelName": "Sample Text Data",
                  "updated": "2021-04-26T15:25:27.587Z"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountTaxExemptLevel object."
              }
            ],
            "description": "Retrieve an instance of the AccountTaxExemptLevel object by its ID."
          }
        ]
      },
      {
        "name": "Payment Actiontype",
        "source_file": "Payment-ActionType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Payment/ActionType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PaymentActionType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Payment/ActionType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PaymentActionType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getActiontypeById",
            "method": "GET",
            "path": "Payment/ActionType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ActiontypeByIdResult",
              "description": "Returns getActiontypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Apply late fee",
                  "sortOrder": 27
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PaymentActionType object."
              }
            ],
            "description": "Retrieve an instance of the PaymentActionType object by its ID."
          }
        ]
      },
      {
        "name": "Billcanceloptiontype",
        "source_file": "BillCancelOptionType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "BillCancelOptionType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the BillCancelOptionType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "BillCancelOptionType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the BillCancelOptionType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getBillcanceloptiontypeById",
            "method": "GET",
            "path": "BillCancelOptionType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BillcanceloptiontypeByIdResult",
              "description": "Returns getBillcanceloptiontypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Prorate Final Period Charge",
                  "sortOrder": 0
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the BillCancelOptionType object."
              }
            ],
            "description": "Retrieve an instance of the BillCancelOptionType object by its ID."
          }
        ]
      },
      {
        "name": "Billrun",
        "source_file": "BillRun",
        "endpoints": [
          {
            "name": "deleteBillrunById",
            "method": "DELETE",
            "path": "BillRun/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BillrunByIdResult",
              "description": "Returns deleteBillrunById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "billRun"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the BillRun object."
              }
            ],
            "description": "Delete an instance of the BillRun object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "BillRun/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the BillRun objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "BillRun/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the BillRun objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "BillRun/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the BillRun objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getBillrunById",
            "method": "GET",
            "path": "BillRun/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BillrunByIdResult",
              "description": "Returns getBillrunById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "billPeriodEnd": "2021-04-26T15:25:27.587Z",
                  "billPeriodStart": "2021-04-26T15:25:27.587Z",
                  "ownerId": 12,
                  "ownerName": "Sample Text Data",
                  "runBilling": true,
                  "name": "First of the Month Invoice Delivery",
                  "runDelivery": true,
                  "runRenderInvoice": true,
                  "runPaymentTerm": true,
                  "runBillUsage": true,
                  "enabled": true,
                  "runPaymentRetryTerms": true,
                  "collectionTypeId": 4,
                  "collectionTypeName": "Sample Text Data",
                  "runInvoicing": true,
                  "currencyExchangeId": 20,
                  "currencyExchangeName": "Sample Text Data",
                  "runContract": true,
                  "posting": "2021-04-26T15:25:27.587Z",
                  "billRunStatusTypeId": 27,
                  "billRunStatusTypeName": "Sample Text Data",
                  "runPayment": true,
                  "billRunTypeId": 17,
                  "billRunTypeName": "Sample Text Data",
                  "runInvoicingContract": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the BillRun object."
              }
            ],
            "description": "Retrieve an instance of the BillRun object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "BillRun/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the BillRun object."
              }
            ],
            "description": "Retrieve deep detail of the BillRun object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchBillrunById",
            "method": "PATCH",
            "path": "BillRun/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchBillrunByIdResult",
              "description": "Returns patchBillrunById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "billRun",
                      "instance": {
                        "identity": 1,
                        "billPeriodEnd": "2021-04-26T15:25:27.587Z",
                        "billPeriodStart": "2021-04-26T15:25:27.587Z",
                        "ownerId": 16,
                        "ownerName": "Sample Text Data",
                        "runBilling": true,
                        "name": "First of the Month Invoice Delivery",
                        "runDelivery": true,
                        "runRenderInvoice": true,
                        "runPaymentTerm": true,
                        "runBillUsage": true,
                        "enabled": true,
                        "runPaymentRetryTerms": true,
                        "collectionTypeId": 0,
                        "collectionTypeName": "Sample Text Data",
                        "runInvoicing": true,
                        "currencyExchangeId": 12,
                        "currencyExchangeName": "Sample Text Data",
                        "runContract": true,
                        "posting": "2021-04-26T15:25:27.587Z",
                        "billRunStatusTypeId": 11,
                        "billRunStatusTypeName": "Sample Text Data",
                        "runPayment": true,
                        "billRunTypeId": 3,
                        "billRunTypeName": "Sample Text Data",
                        "runInvoicingContract": true
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the BillRun object."
              }
            ],
            "properties": {
              "details": {},
              "billRuns": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "billPeriodEnd": "2021-04-26T15:25:27.587Z",
                    "billPeriodStart": "2021-04-26T15:25:27.587Z",
                    "runBilling": true,
                    "name": "First of the Month Invoice Delivery",
                    "runDelivery": true,
                    "runRenderInvoice": true,
                    "runPaymentTerm": true,
                    "runBillUsage": true,
                    "runPaymentRetryTerms": true,
                    "collectionTypeId": 14,
                    "runInvoicing": true,
                    "currencyExchangeId": 8,
                    "runContract": true,
                    "posting": "2021-04-26T15:25:27.587Z",
                    "billRunStatusTypeId": 4,
                    "runPayment": true,
                    "billRunTypeId": 11,
                    "runInvoicingContract": true
                  }
                ]
              }
            },
            "description": "Update or Add the BillRun object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "BillRun/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "billPeriodEnd": "2021-04-26T15:25:27.587Z",
              "billPeriodStart": "2021-04-26T15:25:27.587Z",
              "runBilling": true,
              "name": "First of the Month Invoice Delivery",
              "runDelivery": true,
              "runRenderInvoice": true,
              "runPaymentTerm": true,
              "runBillUsage": true,
              "runPaymentRetryTerms": true,
              "collectionTypeId": 18,
              "runInvoicing": true,
              "currencyExchangeId": 17,
              "runContract": true,
              "posting": "2021-04-26T15:25:27.587Z",
              "billRunStatusTypeId": 25,
              "runPayment": true,
              "billRunTypeId": 7,
              "runInvoicingContract": true
            },
            "description": "Create a new instance of the BillRun object."
          },
          {
            "name": "updateBillrunById",
            "method": "PUT",
            "path": "BillRun/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BillrunByIdResult",
              "description": "Returns updateBillrunById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "billPeriodEnd": "2021-04-26T15:25:27.587Z",
                      "billPeriodStart": "2021-04-26T15:25:27.587Z",
                      "ownerId": 7,
                      "ownerName": "Sample Text Data",
                      "runBilling": true,
                      "name": "First of the Month Invoice Delivery",
                      "runDelivery": true,
                      "runRenderInvoice": true,
                      "runPaymentTerm": true,
                      "runBillUsage": true,
                      "enabled": true,
                      "runPaymentRetryTerms": true,
                      "collectionTypeId": 1,
                      "collectionTypeName": "Sample Text Data",
                      "runInvoicing": true,
                      "currencyExchangeId": 27,
                      "currencyExchangeName": "Sample Text Data",
                      "runContract": true,
                      "posting": "2021-04-26T15:25:27.587Z",
                      "billRunStatusTypeId": 24,
                      "billRunStatusTypeName": "Sample Text Data",
                      "runPayment": true,
                      "billRunTypeId": 3,
                      "billRunTypeName": "Sample Text Data",
                      "runInvoicingContract": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "billPeriodEnd": "2021-04-26T15:25:27.587Z",
              "billPeriodStart": "2021-04-26T15:25:27.587Z",
              "runBilling": true,
              "name": "First of the Month Invoice Delivery",
              "runDelivery": true,
              "runRenderInvoice": true,
              "runPaymentTerm": true,
              "runBillUsage": true,
              "runPaymentRetryTerms": true,
              "collectionTypeId": 1,
              "runInvoicing": true,
              "currencyExchangeId": 3,
              "runContract": true,
              "posting": "2021-04-26T15:25:27.587Z",
              "billRunStatusTypeId": 16,
              "runPayment": true,
              "billRunTypeId": 3,
              "runInvoicingContract": true
            },
            "description": "Update an existing instance of the BillRun object."
          }
        ]
      },
      {
        "name": "Rateplan",
        "source_file": "RatePlan",
        "endpoints": [
          {
            "name": "deleteRateplanById",
            "method": "DELETE",
            "path": "RatePlan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RateplanByIdResult",
              "description": "Returns deleteRateplanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "ratePlan"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the RatePlan object."
              }
            ],
            "description": "Delete an instance of the RatePlan object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "RatePlan/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the RatePlan objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "RatePlan/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the RatePlan objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "RatePlan/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the RatePlan objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getRateplanById",
            "method": "GET",
            "path": "RatePlan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RateplanByIdResult",
              "description": "Returns getRateplanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 7,
                  "ownerName": "Sample Text Data",
                  "name": "Gold Rate Plan",
                  "displayName": "Sample Text Data",
                  "updated": "2021-04-26T15:25:27.587Z"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the RatePlan object."
              }
            ],
            "description": "Retrieve an instance of the RatePlan object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "RatePlan/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the RatePlan object."
              }
            ],
            "description": "Retrieve deep detail of the RatePlan object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchRateplanById",
            "method": "PATCH",
            "path": "RatePlan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchRateplanByIdResult",
              "description": "Returns patchRateplanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "ratePlan",
                      "instance": {
                        "identity": 1,
                        "ownerId": 20,
                        "ownerName": "Sample Text Data",
                        "name": "Gold Rate Plan",
                        "displayName": "Sample Text Data",
                        "updated": "2021-04-26T15:25:27.587Z"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the RatePlan object."
              }
            ],
            "properties": {
              "details": {},
              "ratePlans": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "Gold Rate Plan",
                    "displayName": "Sample Text Data",
                    "updated": "2021-04-26T15:25:27.587Z"
                  }
                ]
              }
            },
            "description": "Update or Add the RatePlan object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "RatePlan/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Gold Rate Plan",
              "displayName": "Sample Text Data",
              "updated": "2021-04-26T15:25:27.587Z"
            },
            "description": "Create a new instance of the RatePlan object."
          },
          {
            "name": "updateRateplanById",
            "method": "PUT",
            "path": "RatePlan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RateplanByIdResult",
              "description": "Returns updateRateplanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 10,
                      "ownerName": "Sample Text Data",
                      "name": "Gold Rate Plan",
                      "displayName": "Sample Text Data",
                      "updated": "2021-04-26T15:25:27.587Z"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Gold Rate Plan",
              "displayName": "Sample Text Data",
              "updated": "2021-04-26T15:25:27.587Z"
            },
            "description": "Update an existing instance of the RatePlan object."
          }
        ]
      },
      {
        "name": "Paymenttype",
        "source_file": "PaymentType",
        "endpoints": [
          {
            "name": "deletePaymenttypeById",
            "method": "DELETE",
            "path": "PaymentType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PaymenttypeByIdResult",
              "description": "Returns deletePaymenttypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "paymentType"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PaymentType object."
              }
            ],
            "description": "Delete an instance of the PaymentType object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "PaymentType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PaymentType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "PaymentType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PaymentType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getPaymenttypeById",
            "method": "GET",
            "path": "PaymentType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PaymenttypeByIdResult",
              "description": "Returns getPaymenttypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Bank Draft",
                  "ownerId": 13,
                  "ownerName": "Sample Text Data",
                  "generalLedgerId": 0,
                  "generalLedgerName": "Sample Text Data",
                  "paymentBaseTypeId": 18,
                  "paymentBaseTypeName": "Sample Text Data",
                  "paymentTypeDisbursementTypeId": 23,
                  "paymentTypeDisbursementTypeName": "Sample Text Data",
                  "description": "Direct deposit of a Bank Draft",
                  "isActive": true,
                  "paymentGatewayId": 4,
                  "paymentGatewayName": "Sample Text Data",
                  "cardTypeId": 20,
                  "cardTypeName": "Sample Text Data",
                  "paymentProviderId": 18,
                  "paymentProviderName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PaymentType object."
              }
            ],
            "description": "Retrieve an instance of the PaymentType object by its ID."
          },
          {
            "name": "createRecord",
            "method": "POST",
            "path": "PaymentType/Record",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RecordResult",
              "description": "Returns createRecord information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Bank Draft",
                      "ownerId": 3,
                      "ownerName": "Sample Text Data",
                      "generalLedgerId": 15,
                      "generalLedgerName": "Sample Text Data",
                      "paymentBaseTypeId": 21,
                      "paymentBaseTypeName": "Sample Text Data",
                      "paymentTypeDisbursementTypeId": 0,
                      "paymentTypeDisbursementTypeName": "Sample Text Data",
                      "description": "Direct deposit of a Bank Draft",
                      "isActive": true,
                      "paymentGatewayId": 8,
                      "paymentGatewayName": "Sample Text Data",
                      "cardTypeId": 27,
                      "cardTypeName": "Sample Text Data",
                      "paymentProviderId": 10,
                      "paymentProviderName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Bank Draft",
              "generalLedgerId": 0,
              "paymentBaseTypeId": 8,
              "paymentTypeDisbursementTypeId": 27,
              "description": "Direct deposit of a Bank Draft",
              "isActive": true,
              "paymentGatewayId": 5,
              "cardTypeId": 6,
              "paymentProviderId": 23
            },
            "description": "Create a PaymentType that is not associated with a Payment Gateway. PaymentTypes are generally 'auto' created when a payment gateway is configured in the system. This API can be used to create a PaymentType for non-gateway transactions. This would be used when LogiSense Billing is not used to collect the payment, but instead log a record of the payment to reflect the account balances."
          },
          {
            "name": "updateRecordById",
            "method": "PUT",
            "path": "PaymentType/Record/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RecordByIdResult",
              "description": "Returns updateRecordById information"
            },
            "parameters": [],
            "properties": {},
            "description": "Update the PaymentType record based on the record id"
          },
          {
            "name": "updatePaymenttypeById",
            "method": "PUT",
            "path": "PaymentType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PaymenttypeByIdResult",
              "description": "Returns updatePaymenttypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Bank Draft",
                      "ownerId": 6,
                      "ownerName": "Sample Text Data",
                      "generalLedgerId": 17,
                      "generalLedgerName": "Sample Text Data",
                      "paymentBaseTypeId": 2,
                      "paymentBaseTypeName": "Sample Text Data",
                      "paymentTypeDisbursementTypeId": 18,
                      "paymentTypeDisbursementTypeName": "Sample Text Data",
                      "description": "Direct deposit of a Bank Draft",
                      "isActive": true,
                      "paymentGatewayId": 15,
                      "paymentGatewayName": "Sample Text Data",
                      "cardTypeId": 3,
                      "cardTypeName": "Sample Text Data",
                      "paymentProviderId": 1,
                      "paymentProviderName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Bank Draft",
              "generalLedgerId": 23,
              "paymentBaseTypeId": 3,
              "paymentTypeDisbursementTypeId": 7,
              "description": "Direct deposit of a Bank Draft",
              "isActive": true,
              "paymentGatewayId": 23,
              "cardTypeId": 13,
              "paymentProviderId": 17
            },
            "description": "Update an existing instance of the PaymentType object."
          }
        ]
      },
      {
        "name": "Account Shareplan Participation",
        "source_file": "Account-SharePlan-Participation",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Account/SharePlan/Participation/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountSharePlanParticipation objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/SharePlan/Participation/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountSharePlanParticipation objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getParticipationById",
            "method": "GET",
            "path": "Account/SharePlan/Participation/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ParticipationByIdResult",
              "description": "Returns getParticipationById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "accountSharePlanId": 9,
                  "accountSharePlanName": "Sample Text Data",
                  "serviceId": 10,
                  "serviceName": "Sample Text Data",
                  "packageId": 10,
                  "packageName": "Sample Text Data",
                  "dataParticipatingLimit": 24,
                  "dataUsageUnitId": 2,
                  "dataUsageUnitName": "Sample Text Data",
                  "timeParticipatingLimit": 13,
                  "timeUsageUnitId": 9,
                  "timeUsageUnitName": "Sample Text Data",
                  "countParticipatingLimit": 4,
                  "countUsageUnitId": 5,
                  "countUsageUnitName": "Sample Text Data",
                  "moneyParticipatingLimit": 27,
                  "moneyUsageUnitId": 6,
                  "moneyUsageUnitName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountSharePlanParticipation object."
              }
            ],
            "description": "Retrieve an instance of the AccountSharePlanParticipation object by its ID."
          }
        ]
      },
      {
        "name": "Service Transition",
        "source_file": "Service-Transition",
        "endpoints": [
          {
            "name": "deleteTransitionById",
            "method": "DELETE",
            "path": "Service/Transition/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TransitionByIdResult",
              "description": "Returns deleteTransitionById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "serviceTransition"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ServiceTransition object."
              }
            ],
            "description": "Delete an instance of the ServiceTransition object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Service/Transition/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ServiceTransition objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Service/Transition/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ServiceTransition objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getTransitionById",
            "method": "GET",
            "path": "Service/Transition/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TransitionByIdResult",
              "description": "Returns getTransitionById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 20,
                  "ownerName": "Sample Text Data",
                  "name": "Suspended",
                  "fromServiceStatusTypeId": 24,
                  "fromServiceStatusTypeName": "Sample Text Data",
                  "toServiceStatusTypeId": 9,
                  "toServiceStatusTypeName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ServiceTransition object."
              }
            ],
            "description": "Retrieve an instance of the ServiceTransition object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Service/Transition/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Suspended",
              "fromServiceStatusTypeId": 3,
              "toServiceStatusTypeId": 13
            },
            "description": "Create a new instance of the ServiceTransition object."
          },
          {
            "name": "updateTransitionById",
            "method": "PUT",
            "path": "Service/Transition/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TransitionByIdResult",
              "description": "Returns updateTransitionById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 3,
                      "ownerName": "Sample Text Data",
                      "name": "Suspended",
                      "fromServiceStatusTypeId": 5,
                      "fromServiceStatusTypeName": "Sample Text Data",
                      "toServiceStatusTypeId": 9,
                      "toServiceStatusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Suspended",
              "fromServiceStatusTypeId": 19,
              "toServiceStatusTypeId": 6
            },
            "description": "Update an existing instance of the ServiceTransition object."
          }
        ]
      },
      {
        "name": "Invoiceitemtype",
        "source_file": "InvoiceItemType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "InvoiceItemType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceItemType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "InvoiceItemType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceItemType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getInvoiceitemtypeById",
            "method": "GET",
            "path": "InvoiceItemType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "InvoiceitemtypeByIdResult",
              "description": "Returns getInvoiceitemtypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Sample Text Data",
                  "baseInvoiceItemTypeId": 26,
                  "baseInvoiceItemTypeName": "Sample Text Data",
                  "invoiceDetail": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the InvoiceItemType object."
              }
            ],
            "description": "Retrieve an instance of the InvoiceItemType object by its ID."
          }
        ]
      },
      {
        "name": "Account Contract Statustype",
        "source_file": "Account-Contract-StatusType.json",
        "endpoints": [
          {
            "name": "deleteStatustypeById",
            "method": "DELETE",
            "path": "Account/Contract/StatusType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "StatustypeByIdResult",
              "description": "Returns deleteStatustypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "userStatusType"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountContractStatusType object."
              }
            ],
            "description": "Delete an instance of the AccountContractStatusType object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Account/Contract/StatusType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountContractStatusType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/Contract/StatusType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountContractStatusType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getStatustypeById",
            "method": "GET",
            "path": "Account/Contract/StatusType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "StatustypeByIdResult",
              "description": "Returns getStatustypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Active",
                  "ownerId": 16,
                  "ownerName": "Sample Text Data",
                  "statusTypeId": 14,
                  "statusTypeName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountContractStatusType object."
              }
            ],
            "description": "Retrieve an instance of the AccountContractStatusType object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Account/Contract/StatusType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Expires at End of Term",
              "statusTypeId": 4
            },
            "description": "Create a new instance of the AccountContractStatusType object."
          },
          {
            "name": "updateStatustypeById",
            "method": "PUT",
            "path": "Account/Contract/StatusType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "StatustypeByIdResult",
              "description": "Returns updateStatustypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 14,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 20,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Expires at End of Term",
              "statusTypeId": 2
            },
            "description": "Update an existing instance of the AccountContractStatusType object."
          }
        ]
      },
      {
        "name": "Payment Basetype",
        "source_file": "Payment-BaseType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Payment/BaseType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PaymentBaseType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Payment/BaseType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PaymentBaseType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getBasetypeById",
            "method": "GET",
            "path": "Payment/BaseType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BasetypeByIdResult",
              "description": "Returns getBasetypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Recurring Charge",
                  "sortOrder": 20,
                  "tokenName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PaymentBaseType object."
              }
            ],
            "description": "Retrieve an instance of the PaymentBaseType object by its ID."
          }
        ]
      },
      {
        "name": "Invoice Deliverytype",
        "source_file": "Invoice-DeliveryType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Invoice/DeliveryType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceDeliveryType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Invoice/DeliveryType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceDeliveryType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDeliverytypeById",
            "method": "GET",
            "path": "Invoice/DeliveryType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DeliverytypeByIdResult",
              "description": "Returns getDeliverytypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Sample Text Data",
                  "sortOrder": 22
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the InvoiceDeliveryType object."
              }
            ],
            "description": "Retrieve an instance of the InvoiceDeliveryType object by its ID."
          }
        ]
      },
      {
        "name": "Account Shareplan",
        "source_file": "Account-SharePlan",
        "endpoints": [
          {
            "name": "deleteShareplanById",
            "method": "DELETE",
            "path": "Account/SharePlan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ShareplanByIdResult",
              "description": "Returns deleteShareplanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "usageBucketSharePlan"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountSharePlan object."
              }
            ],
            "description": "Delete an instance of the AccountSharePlan object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Account/SharePlan/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountSharePlan objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/SharePlan/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountSharePlan objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getNotification",
            "method": "GET",
            "path": "Account/SharePlan/{accountSharePlanId}/UsageBucket/{usageBucketId}/Notification",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "NotificationResult",
              "description": "Returns getNotification information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "usageBucketSharePlanId": 25,
                    "usageBucketSharePlanName": "Sample Text Data",
                    "usageBucketShareLevelId": 14,
                    "usageBucketShareLevelName": "Sample Text Data",
                    "accountId": 18,
                    "accountName": "Sample Text Data",
                    "accountServiceId": "Sample Text Data",
                    "accountServiceName": "Sample Text Data",
                    "isAvailable": true,
                    "sharePlanAccountPackageId": "Sample Text Data",
                    "sharePlanAccountPackageName": "Sample Text Data",
                    "sellingAccountPackageId": "Sample Text Data",
                    "sellingAccountPackageName": "Sample Text Data",
                    "bucketPriorityTieBreaker": 5
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountSharePlan objects."
          },
          {
            "name": "getShareplanById",
            "method": "GET",
            "path": "Account/SharePlan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ShareplanByIdResult",
              "description": "Returns getShareplanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 26,
                  "ownerName": "Sample Text Data",
                  "usageBucketShareLevelId": 2,
                  "usageBucketShareLevelName": "Sample Text Data",
                  "name": "Gold Plan Bucket",
                  "description": "100MB Inclusion",
                  "usageBucketSharePlanActivationTypeId": 7,
                  "usageBucketSharePlanActivationTypeName": "Sample Text Data",
                  "isActive": true,
                  "isAvailable": true,
                  "defaultServiceStatusTypeId": 6,
                  "defaultServiceStatusTypeName": "Sample Text Data",
                  "isPackageLevelParticipation": true,
                  "sharePlanTypeId": 0,
                  "sharePlanTypeName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountSharePlan object."
              }
            ],
            "description": "Retrieve an instance of the AccountSharePlan object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Account/SharePlan/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountSharePlan object."
              }
            ],
            "description": "Retrieve deep detail of the AccountSharePlan object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchShareplanById",
            "method": "PATCH",
            "path": "Account/SharePlan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchShareplanByIdResult",
              "description": "Returns patchShareplanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "usageBucketSharePlan",
                      "instance": {
                        "identity": 1,
                        "ownerId": 4,
                        "ownerName": "Sample Text Data",
                        "usageBucketShareLevelId": 7,
                        "usageBucketShareLevelName": "Sample Text Data",
                        "name": "Gold Plan Bucket",
                        "description": "100MB Inclusion",
                        "usageBucketSharePlanActivationTypeId": 21,
                        "usageBucketSharePlanActivationTypeName": "Sample Text Data",
                        "isActive": true,
                        "isAvailable": true,
                        "defaultServiceStatusTypeId": 9,
                        "defaultServiceStatusTypeName": "Sample Text Data",
                        "isPackageLevelParticipation": true,
                        "sharePlanTypeId": 0,
                        "sharePlanTypeName": "Sample Text Data"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountSharePlan object."
              }
            ],
            "properties": {
              "details": {},
              "accountSharePlans": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "usageBucketSharePlanId": 17,
                    "usageBucketShareLevelId": 1,
                    "accountId": 2,
                    "accountServiceId": "Sample Text Data",
                    "sharePlanAccountPackageId": "Sample Text Data",
                    "sellingAccountPackageId": "Sample Text Data",
                    "bucketPriorityTieBreaker": 3
                  }
                ]
              }
            },
            "description": "Update or Add the AccountSharePlan object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "createAddon",
            "method": "POST",
            "path": "Account/SharePlan/{id}/AddOn",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AddonResult",
              "description": "Returns createAddon information",
              "status_code": 200,
              "body": {
                "trackingId": "d090d5a4-8b75-4068-a43c-f3b79fae5de9",
                "type": "create",
                "results": {
                  "totalCount": 7,
                  "items": [
                    {
                      "identity": 3177,
                      "action": "created",
                      "dtoTypeKey": "accountPackage",
                      "instance": {
                        "identity": 3177,
                        "accountId": 10000003,
                        "accountName": "Dan Steele",
                        "created": "2023-06-23T18:36:48.073Z",
                        "nextBill": "2023-01-01T00:00:00Z",
                        "name": "Share Plan Add On Package (8E0F041F)",
                        "effective": "2023-01-01T00:00:00Z",
                        "packageFrequencyId": 1147,
                        "packageFrequencyName": "Share Plan Add On Package Frequency",
                        "createdByUserId": 8000,
                        "createdByUserName": "LogiSense Support",
                        "accountSharePlanId": 2,
                        "packageCategoryId": 4,
                        "packageCategoryName": "Share Plan Add-on",
                        "chargeRecurringIfUsage": false,
                        "waiveEarlyTerminationFee": false,
                        "quantity": 1,
                        "isQuantityAllowed": false,
                        "priceBookId": 1,
                        "priceBookName": "Standard Price Book"
                      }
                    },
                    {
                      "identity": 20125,
                      "action": "created",
                      "dtoTypeKey": "accountService",
                      "instance": {
                        "identity": 20125,
                        "serviceId": 1196,
                        "serviceName": "Share Plan Add On Service",
                        "accountId": 10000003,
                        "accountName": "Dan Steele",
                        "created": "2023-06-23T18:36:48.073Z",
                        "accountPackageId": 3177,
                        "accountPackageName": "Share Plan Add On Package (8E0F041F)",
                        "name": "Share Plan Add On Service (B9852F7C)",
                        "createdByUserId": 8000,
                        "createdByUserName": "LogiSense Support",
                        "usageNextBill": "2023-02-01T00:00:00Z",
                        "isTaxInclusive": false
                      }
                    },
                    {
                      "identity": 9,
                      "action": "created",
                      "dtoTypeKey": "accountServiceUsageBucket",
                      "instance": {
                        "identity": 9,
                        "usageBucketId": 1,
                        "usageBucketName": "Internet Data",
                        "accountServiceId": 20125,
                        "accountServiceName": "Share Plan Add On Service (B9852F7C)",
                        "refillFrequency": 3,
                        "refillFrequencyTypeId": 3,
                        "refillFrequencyTypeName": "Month",
                        "prorate": true,
                        "isInfiniteLastTier": false,
                        "isThresholdPerAccountService": false,
                        "usageBucketRefillTypeId": 6,
                        "usageBucketRefillTypeName": "Recurring with rollover",
                        "expireAfterRecurrence": 5,
                        "accountPackageActivation": false,
                        "isSharedAcrossPackage": false,
                        "overageUsageRatePlanId": null,
                        "overageUsageRatePlanName": null
                      }
                    },
                    {
                      "identity": 11,
                      "action": "created",
                      "dtoTypeKey": "accountServiceUsageBucketTier",
                      "instance": {
                        "identity": 11,
                        "usageBucketTierId": 201,
                        "accountServiceUsageBucketId": 9,
                        "threshold": 500.0,
                        "flatCharge": 0.0,
                        "usageUnitId": 8,
                        "usageUnitName": "GB"
                      }
                    },
                    {
                      "identity": 385,
                      "action": "created",
                      "dtoTypeKey": "accountServiceTemporal",
                      "instance": {
                        "identity": 385,
                        "accountServiceId": 20125,
                        "accountServiceName": "Share Plan Add On Service (B9852F7C)",
                        "serviceStatusTypeId": 12,
                        "serviceStatusTypeName": "Active"
                      }
                    },
                    {
                      "identity": 103,
                      "action": "created",
                      "dtoTypeKey": "accountPackageRecurringPrice",
                      "instance": {
                        "identity": 103,
                        "accountPackageId": 3177,
                        "accountPackageName": "Share Plan Add On Package (8E0F041F)",
                        "packageServicePricePlanId": 3074,
                        "serviceStatusTypeId": 12,
                        "serviceStatusTypeName": "Active",
                        "amount": 999.0,
                        "pricePlanTierTypeId": 2,
                        "pricePlanTierTypeName": "Not Tiered"
                      }
                    },
                    {
                      "identity": 239,
                      "action": "created",
                      "dtoTypeKey": "accountPackageTemporal",
                      "instance": {
                        "identity": 239,
                        "accountPackageId": 3177,
                        "accountPackageName": "Share Plan Add On Package (8E0F041F)",
                        "accountPackageStatusTypeId": 99,
                        "accountPackageStatusTypeName": "Active"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountSharePlan object."
              }
            ],
            "properties": {
              "packageName": "Share Plan Add On Package",
              "packageFrequencyName": "Share Plan Add On Package Frequency",
              "effective": "2023-01-01",
              "recurringPriceOverride": {
                "instance": {
                  "serviceName": "Share Plan Add On Service",
                  "amount": "999"
                }
              }
            },
            "description": "A user friendly way to create an Account Share Plan Add On. Sample shows adding a recurring Account Share Plan Add On with a price override."
          },
          {
            "name": "updateRank",
            "method": "PUT",
            "path": "Account/SharePlan/ForAccount/{id}/Rank",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RankResult",
              "description": "Returns updateRank information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "usageBucketSharePlanId": 2,
                      "usageBucketSharePlanName": "Sample Text Data",
                      "usageBucketShareLevelId": 13,
                      "usageBucketShareLevelName": "Sample Text Data",
                      "accountId": 25,
                      "accountName": "Sample Text Data",
                      "accountServiceId": "Sample Text Data",
                      "accountServiceName": "Sample Text Data",
                      "isAvailable": true,
                      "sharePlanAccountPackageId": "Sample Text Data",
                      "sharePlanAccountPackageName": "Sample Text Data",
                      "sellingAccountPackageId": "Sample Text Data",
                      "sellingAccountPackageName": "Sample Text Data",
                      "bucketPriorityTieBreaker": 17
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountSharePlan object."
              }
            ],
            "properties": [
              13,
              20,
              12,
              41
            ],
            "description": "Re-arrange the order of Account Share Plan Add On. When a Service / Package is part of multiple AccountSharePlans, the bucketing engine needs to know the priority of the associated buckets. The Rank defined based on the order of the AccountSharePlan will be used to identify the priority. This API is expecting all the AccountSharePlan ids of the account to be passed in order of priority."
          },
          {
            "name": "updateShareplanById",
            "method": "PUT",
            "path": "Account/SharePlan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ShareplanByIdResult",
              "description": "Returns updateShareplanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 25,
                      "ownerName": "Sample Text Data",
                      "usageBucketShareLevelId": 13,
                      "usageBucketShareLevelName": "Sample Text Data",
                      "name": "Gold Plan Bucket",
                      "description": "100MB Inclusion",
                      "usageBucketSharePlanActivationTypeId": 3,
                      "usageBucketSharePlanActivationTypeName": "Sample Text Data",
                      "isActive": true,
                      "isAvailable": true,
                      "defaultServiceStatusTypeId": 0,
                      "defaultServiceStatusTypeName": "Sample Text Data",
                      "isPackageLevelParticipation": true,
                      "sharePlanTypeId": 26,
                      "sharePlanTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "usageBucketSharePlanId": 12,
              "usageBucketShareLevelId": 24,
              "accountId": 20,
              "accountServiceId": "Sample Text Data",
              "sharePlanAccountPackageId": "Sample Text Data",
              "sellingAccountPackageId": "Sample Text Data",
              "bucketPriorityTieBreaker": 8
            },
            "description": "Update an existing instance of the AccountSharePlan object."
          }
        ]
      },
      {
        "name": "Pricechangestatustype",
        "source_file": "PriceChangeStatusType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "PriceChangeStatusType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PriceChangeStatusType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "PriceChangeStatusType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PriceChangeStatusType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getPricechangestatustypeById",
            "method": "GET",
            "path": "PriceChangeStatusType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PricechangestatustypeByIdResult",
              "description": "Returns getPricechangestatustypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PriceChangeStatusType object."
              }
            ],
            "description": "Retrieve an instance of the PriceChangeStatusType object by its ID."
          }
        ]
      },
      {
        "name": "Extension Attribute Lookup",
        "source_file": "Extension-Attribute-Lookup",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Extension/Attribute/Lookup/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ExtensionAttributeLookup objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Extension/Attribute/Lookup/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ExtensionAttributeLookup objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getLookupById",
            "method": "GET",
            "path": "Extension/Attribute/Lookup/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "LookupByIdResult",
              "description": "Returns getLookupById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "extensionAttributeId": 26,
                  "extensionAttributeName": "Sample Text Data",
                  "searchRequest": "Sample Text Data",
                  "columnName": "Sample Text Data",
                  "resourceName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ExtensionAttributeLookup object."
              }
            ],
            "description": "Retrieve an instance of the ExtensionAttributeLookup object by its ID."
          }
        ]
      },
      {
        "name": "Cardtype",
        "source_file": "CardType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "CardType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the CardType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "CardType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the CardType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getCardtypeById",
            "method": "GET",
            "path": "CardType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CardtypeByIdResult",
              "description": "Returns getCardtypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Mastercard",
                  "vendorCardName": "MC",
                  "paymentProviderId": 4,
                  "paymentProviderName": "Sample Text Data",
                  "paymentBaseTypeId": 12,
                  "paymentBaseTypeName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CardType object."
              }
            ],
            "description": "Retrieve an instance of the CardType object by its ID."
          }
        ]
      },
      {
        "name": "Invoice Discounttype",
        "source_file": "Invoice-DiscountType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Invoice/DiscountType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceDiscountType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Invoice/DiscountType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceDiscountType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDiscounttypeById",
            "method": "GET",
            "path": "Invoice/DiscountType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DiscounttypeByIdResult",
              "description": "Returns getDiscounttypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the InvoiceDiscountType object."
              }
            ],
            "description": "Retrieve an instance of the InvoiceDiscountType object by its ID."
          }
        ]
      },
      {
        "name": "Usage Class Dynamic Rule",
        "source_file": "Usage-Class-Dynamic-Rule",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Usage/Class/Dynamic/Rule/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageClassDynamicRule objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Usage/Class/Dynamic/Rule/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageClassDynamicRule objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getRuleById",
            "method": "GET",
            "path": "Usage/Class/Dynamic/Rule/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RuleByIdResult",
              "description": "Returns getRuleById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "usageClassDynamicId": 24,
                  "usageClassDynamicName": "Sample Text Data",
                  "extensionAttributeListItemId": 18,
                  "extensionAttributeListItemName": "Sample Text Data",
                  "geoTreeLocationGroupId": 13,
                  "geoTreeLocationGroupName": "Sample Text Data",
                  "usageClassId": 19,
                  "usageClassName": "Sample Text Data",
                  "sortOrder": 11
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageClassDynamicRule object."
              }
            ],
            "description": "Retrieve an instance of the UsageClassDynamicRule object by its ID."
          }
        ]
      },
      {
        "name": "Extension Attribute Listitem",
        "source_file": "Extension-Attribute-ListItem",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Extension/Attribute/ListItem/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ExtensionAttributeListItem objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Extension/Attribute/ListItem/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ExtensionAttributeListItem objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getListitemById",
            "method": "GET",
            "path": "Extension/Attribute/ListItem/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ListitemByIdResult",
              "description": "Returns getListitemById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "extensionAttributeId": 25,
                  "extensionAttributeName": "Sample Text Data",
                  "sortOrder": 6,
                  "value": "My List Item 1"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ExtensionAttributeListItem object."
              }
            ],
            "description": "Retrieve an instance of the ExtensionAttributeListItem object by its ID."
          }
        ]
      },
      {
        "name": "Usage Bucket Refilltype",
        "source_file": "Usage-Bucket-RefillType",
        "endpoints": [
          {
            "name": "deleteRefilltypeById",
            "method": "DELETE",
            "path": "Usage/Bucket/RefillType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RefilltypeByIdResult",
              "description": "Returns deleteRefilltypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "usageBucketRefillType"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageBucketRefillType object."
              }
            ],
            "description": "Delete an instance of the UsageBucketRefillType object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Usage/Bucket/RefillType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageBucketRefillType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Usage/Bucket/RefillType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageBucketRefillType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getRefilltypeById",
            "method": "GET",
            "path": "Usage/Bucket/RefillType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RefilltypeByIdResult",
              "description": "Returns getRefilltypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Recurring"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageBucketRefillType object."
              }
            ],
            "description": "Retrieve an instance of the UsageBucketRefillType object by its ID."
          }
        ]
      },
      {
        "name": "Service",
        "source_file": "Service",
        "endpoints": [
          {
            "name": "deleteServiceById",
            "method": "DELETE",
            "path": "Service/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ServiceByIdResult",
              "description": "Returns deleteServiceById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "service"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Service object."
              }
            ],
            "description": "Delete an instance of the Service object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Service/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Service objects."
          },
          {
            "name": "getShareplans",
            "method": "GET",
            "path": "Service/AvailableFor/SharePlans",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ShareplansResult",
              "description": "Returns getShareplans information"
            },
            "parameters": [],
            "description": "Returns the list of Service objects available for configuration on a Share Plan."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Service/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Service objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Service/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Service objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getServiceById",
            "method": "GET",
            "path": "Service/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ServiceByIdResult",
              "description": "Returns getServiceById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Activation Fee",
                  "ownerId": 2,
                  "ownerName": "Sample Text Data",
                  "serviceTypeId": 3,
                  "serviceTypeName": "Sample Text Data",
                  "usageFrequency": 13,
                  "usageFrequencyTypeId": 23,
                  "usageFrequencyTypeName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "isActive": true,
                  "isTaxExempt": true,
                  "isTaxInclusive": true,
                  "generalLedgerId": 17,
                  "generalLedgerName": "Sample Text Data",
                  "taxCodeId": 23,
                  "taxCodeName": "Sample Text Data",
                  "serviceTaxCategoryId": 21,
                  "serviceTaxCategoryName": "Sample Text Data",
                  "defaultServiceStatusTypeId": 3,
                  "defaultServiceStatusTypeName": "Sample Text Data",
                  "serviceCategoryId": 20,
                  "serviceCategoryName": "Sample Text Data",
                  "description": "One time charge for activation",
                  "id": 24
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Service object."
              }
            ],
            "description": "Retrieve an instance of the Service object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Service/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Service object."
              }
            ],
            "description": "Retrieve deep detail of the Service object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchServiceById",
            "method": "PATCH",
            "path": "Service/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchServiceByIdResult",
              "description": "Returns patchServiceById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "service",
                      "instance": {
                        "identity": 1,
                        "name": "Activation Fee",
                        "ownerId": 15,
                        "ownerName": "Sample Text Data",
                        "serviceTypeId": 10,
                        "serviceTypeName": "Sample Text Data",
                        "usageFrequency": 21,
                        "usageFrequencyTypeId": 25,
                        "usageFrequencyTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "isActive": true,
                        "isTaxExempt": true,
                        "isTaxInclusive": true,
                        "generalLedgerId": 8,
                        "generalLedgerName": "Sample Text Data",
                        "taxCodeId": 6,
                        "taxCodeName": "Sample Text Data",
                        "serviceTaxCategoryId": 19,
                        "serviceTaxCategoryName": "Sample Text Data",
                        "defaultServiceStatusTypeId": 15,
                        "defaultServiceStatusTypeName": "Sample Text Data",
                        "serviceCategoryId": 9,
                        "serviceCategoryName": "Sample Text Data",
                        "description": "One time charge for activation",
                        "id": 21
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Service object."
              }
            ],
            "properties": {
              "details": {},
              "services": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "Activation Fee",
                    "serviceTypeId": 23,
                    "usageFrequency": 12,
                    "usageFrequencyTypeId": 18,
                    "isActive": true,
                    "isTaxExempt": true,
                    "isTaxInclusive": true,
                    "generalLedgerId": 3,
                    "serviceTaxCategoryId": 19,
                    "defaultServiceStatusTypeId": 0,
                    "serviceCategoryId": 18,
                    "description": "One time charge for activation",
                    "id": 6
                  }
                ]
              }
            },
            "description": "Update or Add the Service object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Service/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Activation Fee",
              "serviceTypeId": 7,
              "usageFrequency": 22,
              "usageFrequencyTypeId": 20,
              "isActive": true,
              "isTaxExempt": true,
              "isTaxInclusive": true,
              "generalLedgerId": 13,
              "serviceTaxCategoryId": 1,
              "defaultServiceStatusTypeId": 5,
              "serviceCategoryId": 23,
              "description": "One time charge for activation",
              "id": 4
            },
            "description": "Create a new instance of the Service object."
          },
          {
            "name": "updateServiceById",
            "method": "PUT",
            "path": "Service/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ServiceByIdResult",
              "description": "Returns updateServiceById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Activation Fee",
                      "ownerId": 2,
                      "ownerName": "Sample Text Data",
                      "serviceTypeId": 9,
                      "serviceTypeName": "Sample Text Data",
                      "usageFrequency": 21,
                      "usageFrequencyTypeId": 8,
                      "usageFrequencyTypeName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "isActive": true,
                      "isTaxExempt": true,
                      "isTaxInclusive": true,
                      "generalLedgerId": 6,
                      "generalLedgerName": "Sample Text Data",
                      "taxCodeId": 10,
                      "taxCodeName": "Sample Text Data",
                      "serviceTaxCategoryId": 22,
                      "serviceTaxCategoryName": "Sample Text Data",
                      "defaultServiceStatusTypeId": 27,
                      "defaultServiceStatusTypeName": "Sample Text Data",
                      "serviceCategoryId": 0,
                      "serviceCategoryName": "Sample Text Data",
                      "description": "One time charge for activation",
                      "id": 27
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Activation Fee",
              "serviceTypeId": 20,
              "usageFrequency": 9,
              "usageFrequencyTypeId": 10,
              "isActive": true,
              "isTaxExempt": true,
              "isTaxInclusive": true,
              "generalLedgerId": 15,
              "serviceTaxCategoryId": 3,
              "defaultServiceStatusTypeId": 0,
              "serviceCategoryId": 16,
              "description": "One time charge for activation",
              "id": 2
            },
            "description": "Update an existing instance of the Service object."
          }
        ]
      },
      {
        "name": "Account Service Current",
        "source_file": "Account-Service-Current",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Account/Service/Current/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountService objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/Service/Current/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountService objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getCurrentById",
            "method": "GET",
            "path": "Account/Service/Current/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CurrentByIdResult",
              "description": "Returns getCurrentById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "serviceId": 5,
                  "serviceName": "Sample Text Data",
                  "accountId": 24,
                  "accountName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "accountPackageId": "Sample Text Data",
                  "accountPackageName": "Sample Text Data",
                  "name": "Sample Text Data",
                  "amount": 15,
                  "updated": "2021-04-26T15:25:27.587Z",
                  "effective": "2021-04-26T15:25:27.587Z",
                  "posted": "2021-04-26T15:25:27.587Z",
                  "createdByUserId": 19,
                  "createdByUserName": "Sample Text Data",
                  "updatedByUserId": 9,
                  "updatedByUserName": "Sample Text Data",
                  "effectiveCancel": "2021-04-26T15:25:27.587Z",
                  "usageNextBill": "2021-04-26T15:25:27.587Z",
                  "usageFinalBill": "2021-04-26T15:25:27.587Z",
                  "finalBill": "2021-04-26T15:25:27.587Z",
                  "lastBilled": "2021-04-26T15:25:27.587Z",
                  "lastUsageBilled": "2021-04-26T15:25:27.587Z",
                  "addOnPackageFrequencyId": 6,
                  "addOnPackageFrequencyName": "Sample Text Data",
                  "billCancelOptionTypeId": 6,
                  "billCancelOptionTypeName": "Sample Text Data",
                  "isTaxInclusive": true,
                  "serviceTaxCategoryId": 11,
                  "serviceTaxCategoryName": "Sample Text Data",
                  "importLastUsageBilled": "2021-04-26T15:25:27.587Z",
                  "id": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountService object."
              }
            ],
            "description": "Retrieve an instance of the AccountService object by its ID."
          }
        ]
      },
      {
        "name": "Pricechangetype",
        "source_file": "PriceChangeType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "PriceChangeType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PriceChangeType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "PriceChangeType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PriceChangeType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getPricechangetypeById",
            "method": "GET",
            "path": "PriceChangeType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PricechanypeByIdResult",
              "description": "Returns getPricechangetypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PriceChangeType object."
              }
            ],
            "description": "Retrieve an instance of the PriceChangeType object by its ID."
          }
        ]
      },
      {
        "name": "Usage Bucket Shareplan Activationtype",
        "source_file": "Usage-Bucket-SharePlan-ActivationType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Usage/Bucket/SharePlan/ActivationType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Return the UsageBucketSharePlan Activationa Types."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Usage/Bucket/SharePlan/ActivationType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Return the UsageBucketSharePlan Activationa Types. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getActivationtypeById",
            "method": "GET",
            "path": "Usage/Bucket/SharePlan/ActivationType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ActivationtypeByIdResult",
              "description": "Returns getActivationtypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Participating Service",
                  "description": "Participating Service"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageBucketSharePlanActivationType object."
              }
            ],
            "description": "Return the UsageBucketSharePlan Activationa Types."
          }
        ]
      },
      {
        "name": "Billrun Schedule",
        "source_file": "BillRun-Schedule",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "BillRun/Schedule/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the BillRunSchedule objects. NOTE: This end point is no longer supported in v4 of the API."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "BillRun/Schedule/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the BillRunSchedule objects in a paged fashion. NOTE: This end point is no longer supported in v4 of the API."
          },
          {
            "name": "getScheduleById",
            "method": "GET",
            "path": "BillRun/Schedule/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ScheduleByIdResult",
              "description": "Returns getScheduleById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "created": "2021-04-26T15:25:27.587Z",
                  "start": "2021-04-26T15:25:27.587Z",
                  "complete": "2021-04-26T15:25:27.587Z",
                  "billRunId": 2,
                  "billRunName": "Sample Text Data",
                  "billRunScheduleStatusTypeId": 10,
                  "billRunScheduleStatusTypeName": "Sample Text Data",
                  "accountId": 16,
                  "accountName": "Sample Text Data",
                  "periodStart": "2021-04-26T15:25:27.587Z",
                  "periodEnd": "2021-04-26T15:25:27.587Z",
                  "createdByUserId": 12,
                  "createdByUserName": "Sample Text Data",
                  "orderId": 11,
                  "orderName": "Sample Text Data",
                  "parentBillRunId": 1,
                  "parentBillRunName": "Sample Text Data",
                  "scheduleId": 15,
                  "billRunSettings": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the BillRunSchedule object."
              }
            ],
            "description": "Retrieve an instance of the BillRunSchedule object by its ID. NOTE: This end point is no longer supported in v4 of the API."
          },
          {
            "name": "createOnetime",
            "method": "POST",
            "path": "BillRun/Schedule/OneTime",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "OnetimeResult",
              "description": "Returns createOnetime information",
              "status_code": 200,
              "body": {
                "trackingId": "1ea52c52-82f9-4566-82d2-20255bacaa9a",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 4,
                      "action": "created",
                      "dtoTypeKey": "billRunSchedule",
                      "instance": {
                        "identity": 4,
                        "created": "2022-04-20T13:45:47.423Z",
                        "billRunScheduleStatusTypeId": 1,
                        "billRunScheduleStatusTypeName": "Scheduled",
                        "accountId": 153,
                        "accountName": "admin",
                        "periodStart": "2022-06-01T00:00:00Z",
                        "periodEnd": "2022-06-30T00:00:00Z",
                        "createdByUserId": 153,
                        "createdByUserName": "admin",
                        "billRunSettings": "{\r\n  \"runBillUsage\": true,\r\n  \"runBilling\": true,\r\n  \"runInvoicing\": true,\r\n  \"runContract\": false,\r\n  \"runPayment\": false,\r\n  \"runRenderInvoice\": true,\r\n  \"runDelivery\": false,\r\n  \"runPaymentTerm\": false,\r\n  \"collectionTypeId\": 2,\r\n  \"currencyExchangeId\": 4,\r\n  \"postingDate\": \"2022-04-20T00:00:00Z\",\r\n  \"ownerId\": 1\r\n}"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "collectionTypeId": 2,
              "currencyExchangeId": null,
              "accountId": 153,
              "periodStart": "2022-06-01T00:00:00",
              "periodEnd": "2022-06-30T00:00:00",
              "postingDate": "2022-04-20T00:00:00",
              "runBilling": true,
              "runBillUsage": true,
              "runDelivery": false,
              "runContract": false,
              "runPayment": false,
              "runPaymentTerm": false,
              "runRenderInvoice": true,
              "runInvoicing": true
            },
            "description": "Create a new One Time BillRunSchedule object."
          },
          {
            "name": "createCancel",
            "method": "POST",
            "path": "BillRun/Schedule/{id}/Cancel",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CancelResult",
              "description": "Returns createCancel information"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the BillRunSchedule object."
              }
            ],
            "description": "Cancel an existing BillRunSchedule based on the {id} provided."
          }
        ]
      },
      {
        "name": "Invoice Item",
        "source_file": "Invoice-Item",
        "endpoints": [
          {
            "name": "deleteItemById",
            "method": "DELETE",
            "path": "Invoice/Item/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ItemByIdResult",
              "description": "Returns deleteItemById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "invoiceItem"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the InvoiceItem object."
              }
            ],
            "description": "Delete an instance of the InvoiceItem object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Invoice/Item/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceItem objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Invoice/Item/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceItem objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Invoice/Item/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceItem objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getTaxsummary",
            "method": "GET",
            "path": "Invoice/Item/TaxSummary",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TaxsummaryResult",
              "description": "Returns getTaxsummary information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "accountId": 14,
                  "accountName": "Sample Text Data",
                  "packageId": 4,
                  "packageName": "Sample Text Data",
                  "serviceId": 17,
                  "serviceName": "Sample Text Data",
                  "amount": 26,
                  "detail": "Sample Text Data",
                  "periodStart": "2021-04-26T15:25:27.587Z",
                  "periodEnd": "2021-04-26T15:25:27.587Z",
                  "prorated": true,
                  "date": "2021-04-26T15:25:27.587Z",
                  "accountPackageId": "Sample Text Data",
                  "accountPackageName": "Sample Text Data",
                  "accountServiceId": "Sample Text Data",
                  "accountServiceName": "Sample Text Data",
                  "posting": "2021-04-26T15:25:27.587Z",
                  "invoiceId": 25,
                  "invoiceName": "Sample Text Data",
                  "invoiceItemTypeId": 7,
                  "invoiceItemTypeName": "Sample Text Data",
                  "baseAmount": 24,
                  "invoiceAmount": 13,
                  "invoiceCurrencyExchangeDetailId": 11,
                  "invoiceCurrencyExchangeDetailName": "Sample Text Data",
                  "originalInvoiceItemId": 16,
                  "originalInvoiceItemName": "Sample Text Data",
                  "isManual": true,
                  "createdByUserId": 5,
                  "createdByUserName": "Sample Text Data",
                  "udrUsageIdentifier": "Sample Text Data",
                  "accountServiceTemporalId": "Sample Text Data",
                  "accountServiceTemporalName": "Sample Text Data",
                  "quantity": 17,
                  "price": 21,
                  "generalLedgerId": 13,
                  "generalLedgerName": "Sample Text Data",
                  "serviceTaxCategoryId": 8,
                  "serviceTaxCategoryName": "Sample Text Data",
                  "preDiscountAmount": 27,
                  "isTaxInclusive": true,
                  "invoicerAccountId": 23,
                  "invoicerAccountName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "isTaxedOnCreate": true,
                  "usageValue": "Sample Text Data",
                  "usageUnitId": 14
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceItem objects."
          },
          {
            "name": "getItemById",
            "method": "GET",
            "path": "Invoice/Item/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ItemByIdResult",
              "description": "Returns getItemById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "accountId": 11,
                  "accountName": "Sample Text Data",
                  "packageId": 16,
                  "packageName": "Sample Text Data",
                  "serviceId": 27,
                  "serviceName": "Sample Text Data",
                  "amount": 26,
                  "detail": "Sample Text Data",
                  "periodStart": "2021-04-26T15:25:27.587Z",
                  "periodEnd": "2021-04-26T15:25:27.587Z",
                  "prorated": true,
                  "date": "2021-04-26T15:25:27.587Z",
                  "accountPackageId": "Sample Text Data",
                  "accountPackageName": "Sample Text Data",
                  "accountServiceId": "Sample Text Data",
                  "accountServiceName": "Sample Text Data",
                  "posting": "2021-04-26T15:25:27.587Z",
                  "invoiceId": 22,
                  "invoiceName": "Sample Text Data",
                  "invoiceItemTypeId": 1,
                  "invoiceItemTypeName": "Sample Text Data",
                  "baseAmount": 16,
                  "invoiceAmount": 5,
                  "invoiceCurrencyExchangeDetailId": 14,
                  "invoiceCurrencyExchangeDetailName": "Sample Text Data",
                  "originalInvoiceItemId": 2,
                  "originalInvoiceItemName": "Sample Text Data",
                  "isManual": true,
                  "createdByUserId": 24,
                  "createdByUserName": "Sample Text Data",
                  "udrUsageIdentifier": "Sample Text Data",
                  "accountServiceTemporalId": "Sample Text Data",
                  "accountServiceTemporalName": "Sample Text Data",
                  "quantity": 9,
                  "price": 17,
                  "generalLedgerId": 15,
                  "generalLedgerName": "Sample Text Data",
                  "serviceTaxCategoryId": 22,
                  "serviceTaxCategoryName": "Sample Text Data",
                  "preDiscountAmount": 17,
                  "isTaxInclusive": true,
                  "invoicerAccountId": 1,
                  "invoicerAccountName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "isTaxedOnCreate": true,
                  "usageValue": "Sample Text Data",
                  "usageUnitId": 19
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the InvoiceItem object."
              }
            ],
            "description": "Retrieve an instance of the InvoiceItem object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Invoice/Item/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the InvoiceItem object."
              }
            ],
            "description": "Retrieve deep detail of the InvoiceItem object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getTaxsummary",
            "method": "GET",
            "path": "Invoice/Item/{id}/TaxSummary",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TaxsummaryResult",
              "description": "Returns getTaxsummary information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "accountId": 14,
                  "accountName": "Sample Text Data",
                  "packageId": 4,
                  "packageName": "Sample Text Data",
                  "serviceId": 17,
                  "serviceName": "Sample Text Data",
                  "amount": 26,
                  "detail": "Sample Text Data",
                  "periodStart": "2021-04-26T15:25:27.587Z",
                  "periodEnd": "2021-04-26T15:25:27.587Z",
                  "prorated": true,
                  "date": "2021-04-26T15:25:27.587Z",
                  "accountPackageId": "Sample Text Data",
                  "accountPackageName": "Sample Text Data",
                  "accountServiceId": "Sample Text Data",
                  "accountServiceName": "Sample Text Data",
                  "posting": "2021-04-26T15:25:27.587Z",
                  "invoiceId": 25,
                  "invoiceName": "Sample Text Data",
                  "invoiceItemTypeId": 7,
                  "invoiceItemTypeName": "Sample Text Data",
                  "baseAmount": 24,
                  "invoiceAmount": 13,
                  "invoiceCurrencyExchangeDetailId": 11,
                  "invoiceCurrencyExchangeDetailName": "Sample Text Data",
                  "originalInvoiceItemId": 16,
                  "originalInvoiceItemName": "Sample Text Data",
                  "isManual": true,
                  "createdByUserId": 5,
                  "createdByUserName": "Sample Text Data",
                  "udrUsageIdentifier": "Sample Text Data",
                  "accountServiceTemporalId": "Sample Text Data",
                  "accountServiceTemporalName": "Sample Text Data",
                  "quantity": 17,
                  "price": 21,
                  "generalLedgerId": 13,
                  "generalLedgerName": "Sample Text Data",
                  "serviceTaxCategoryId": 8,
                  "serviceTaxCategoryName": "Sample Text Data",
                  "preDiscountAmount": 27,
                  "isTaxInclusive": true,
                  "invoicerAccountId": 23,
                  "invoicerAccountName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "isTaxedOnCreate": true,
                  "usageValue": "Sample Text Data",
                  "usageUnitId": 14
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the InvoiceItem object."
              }
            ],
            "description": "Retrieve all of the TaxSummary objects for the specified InvoiceItem."
          },
          {
            "name": "patchTaxadjustmentById",
            "method": "PATCH",
            "path": "Invoice/Item/TaxAdjustment/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchTaxadjustmentByIdResult",
              "description": "Returns patchTaxadjustmentById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "invoiceItem",
                      "instance": {
                        "identity": 1,
                        "accountId": 16,
                        "accountName": "Sample Text Data",
                        "packageId": 25,
                        "packageName": "Sample Text Data",
                        "serviceId": 23,
                        "serviceName": "Sample Text Data",
                        "amount": 20,
                        "detail": "Sample Text Data",
                        "periodStart": "2021-04-26T15:25:27.587Z",
                        "periodEnd": "2021-04-26T15:25:27.587Z",
                        "prorated": true,
                        "date": "2021-04-26T15:25:27.587Z",
                        "accountPackageId": "Sample Text Data",
                        "accountPackageName": "Sample Text Data",
                        "accountServiceId": "Sample Text Data",
                        "accountServiceName": "Sample Text Data",
                        "posting": "2021-04-26T15:25:27.587Z",
                        "invoiceId": 26,
                        "invoiceName": "Sample Text Data",
                        "invoiceItemTypeId": 19,
                        "invoiceItemTypeName": "Sample Text Data",
                        "baseAmount": 1,
                        "invoiceAmount": 23,
                        "invoiceCurrencyExchangeDetailId": 3,
                        "invoiceCurrencyExchangeDetailName": "Sample Text Data",
                        "originalInvoiceItemId": 4,
                        "originalInvoiceItemName": "Sample Text Data",
                        "isManual": true,
                        "createdByUserId": 9,
                        "createdByUserName": "Sample Text Data",
                        "udrUsageIdentifier": "Sample Text Data",
                        "accountServiceTemporalId": "Sample Text Data",
                        "accountServiceTemporalName": "Sample Text Data",
                        "quantity": 23,
                        "price": 21,
                        "generalLedgerId": 27,
                        "generalLedgerName": "Sample Text Data",
                        "serviceTaxCategoryId": 8,
                        "serviceTaxCategoryName": "Sample Text Data",
                        "preDiscountAmount": 21,
                        "isTaxInclusive": true,
                        "invoicerAccountId": 10,
                        "invoicerAccountName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "isTaxedOnCreate": true,
                        "usageValue": "Sample Text Data",
                        "usageUnitId": 26
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the InvoiceItem object."
              }
            ],
            "properties": {
              "details": {},
              "invoiceItems": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "accountId": 2,
                    "packageId": 15,
                    "serviceId": 20,
                    "amount": 6,
                    "detail": "Sample Text Data",
                    "periodStart": "2021-04-26T15:25:27.587Z",
                    "periodEnd": "2021-04-26T15:25:27.587Z",
                    "prorated": true,
                    "date": "2021-04-26T15:25:27.587Z",
                    "accountPackageId": "Sample Text Data",
                    "accountServiceId": "Sample Text Data",
                    "posting": "2021-04-26T15:25:27.587Z",
                    "invoiceId": 11,
                    "invoiceItemTypeId": 25,
                    "baseAmount": 4,
                    "invoiceAmount": 11,
                    "invoiceCurrencyExchangeDetailId": 17,
                    "originalInvoiceItemId": 27,
                    "isManual": true,
                    "createdByUserId": 2,
                    "udrUsageIdentifier": "Sample Text Data",
                    "accountServiceTemporalId": "Sample Text Data",
                    "quantity": 16,
                    "price": 5,
                    "generalLedgerId": 0,
                    "serviceTaxCategoryId": 2,
                    "preDiscountAmount": 18,
                    "isTaxInclusive": true,
                    "invoicerAccountId": 21,
                    "updated": "2021-04-26T15:25:27.587Z",
                    "isTaxedOnCreate": true,
                    "usageValue": "Sample Text Data",
                    "usageUnitId": 26
                  }
                ]
              }
            },
            "description": "Update or Add the InvoiceItem object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "patchItemById",
            "method": "PATCH",
            "path": "Invoice/Item/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchItemByIdResult",
              "description": "Returns patchItemById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "invoiceItem",
                      "instance": {
                        "identity": 1,
                        "accountId": 26,
                        "accountName": "Sample Text Data",
                        "packageId": 26,
                        "packageName": "Sample Text Data",
                        "serviceId": 8,
                        "serviceName": "Sample Text Data",
                        "amount": 12,
                        "detail": "Sample Text Data",
                        "periodStart": "2021-04-26T15:25:27.587Z",
                        "periodEnd": "2021-04-26T15:25:27.587Z",
                        "prorated": true,
                        "date": "2021-04-26T15:25:27.587Z",
                        "accountPackageId": "Sample Text Data",
                        "accountPackageName": "Sample Text Data",
                        "accountServiceId": "Sample Text Data",
                        "accountServiceName": "Sample Text Data",
                        "posting": "2021-04-26T15:25:27.587Z",
                        "invoiceId": 27,
                        "invoiceName": "Sample Text Data",
                        "invoiceItemTypeId": 16,
                        "invoiceItemTypeName": "Sample Text Data",
                        "baseAmount": 19,
                        "invoiceAmount": 8,
                        "invoiceCurrencyExchangeDetailId": 27,
                        "invoiceCurrencyExchangeDetailName": "Sample Text Data",
                        "originalInvoiceItemId": 22,
                        "originalInvoiceItemName": "Sample Text Data",
                        "isManual": true,
                        "createdByUserId": 11,
                        "createdByUserName": "Sample Text Data",
                        "udrUsageIdentifier": "Sample Text Data",
                        "accountServiceTemporalId": "Sample Text Data",
                        "accountServiceTemporalName": "Sample Text Data",
                        "quantity": 20,
                        "price": 15,
                        "generalLedgerId": 10,
                        "generalLedgerName": "Sample Text Data",
                        "serviceTaxCategoryId": 11,
                        "serviceTaxCategoryName": "Sample Text Data",
                        "preDiscountAmount": 9,
                        "isTaxInclusive": true,
                        "invoicerAccountId": 6,
                        "invoicerAccountName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "isTaxedOnCreate": true,
                        "usageValue": "Sample Text Data",
                        "usageUnitId": 2
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the InvoiceItem object."
              }
            ],
            "properties": {
              "details": {},
              "invoiceItems": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "accountId": 15,
                    "packageId": 12,
                    "serviceId": 22,
                    "amount": 13,
                    "detail": "Sample Text Data",
                    "periodStart": "2021-04-26T15:25:27.587Z",
                    "periodEnd": "2021-04-26T15:25:27.587Z",
                    "prorated": true,
                    "date": "2021-04-26T15:25:27.587Z",
                    "accountPackageId": "Sample Text Data",
                    "accountServiceId": "Sample Text Data",
                    "posting": "2021-04-26T15:25:27.587Z",
                    "invoiceId": 5,
                    "invoiceItemTypeId": 9,
                    "baseAmount": 14,
                    "invoiceAmount": 4,
                    "invoiceCurrencyExchangeDetailId": 4,
                    "originalInvoiceItemId": 2,
                    "isManual": true,
                    "createdByUserId": 9,
                    "udrUsageIdentifier": "Sample Text Data",
                    "accountServiceTemporalId": "Sample Text Data",
                    "quantity": 18,
                    "price": 14,
                    "generalLedgerId": 13,
                    "serviceTaxCategoryId": 9,
                    "preDiscountAmount": 12,
                    "isTaxInclusive": true,
                    "invoicerAccountId": 20,
                    "updated": "2021-04-26T15:25:27.587Z",
                    "isTaxedOnCreate": true,
                    "usageValue": "Sample Text Data",
                    "usageUnitId": 20
                  }
                ]
              }
            },
            "description": "Update or Add the InvoiceItem object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "createCharge",
            "method": "POST",
            "path": "Invoice/Item/Charge",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ChargeResult",
              "description": "Returns createCharge information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "accountId": 21,
                      "accountName": "Sample Text Data",
                      "packageId": 20,
                      "packageName": "Sample Text Data",
                      "serviceId": 5,
                      "serviceName": "Sample Text Data",
                      "amount": 0,
                      "detail": "Sample Text Data",
                      "periodStart": "2021-04-26T15:25:27.587Z",
                      "periodEnd": "2021-04-26T15:25:27.587Z",
                      "prorated": true,
                      "date": "2021-04-26T15:25:27.587Z",
                      "accountPackageId": "Sample Text Data",
                      "accountPackageName": "Sample Text Data",
                      "accountServiceId": "Sample Text Data",
                      "accountServiceName": "Sample Text Data",
                      "posting": "2021-04-26T15:25:27.587Z",
                      "invoiceId": 7,
                      "invoiceName": "Sample Text Data",
                      "invoiceItemTypeId": 1,
                      "invoiceItemTypeName": "Sample Text Data",
                      "baseAmount": 23,
                      "invoiceAmount": 19,
                      "invoiceCurrencyExchangeDetailId": 20,
                      "invoiceCurrencyExchangeDetailName": "Sample Text Data",
                      "originalInvoiceItemId": 5,
                      "originalInvoiceItemName": "Sample Text Data",
                      "isManual": true,
                      "createdByUserId": 9,
                      "createdByUserName": "Sample Text Data",
                      "udrUsageIdentifier": "Sample Text Data",
                      "accountServiceTemporalId": "Sample Text Data",
                      "accountServiceTemporalName": "Sample Text Data",
                      "quantity": 12,
                      "price": 9,
                      "generalLedgerId": 14,
                      "generalLedgerName": "Sample Text Data",
                      "serviceTaxCategoryId": 6,
                      "serviceTaxCategoryName": "Sample Text Data",
                      "preDiscountAmount": 14,
                      "isTaxInclusive": true,
                      "invoicerAccountId": 18,
                      "invoicerAccountName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "isTaxedOnCreate": true,
                      "usageValue": "Sample Text Data",
                      "usageUnitId": 24
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "accountId": 21,
              "packageId": 7,
              "serviceId": 11,
              "amount": 16,
              "detail": "Sample Text Data",
              "periodStart": "2021-04-26T15:25:27.587Z",
              "periodEnd": "2021-04-26T15:25:27.587Z",
              "prorated": true,
              "date": "2021-04-26T15:25:27.587Z",
              "accountPackageId": "Sample Text Data",
              "accountServiceId": "Sample Text Data",
              "posting": "2021-04-26T15:25:27.587Z",
              "invoiceId": 10,
              "invoiceItemTypeId": 18,
              "baseAmount": 6,
              "invoiceAmount": 9,
              "invoiceCurrencyExchangeDetailId": 4,
              "originalInvoiceItemId": 0,
              "isManual": true,
              "createdByUserId": 8,
              "udrUsageIdentifier": "Sample Text Data",
              "accountServiceTemporalId": "Sample Text Data",
              "quantity": 23,
              "price": 21,
              "generalLedgerId": 13,
              "serviceTaxCategoryId": 17,
              "preDiscountAmount": 23,
              "isTaxInclusive": true,
              "invoicerAccountId": 2,
              "updated": "2021-04-26T15:25:27.587Z",
              "isTaxedOnCreate": true,
              "usageValue": "Sample Text Data",
              "usageUnitId": 21
            },
            "description": "Create a new instance of the InvoiceItem object."
          },
          {
            "name": "createCredit",
            "method": "POST",
            "path": "Invoice/Item/Credit",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CreditResult",
              "description": "Returns createCredit information",
              "status_code": 200,
              "body": {
                "trackingId": "53064b3f-a018-4dd2-96a1-793e07e4e3a6",
                "type": "create",
                "results": {
                  "totalCount": 6,
                  "items": [
                    {
                      "identity": 11,
                      "action": "created",
                      "dtoTypeKey": "invoiceItem",
                      "instance": {
                        "identity": 11,
                        "accountId": 153,
                        "accountName": "admin",
                        "serviceId": 1,
                        "serviceName": "Extreme DSL Service",
                        "amount": -10,
                        "detail": "Hotel Gelf",
                        "periodStart": "2019-08-13T00:00:00",
                        "periodEnd": "2019-08-13T00:00:00",
                        "credit": true,
                        "date": "2019-08-13T00:00:00",
                        "posting": "2019-08-13T00:00:00",
                        "bulkQuantity": 0,
                        "nonRefundable": false,
                        "invoiceItemTypeId": 2,
                        "invoiceItemTypeName": "Credit",
                        "automaticDisbursement": false,
                        "isTaxExempt": false,
                        "isManual": true,
                        "createdByUserId": 153,
                        "createdByUserName": "admin"
                      }
                    },
                    {
                      "identity": 15,
                      "action": "created",
                      "dtoTypeKey": "invoiceItemTax",
                      "instance": {
                        "identity": 15,
                        "invoiceItemId": 11,
                        "amount": -0.8,
                        "taxRateId": 187,
                        "taxRateName": "GST",
                        "taxCodeId": 1,
                        "taxCodeName": "Canada",
                        "amountReportable": 0
                      }
                    },
                    {
                      "identity": 16,
                      "action": "created",
                      "dtoTypeKey": "invoiceItemTax",
                      "instance": {
                        "identity": 16,
                        "invoiceItemId": 11,
                        "amount": -0.7,
                        "taxRateId": 188,
                        "taxRateName": "PST",
                        "taxCodeId": 1,
                        "taxCodeName": "Canada",
                        "amountReportable": 0
                      }
                    },
                    {
                      "identity": 4,
                      "action": "created",
                      "dtoTypeKey": "creditInvoiceDisbursement",
                      "instance": {
                        "identity": 4,
                        "invoiceId": 18332,
                        "invoiceName": "18332",
                        "amount": 10,
                        "invoiceItemId": 11,
                        "baseAmount": 10,
                        "invoiceAmount": 10
                      }
                    },
                    {
                      "identity": 18332,
                      "action": "updated",
                      "dtoTypeKey": "invoice"
                    },
                    {
                      "identity": 4,
                      "action": "created",
                      "dtoTypeKey": "creditItem",
                      "instance": {
                        "identity": 4,
                        "invoiceItemId": 11,
                        "showOnInvoice": true,
                        "showOnCreditNote": true
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "accountId": 153,
              "accountName": "admin",
              "amount": -10,
              "date": null,
              "posting": null,
              "serviceId": 1,
              "serviceName": "",
              "detail": "Hotel Gelf",
              "periodStart": null,
              "periodEnd": null,
              "showOnInvoice": true,
              "showOnCreditNote": true,
              "details": {
                "creditDisbursements": {
                  "items": [
                    {
                      "invoiceId": 18332,
                      "amount": 10
                    }
                  ]
                }
              }
            },
            "description": "Create an InvoiceItem that is a Credit. The Credit Resource has only the necessary properties to create a credit. This is typically easier to use than an InvoiceItem."
          },
          {
            "name": "createReversecharge",
            "method": "POST",
            "path": "Invoice/Item/ReverseCharge",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ReversechargeResult",
              "description": "Returns createReversecharge information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "accountId": 23,
                      "accountName": "Sample Text Data",
                      "packageId": 18,
                      "packageName": "Sample Text Data",
                      "serviceId": 19,
                      "serviceName": "Sample Text Data",
                      "amount": 25,
                      "detail": "Sample Text Data",
                      "periodStart": "2021-04-26T15:25:27.587Z",
                      "periodEnd": "2021-04-26T15:25:27.587Z",
                      "prorated": true,
                      "date": "2021-04-26T15:25:27.587Z",
                      "accountPackageId": "Sample Text Data",
                      "accountPackageName": "Sample Text Data",
                      "accountServiceId": "Sample Text Data",
                      "accountServiceName": "Sample Text Data",
                      "posting": "2021-04-26T15:25:27.587Z",
                      "invoiceId": 0,
                      "invoiceName": "Sample Text Data",
                      "invoiceItemTypeId": 20,
                      "invoiceItemTypeName": "Sample Text Data",
                      "baseAmount": 23,
                      "invoiceAmount": 22,
                      "invoiceCurrencyExchangeDetailId": 22,
                      "invoiceCurrencyExchangeDetailName": "Sample Text Data",
                      "originalInvoiceItemId": 21,
                      "originalInvoiceItemName": "Sample Text Data",
                      "isManual": true,
                      "createdByUserId": 15,
                      "createdByUserName": "Sample Text Data",
                      "udrUsageIdentifier": "Sample Text Data",
                      "accountServiceTemporalId": "Sample Text Data",
                      "accountServiceTemporalName": "Sample Text Data",
                      "quantity": 10,
                      "price": 6,
                      "generalLedgerId": 13,
                      "generalLedgerName": "Sample Text Data",
                      "serviceTaxCategoryId": 14,
                      "serviceTaxCategoryName": "Sample Text Data",
                      "preDiscountAmount": 3,
                      "isTaxInclusive": true,
                      "invoicerAccountId": 17,
                      "invoicerAccountName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "isTaxedOnCreate": true,
                      "usageValue": "Sample Text Data",
                      "usageUnitId": 22
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "accountId": 16,
              "packageId": 22,
              "serviceId": 7,
              "amount": 6,
              "detail": "Sample Text Data",
              "periodStart": "2021-04-26T15:25:27.587Z",
              "periodEnd": "2021-04-26T15:25:27.587Z",
              "prorated": true,
              "date": "2021-04-26T15:25:27.587Z",
              "accountPackageId": "Sample Text Data",
              "accountServiceId": "Sample Text Data",
              "posting": "2021-04-26T15:25:27.587Z",
              "invoiceId": 23,
              "invoiceItemTypeId": 10,
              "baseAmount": 21,
              "invoiceAmount": 5,
              "invoiceCurrencyExchangeDetailId": 23,
              "originalInvoiceItemId": 11,
              "isManual": true,
              "createdByUserId": 5,
              "udrUsageIdentifier": "Sample Text Data",
              "accountServiceTemporalId": "Sample Text Data",
              "quantity": 1,
              "price": 26,
              "generalLedgerId": 11,
              "serviceTaxCategoryId": 15,
              "preDiscountAmount": 15,
              "isTaxInclusive": true,
              "invoicerAccountId": 27,
              "updated": "2021-04-26T15:25:27.587Z",
              "isTaxedOnCreate": true,
              "usageValue": "Sample Text Data",
              "usageUnitId": 12
            },
            "description": "Create a new instance of the InvoiceItem object."
          },
          {
            "name": "createReversecredit",
            "method": "POST",
            "path": "Invoice/Item/ReverseCredit",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ReversecreditResult",
              "description": "Returns createReversecredit information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "accountId": 10,
                      "accountName": "Sample Text Data",
                      "packageId": 24,
                      "packageName": "Sample Text Data",
                      "serviceId": 5,
                      "serviceName": "Sample Text Data",
                      "amount": 17,
                      "detail": "Sample Text Data",
                      "periodStart": "2021-04-26T15:25:27.587Z",
                      "periodEnd": "2021-04-26T15:25:27.587Z",
                      "prorated": true,
                      "date": "2021-04-26T15:25:27.587Z",
                      "accountPackageId": "Sample Text Data",
                      "accountPackageName": "Sample Text Data",
                      "accountServiceId": "Sample Text Data",
                      "accountServiceName": "Sample Text Data",
                      "posting": "2021-04-26T15:25:27.587Z",
                      "invoiceId": 3,
                      "invoiceName": "Sample Text Data",
                      "invoiceItemTypeId": 15,
                      "invoiceItemTypeName": "Sample Text Data",
                      "baseAmount": 0,
                      "invoiceAmount": 17,
                      "invoiceCurrencyExchangeDetailId": 13,
                      "invoiceCurrencyExchangeDetailName": "Sample Text Data",
                      "originalInvoiceItemId": 21,
                      "originalInvoiceItemName": "Sample Text Data",
                      "isManual": true,
                      "createdByUserId": 0,
                      "createdByUserName": "Sample Text Data",
                      "udrUsageIdentifier": "Sample Text Data",
                      "accountServiceTemporalId": "Sample Text Data",
                      "accountServiceTemporalName": "Sample Text Data",
                      "quantity": 24,
                      "price": 11,
                      "generalLedgerId": 18,
                      "generalLedgerName": "Sample Text Data",
                      "serviceTaxCategoryId": 5,
                      "serviceTaxCategoryName": "Sample Text Data",
                      "preDiscountAmount": 11,
                      "isTaxInclusive": true,
                      "invoicerAccountId": 1,
                      "invoicerAccountName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "isTaxedOnCreate": true,
                      "usageValue": "Sample Text Data",
                      "usageUnitId": 25
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "accountId": 14,
              "packageId": 25,
              "serviceId": 20,
              "amount": 4,
              "detail": "Sample Text Data",
              "periodStart": "2021-04-26T15:25:27.587Z",
              "periodEnd": "2021-04-26T15:25:27.587Z",
              "prorated": true,
              "date": "2021-04-26T15:25:27.587Z",
              "accountPackageId": "Sample Text Data",
              "accountServiceId": "Sample Text Data",
              "posting": "2021-04-26T15:25:27.587Z",
              "invoiceId": 18,
              "invoiceItemTypeId": 12,
              "baseAmount": 23,
              "invoiceAmount": 7,
              "invoiceCurrencyExchangeDetailId": 24,
              "originalInvoiceItemId": 22,
              "isManual": true,
              "createdByUserId": 16,
              "udrUsageIdentifier": "Sample Text Data",
              "accountServiceTemporalId": "Sample Text Data",
              "quantity": 2,
              "price": 9,
              "generalLedgerId": 8,
              "serviceTaxCategoryId": 9,
              "preDiscountAmount": 13,
              "isTaxInclusive": true,
              "invoicerAccountId": 8,
              "updated": "2021-04-26T15:25:27.587Z",
              "isTaxedOnCreate": true,
              "usageValue": "Sample Text Data",
              "usageUnitId": 5
            },
            "description": "Create a new instance of the InvoiceItem object."
          },
          {
            "name": "createTaxadjustment",
            "method": "POST",
            "path": "Invoice/Item/TaxAdjustment",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TaxadjustmentResult",
              "description": "Returns createTaxadjustment information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "accountId": 23,
                      "accountName": "Sample Text Data",
                      "packageId": 0,
                      "packageName": "Sample Text Data",
                      "serviceId": 23,
                      "serviceName": "Sample Text Data",
                      "amount": 2,
                      "detail": "Sample Text Data",
                      "periodStart": "2021-04-26T15:25:27.587Z",
                      "periodEnd": "2021-04-26T15:25:27.587Z",
                      "prorated": true,
                      "date": "2021-04-26T15:25:27.587Z",
                      "accountPackageId": "Sample Text Data",
                      "accountPackageName": "Sample Text Data",
                      "accountServiceId": "Sample Text Data",
                      "accountServiceName": "Sample Text Data",
                      "posting": "2021-04-26T15:25:27.587Z",
                      "invoiceId": 8,
                      "invoiceName": "Sample Text Data",
                      "invoiceItemTypeId": 3,
                      "invoiceItemTypeName": "Sample Text Data",
                      "baseAmount": 23,
                      "invoiceAmount": 20,
                      "invoiceCurrencyExchangeDetailId": 6,
                      "invoiceCurrencyExchangeDetailName": "Sample Text Data",
                      "originalInvoiceItemId": 4,
                      "originalInvoiceItemName": "Sample Text Data",
                      "isManual": true,
                      "createdByUserId": 14,
                      "createdByUserName": "Sample Text Data",
                      "udrUsageIdentifier": "Sample Text Data",
                      "accountServiceTemporalId": "Sample Text Data",
                      "accountServiceTemporalName": "Sample Text Data",
                      "quantity": 7,
                      "price": 26,
                      "generalLedgerId": 17,
                      "generalLedgerName": "Sample Text Data",
                      "serviceTaxCategoryId": 12,
                      "serviceTaxCategoryName": "Sample Text Data",
                      "preDiscountAmount": 5,
                      "isTaxInclusive": true,
                      "invoicerAccountId": 12,
                      "invoicerAccountName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "isTaxedOnCreate": true,
                      "usageValue": "Sample Text Data",
                      "usageUnitId": 6
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "accountId": 13,
              "packageId": 8,
              "serviceId": 17,
              "amount": 23,
              "detail": "Sample Text Data",
              "periodStart": "2021-04-26T15:25:27.587Z",
              "periodEnd": "2021-04-26T15:25:27.587Z",
              "prorated": true,
              "date": "2021-04-26T15:25:27.587Z",
              "accountPackageId": "Sample Text Data",
              "accountServiceId": "Sample Text Data",
              "posting": "2021-04-26T15:25:27.587Z",
              "invoiceId": 12,
              "invoiceItemTypeId": 24,
              "baseAmount": 22,
              "invoiceAmount": 17,
              "invoiceCurrencyExchangeDetailId": 24,
              "originalInvoiceItemId": 22,
              "isManual": true,
              "createdByUserId": 17,
              "udrUsageIdentifier": "Sample Text Data",
              "accountServiceTemporalId": "Sample Text Data",
              "quantity": 26,
              "price": 9,
              "generalLedgerId": 21,
              "serviceTaxCategoryId": 18,
              "preDiscountAmount": 15,
              "isTaxInclusive": true,
              "invoicerAccountId": 2,
              "updated": "2021-04-26T15:25:27.587Z",
              "isTaxedOnCreate": true,
              "usageValue": "Sample Text Data",
              "usageUnitId": 15
            },
            "description": "Create a new instance of the InvoiceItem object."
          },
          {
            "name": "updateItemById",
            "method": "PUT",
            "path": "Invoice/Item/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ItemByIdResult",
              "description": "Returns updateItemById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "accountId": 9,
                      "accountName": "Sample Text Data",
                      "packageId": 15,
                      "packageName": "Sample Text Data",
                      "serviceId": 20,
                      "serviceName": "Sample Text Data",
                      "amount": 24,
                      "detail": "Sample Text Data",
                      "periodStart": "2021-04-26T15:25:27.587Z",
                      "periodEnd": "2021-04-26T15:25:27.587Z",
                      "prorated": true,
                      "date": "2021-04-26T15:25:27.587Z",
                      "accountPackageId": "Sample Text Data",
                      "accountPackageName": "Sample Text Data",
                      "accountServiceId": "Sample Text Data",
                      "accountServiceName": "Sample Text Data",
                      "posting": "2021-04-26T15:25:27.587Z",
                      "invoiceId": 19,
                      "invoiceName": "Sample Text Data",
                      "invoiceItemTypeId": 8,
                      "invoiceItemTypeName": "Sample Text Data",
                      "baseAmount": 15,
                      "invoiceAmount": 4,
                      "invoiceCurrencyExchangeDetailId": 23,
                      "invoiceCurrencyExchangeDetailName": "Sample Text Data",
                      "originalInvoiceItemId": 18,
                      "originalInvoiceItemName": "Sample Text Data",
                      "isManual": true,
                      "createdByUserId": 24,
                      "createdByUserName": "Sample Text Data",
                      "udrUsageIdentifier": "Sample Text Data",
                      "accountServiceTemporalId": "Sample Text Data",
                      "accountServiceTemporalName": "Sample Text Data",
                      "quantity": 24,
                      "price": 1,
                      "generalLedgerId": 23,
                      "generalLedgerName": "Sample Text Data",
                      "serviceTaxCategoryId": 17,
                      "serviceTaxCategoryName": "Sample Text Data",
                      "preDiscountAmount": 1,
                      "isTaxInclusive": true,
                      "invoicerAccountId": 17,
                      "invoicerAccountName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "isTaxedOnCreate": true,
                      "usageValue": "Sample Text Data",
                      "usageUnitId": 0
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "accountId": 0,
              "packageId": 20,
              "serviceId": 23,
              "amount": 18,
              "detail": "Sample Text Data",
              "periodStart": "2021-04-26T15:25:27.587Z",
              "periodEnd": "2021-04-26T15:25:27.587Z",
              "prorated": true,
              "date": "2021-04-26T15:25:27.587Z",
              "accountPackageId": "Sample Text Data",
              "accountServiceId": "Sample Text Data",
              "posting": "2021-04-26T15:25:27.587Z",
              "invoiceId": 19,
              "invoiceItemTypeId": 5,
              "baseAmount": 1,
              "invoiceAmount": 13,
              "invoiceCurrencyExchangeDetailId": 17,
              "originalInvoiceItemId": 8,
              "isManual": true,
              "createdByUserId": 8,
              "udrUsageIdentifier": "Sample Text Data",
              "accountServiceTemporalId": "Sample Text Data",
              "quantity": 10,
              "price": 26,
              "generalLedgerId": 22,
              "serviceTaxCategoryId": 4,
              "preDiscountAmount": 15,
              "isTaxInclusive": true,
              "invoicerAccountId": 6,
              "updated": "2021-04-26T15:25:27.587Z",
              "isTaxedOnCreate": true,
              "usageValue": "Sample Text Data",
              "usageUnitId": 4
            },
            "description": "Update an existing instance of the InvoiceItem object."
          }
        ]
      },
      {
        "name": "Jsonapi Log",
        "source_file": "JsonApi-Log",
        "endpoints": [
          {
            "name": "getByrequesttrackingById",
            "method": "GET",
            "path": "JsonApi/Log/ByRequestTracking/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ByrequesttrackingByIdResult",
              "description": "Returns getByrequesttrackingById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "userIdentity": 25,
                  "ownerTenantIdentity": 0,
                  "user": "Sample Text Data",
                  "requestTrackingIdentity": "Sample Text Data",
                  "utc": "2021-04-26T15:25:27.587Z",
                  "requestUri": "Sample Text Data",
                  "requestVerb": "Sample Text Data",
                  "requestHeaders": "Sample Text Data",
                  "requestLength": "Sample Text Data",
                  "request": "Sample Text Data",
                  "responseStatusCode": "Sample Text Data",
                  "responseReasonCode": "Sample Text Data",
                  "responseHeaders": "Sample Text Data",
                  "responseLength": "Sample Text Data",
                  "response": "Sample Text Data",
                  "ipAddressFrom": "Sample Text Data",
                  "ipAddressTo": "Sample Text Data",
                  "duration": "Sample Text Data",
                  "idempotencyKey": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the JsonApiLog object."
              }
            ],
            "description": "Retrieve an instance of the JsonApiLog object by its ID."
          }
        ]
      },
      {
        "name": "Roundingmethodtype",
        "source_file": "RoundingMethodType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "RoundingMethodType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the RoundingMethodType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "RoundingMethodType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the RoundingMethodType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getRoundingmethodtypeById",
            "method": "GET",
            "path": "RoundingMethodType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RoundingmethodtypeByIdResult",
              "description": "Returns getRoundingmethodtypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Round up"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the RoundingMethodType object."
              }
            ],
            "description": "Retrieve an instance of the RoundingMethodType object by its ID."
          }
        ]
      },
      {
        "name": "Tax Type",
        "source_file": "Tax-Type",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Tax/Type/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TaxType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Tax/Type/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the TaxType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getTypeById",
            "method": "GET",
            "path": "Tax/Type/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "TypeByIdResult",
              "description": "Returns getTypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Avalara",
                  "sortOrder": 17
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the TaxType object."
              }
            ],
            "description": "Retrieve an instance of the TaxType object by its ID."
          }
        ]
      },
      {
        "name": "Package Frequency Currency",
        "source_file": "Package-Frequency-Currency",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Package/Frequency/Currency/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PackageFrequencyPackageCurrency objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Package/Frequency/Currency/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the PackageFrequencyPackageCurrency objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getCurrencyById",
            "method": "GET",
            "path": "Package/Frequency/Currency/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CurrencyByIdResult",
              "description": "Returns getCurrencyById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "isActive": true,
                  "packageFrequencyId": 24,
                  "packageFrequencyName": "Sample Text Data",
                  "packageCurrencyId": 25,
                  "packageCurrencyName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "priceBookId": 0,
                  "priceBookName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the PackageFrequencyPackageCurrency object."
              }
            ],
            "description": "Retrieve an instance of the PackageFrequencyPackageCurrency object by its ID."
          }
        ]
      },
      {
        "name": "Extension Attribute Entity",
        "source_file": "Extension-Attribute-Entity",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Extension/Attribute/Entity/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ExtensionAttributeEntity objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Extension/Attribute/Entity/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ExtensionAttributeEntity objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getEntityById",
            "method": "GET",
            "path": "Extension/Attribute/Entity/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "EntityByIdResult",
              "description": "Returns getEntityById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Sample Text Data",
                  "tableName": "Sample Text Data",
                  "sortOrder": 24
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ExtensionAttributeEntity object."
              }
            ],
            "description": "Retrieve an instance of the ExtensionAttributeEntity object by its ID."
          }
        ]
      },
      {
        "name": "Service Statustype",
        "source_file": "Service-StatusType",
        "endpoints": [
          {
            "name": "deleteStatustypeById",
            "method": "DELETE",
            "path": "Service/StatusType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "StatustypeByIdResult",
              "description": "Returns deleteStatustypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "userStatusType"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ServiceStatusType object."
              }
            ],
            "description": "Delete an instance of the ServiceStatusType object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Service/StatusType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ServiceStatusType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Service/StatusType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ServiceStatusType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getStatustypeById",
            "method": "GET",
            "path": "Service/StatusType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "StatustypeByIdResult",
              "description": "Returns getStatustypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Active",
                  "ownerId": 16,
                  "ownerName": "Sample Text Data",
                  "statusTypeId": 14,
                  "statusTypeName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ServiceStatusType object."
              }
            ],
            "description": "Retrieve an instance of the ServiceStatusType object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Service/StatusType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Currently Active",
              "preventChanges": true,
              "baseBillingStatusTypeId": 3
            },
            "description": "Create a new instance of the ServiceStatusType object."
          },
          {
            "name": "updateStatustypeById",
            "method": "PUT",
            "path": "Service/StatusType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "StatustypeByIdResult",
              "description": "Returns updateStatustypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 14,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 20,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Currently Active",
              "preventChanges": true,
              "baseBillingStatusTypeId": 3
            },
            "description": "Update an existing instance of the ServiceStatusType object."
          }
        ]
      },
      {
        "name": "Invoice History",
        "source_file": "Invoice-History",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Invoice/History/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceHistory objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Invoice/History/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceHistory objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getHistoryById",
            "method": "GET",
            "path": "Invoice/History/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "HistoryByIdResult",
              "description": "Returns getHistoryById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "invoiceId": 8,
                  "invoiceName": "Sample Text Data",
                  "date": "2021-04-26T15:25:27.587Z",
                  "action": "rendered",
                  "userId": 17,
                  "userName": "Sample Text Data",
                  "billRunHistoryId": 13,
                  "billRunHistoryName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the InvoiceHistory object."
              }
            ],
            "description": "Retrieve an instance of the InvoiceHistory object by its ID."
          }
        ]
      },
      {
        "name": "Invoice Statustype",
        "source_file": "Invoice-StatusType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Invoice/StatusType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceStatusType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Invoice/StatusType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the InvoiceStatusType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getStatustypeById",
            "method": "GET",
            "path": "Invoice/StatusType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "StatustypeByIdResult",
              "description": "Returns getStatustypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Active",
                  "ownerId": 16,
                  "ownerName": "Sample Text Data",
                  "statusTypeId": 14,
                  "statusTypeName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the InvoiceStatusType object."
              }
            ],
            "description": "Retrieve an instance of the InvoiceStatusType object by its ID."
          }
        ]
      },
      {
        "name": "Authenticationtype",
        "source_file": "AuthenticationType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "AuthenticationType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AuthenticationType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "AuthenticationType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AuthenticationType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getAuthenticationtypeById",
            "method": "GET",
            "path": "AuthenticationType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AuthenticationtypeByIdResult",
              "description": "Returns getAuthenticationtypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AuthenticationType object."
              }
            ],
            "description": "Retrieve an instance of the AuthenticationType object by its ID."
          }
        ]
      },
      {
        "name": "Eventsubscription",
        "source_file": "EventSubscription",
        "endpoints": [
          {
            "name": "deleteEmailById",
            "method": "DELETE",
            "path": "EventSubscription/Email/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "EmailByIdResult",
              "description": "Returns deleteEmailById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "eventSubscription"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the EventSubscription object."
              }
            ],
            "description": "Delete an instance of the EventSubscription object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "deleteWebhookById",
            "method": "DELETE",
            "path": "EventSubscription/Webhook/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "WebhookByIdResult",
              "description": "Returns deleteWebhookById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "eventSubscription"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the EventSubscription object."
              }
            ],
            "description": "Delete an instance of the EventSubscription object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "EventSubscription/Email/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the EventSubscription objects."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "EventSubscription/Webhook/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the EventSubscription objects."
          },
          {
            "name": "patchEmailById",
            "method": "PATCH",
            "path": "EventSubscription/Email/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchEmailByIdResult",
              "description": "Returns patchEmailById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "eventSubscription",
                      "instance": {
                        "identity": 1,
                        "name": "Sample Text Data",
                        "description": "Sample Text Data",
                        "isActive": true,
                        "eventRegistrationId": 10,
                        "eventRegistrationName": "Sample Text Data",
                        "eventBindingActionId": 20,
                        "eventBindingActionName": "Sample Text Data",
                        "accessTypeId": 14,
                        "accessTypeName": "Sample Text Data",
                        "createdByUserId": 8,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 18,
                        "updatedByUserName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the EventSubscription object."
              }
            ],
            "properties": {
              "details": {},
              "eventSubscriptions": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "Sample Text Data",
                    "description": "Sample Text Data",
                    "isActive": true,
                    "eventRegistrationId": 14,
                    "eventBindingActionId": 0,
                    "accessTypeId": 2,
                    "createdByUserId": 2,
                    "updatedByUserId": 18
                  }
                ]
              }
            },
            "description": "Update or Add the EventSubscription object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "patchWebhookById",
            "method": "PATCH",
            "path": "EventSubscription/Webhook/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchWebhookByIdResult",
              "description": "Returns patchWebhookById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "eventSubscription",
                      "instance": {
                        "identity": 1,
                        "name": "Sample Text Data",
                        "description": "Sample Text Data",
                        "isActive": true,
                        "eventRegistrationId": 1,
                        "eventRegistrationName": "Sample Text Data",
                        "eventBindingActionId": 3,
                        "eventBindingActionName": "Sample Text Data",
                        "accessTypeId": 3,
                        "accessTypeName": "Sample Text Data",
                        "createdByUserId": 6,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 18,
                        "updatedByUserName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the EventSubscription object."
              }
            ],
            "properties": {
              "details": {},
              "eventSubscriptions": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "Sample Text Data",
                    "description": "Sample Text Data",
                    "isActive": true,
                    "eventRegistrationId": 23,
                    "eventBindingActionId": 2,
                    "accessTypeId": 25,
                    "createdByUserId": 25,
                    "updatedByUserId": 25
                  }
                ]
              }
            },
            "description": "Update or Add the EventSubscription object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "EventSubscription/Email/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Sample Text Data",
              "description": "Sample Text Data",
              "isActive": true,
              "eventRegistrationId": 4,
              "eventBindingActionId": 23,
              "accessTypeId": 15,
              "createdByUserId": 6,
              "updatedByUserId": 14
            },
            "description": "Create a new instance of the EventSubscription object."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "EventSubscription/Webhook/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Sample Text Data",
              "description": "Sample Text Data",
              "isActive": true,
              "eventRegistrationId": 11,
              "eventBindingActionId": 9,
              "accessTypeId": 24,
              "createdByUserId": 14,
              "updatedByUserId": 7
            },
            "description": "Create a new instance of the EventSubscription object."
          },
          {
            "name": "updateEmailById",
            "method": "PUT",
            "path": "EventSubscription/Email/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "EmailByIdResult",
              "description": "Returns updateEmailById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data",
                      "description": "Sample Text Data",
                      "isActive": true,
                      "eventRegistrationId": 10,
                      "eventRegistrationName": "Sample Text Data",
                      "eventBindingActionId": 27,
                      "eventBindingActionName": "Sample Text Data",
                      "accessTypeId": 22,
                      "accessTypeName": "Sample Text Data",
                      "createdByUserId": 14,
                      "createdByUserName": "Sample Text Data",
                      "updatedByUserId": 11,
                      "updatedByUserName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Sample Text Data",
              "description": "Sample Text Data",
              "isActive": true,
              "eventRegistrationId": 3,
              "eventBindingActionId": 7,
              "accessTypeId": 27,
              "createdByUserId": 25,
              "updatedByUserId": 2
            },
            "description": "Update an existing instance of the EventSubscription object."
          },
          {
            "name": "updateWebhookById",
            "method": "PUT",
            "path": "EventSubscription/Webhook/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "WebhookByIdResult",
              "description": "Returns updateWebhookById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data",
                      "description": "Sample Text Data",
                      "isActive": true,
                      "eventRegistrationId": 14,
                      "eventRegistrationName": "Sample Text Data",
                      "eventBindingActionId": 5,
                      "eventBindingActionName": "Sample Text Data",
                      "accessTypeId": 0,
                      "accessTypeName": "Sample Text Data",
                      "createdByUserId": 13,
                      "createdByUserName": "Sample Text Data",
                      "updatedByUserId": 12,
                      "updatedByUserName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Sample Text Data",
              "description": "Sample Text Data",
              "isActive": true,
              "eventRegistrationId": 12,
              "eventBindingActionId": 10,
              "accessTypeId": 2,
              "createdByUserId": 15,
              "updatedByUserId": 24
            },
            "description": "Update an existing instance of the EventSubscription object."
          }
        ]
      },
      {
        "name": "Currency",
        "source_file": "Currency",
        "endpoints": [
          {
            "name": "deleteCurrencyById",
            "method": "DELETE",
            "path": "Currency/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CurrencyByIdResult",
              "description": "Returns deleteCurrencyById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "currency"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Currency object."
              }
            ],
            "description": "Delete an instance of the Currency object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Currency/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Currency objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Currency/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Currency objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getCurrencyById",
            "method": "GET",
            "path": "Currency/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CurrencyByIdResult",
              "description": "Returns getCurrencyById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "isActive": true,
                  "packageFrequencyId": 24,
                  "packageFrequencyName": "Sample Text Data",
                  "packageCurrencyId": 25,
                  "packageCurrencyName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "priceBookId": 0,
                  "priceBookName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Currency object."
              }
            ],
            "description": "Retrieve an instance of the Currency object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Currency/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "US Dollars",
              "code": "USD",
              "symbol": "$",
              "isDefault": true
            },
            "description": "Create a new instance of the Currency object."
          },
          {
            "name": "updateCurrencyById",
            "method": "PUT",
            "path": "Currency/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CurrencyByIdResult",
              "description": "Returns updateCurrencyById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "US Dollars",
                      "code": "USD",
                      "ownerId": 19,
                      "ownerName": "Sample Text Data",
                      "symbol": "$",
                      "isDefault": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "US Dollars",
              "code": "USD",
              "symbol": "$",
              "isDefault": true
            },
            "description": "Update an existing instance of the Currency object."
          }
        ]
      },
      {
        "name": "Account Package Statustype",
        "source_file": "Account-Package-StatusType",
        "endpoints": [
          {
            "name": "deleteStatustypeById",
            "method": "DELETE",
            "path": "Account/Package/StatusType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "StatustypeByIdResult",
              "description": "Returns deleteStatustypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "userStatusType"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountPackageStatusType object."
              }
            ],
            "description": "Delete an instance of the AccountPackageStatusType object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Account/Package/StatusType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountPackageStatusType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/Package/StatusType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountPackageStatusType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getStatustypeById",
            "method": "GET",
            "path": "Account/Package/StatusType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "StatustypeByIdResult",
              "description": "Returns getStatustypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Active",
                  "ownerId": 16,
                  "ownerName": "Sample Text Data",
                  "statusTypeId": 14,
                  "statusTypeName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountPackageStatusType object."
              }
            ],
            "description": "Retrieve an instance of the AccountPackageStatusType object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Account/Package/StatusType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Sample Text Data",
              "preventChanges": true,
              "baseBillingStatusTypeId": 27
            },
            "description": "Create a new instance of the AccountPackageStatusType object."
          },
          {
            "name": "updateStatustypeById",
            "method": "PUT",
            "path": "Account/Package/StatusType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "StatustypeByIdResult",
              "description": "Returns updateStatustypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 14,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 20,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Sample Text Data",
              "preventChanges": true,
              "baseBillingStatusTypeId": 24
            },
            "description": "Update an existing instance of the AccountPackageStatusType object."
          }
        ]
      },
      {
        "name": "Contract Commitment Penaltychargetype",
        "source_file": "Contract-Commitment-PenaltyChargeType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Contract/Commitment/PenaltyChargeType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ContractCommitmentPenaltyChargeType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Contract/Commitment/PenaltyChargeType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ContractCommitmentPenaltyChargeType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getPenaltychargetypeById",
            "method": "GET",
            "path": "Contract/Commitment/PenaltyChargeType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PenaltycharypeByIdResult",
              "description": "Returns getPenaltychargetypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Fixed Penalty Charge"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ContractCommitmentPenaltyChargeType object."
              }
            ],
            "description": "Retrieve an instance of the ContractCommitmentPenaltyChargeType object by its ID."
          }
        ]
      },
      {
        "name": "Notetype",
        "source_file": "NoteType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "NoteType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the NoteType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "NoteType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the NoteType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getNotetypeById",
            "method": "GET",
            "path": "NoteType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "NotetypeByIdResult",
              "description": "Returns getNotetypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 16,
                  "ownerName": "Sample Text Data",
                  "name": "Default"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the NoteType object."
              }
            ],
            "description": "Retrieve an instance of the NoteType object by its ID."
          }
        ]
      },
      {
        "name": "Country",
        "source_file": "Country",
        "endpoints": [
          {
            "name": "deleteCountryById",
            "method": "DELETE",
            "path": "Country/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CountryByIdResult",
              "description": "Returns deleteCountryById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "country"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Country object."
              }
            ],
            "description": "Delete an instance of the Country object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Country/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Country objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Country/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Country objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Country/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Country objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getCountryById",
            "method": "GET",
            "path": "Country/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CountryByIdResult",
              "description": "Returns getCountryById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "United States of America",
                  "sortOrder": 15,
                  "ownerId": 11,
                  "ownerName": "Sample Text Data",
                  "countryAddressFormatId": 15,
                  "countryAddressFormatName": "Sample Text Data",
                  "countryCode": "US",
                  "isVisible": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Country object."
              }
            ],
            "description": "Retrieve an instance of the Country object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Country/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Country object."
              }
            ],
            "description": "Retrieve deep detail of the Country object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchCountryById",
            "method": "PATCH",
            "path": "Country/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchCountryByIdResult",
              "description": "Returns patchCountryById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "country",
                      "instance": {
                        "identity": 1,
                        "name": "United States of America",
                        "sortOrder": 5,
                        "ownerId": 26,
                        "ownerName": "Sample Text Data",
                        "countryAddressFormatId": 16,
                        "countryAddressFormatName": "Sample Text Data",
                        "countryCode": "US",
                        "isVisible": true
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "details": {},
                "countrys": {
                  "items": [
                    {
                      "patchType": "create",
                      "patchClientId": 1,
                      "name": "United States of America",
                      "sortOrder": 0,
                      "countryAddressFormatId": 24,
                      "countryCode": "US",
                      "isVisible": true
                    }
                  ]
                }
              }
            ],
            "properties": {
              "name": "United States of America",
              "sortOrder": 12,
              "countryAddressFormatId": 23,
              "countryCode": "US",
              "isVisible": true
            },
            "description": "Update or Add the Country object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Country/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "United States of America",
              "sortOrder": 20,
              "countryAddressFormatId": 15,
              "countryCode": "US",
              "isVisible": true
            },
            "description": "Create a new instance of the Country object."
          },
          {
            "name": "updateCountryById",
            "method": "PUT",
            "path": "Country/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CountryByIdResult",
              "description": "Returns updateCountryById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "United States of America",
                      "sortOrder": 13,
                      "ownerId": 13,
                      "ownerName": "Sample Text Data",
                      "countryAddressFormatId": 26,
                      "countryAddressFormatName": "Sample Text Data",
                      "countryCode": "US",
                      "isVisible": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Sample Text Data"
            },
            "description": "Update an existing instance of the Country object."
          }
        ]
      },
      {
        "name": "Countingrule",
        "source_file": "CountingRule",
        "endpoints": [
          {
            "name": "deleteCountingruleById",
            "method": "DELETE",
            "path": "CountingRule/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CountingruleByIdResult",
              "description": "Returns deleteCountingruleById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "countingRule"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CountingRule object."
              }
            ],
            "description": "Delete an instance of the CountingRule object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "CountingRule/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the CountingRule objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "CountingRule/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the CountingRule objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getCountingruleById",
            "method": "GET",
            "path": "CountingRule/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CountingruleByIdResult",
              "description": "Returns getCountingruleById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 16,
                  "ownerName": "Sample Text Data",
                  "name": "Sample Text Data",
                  "statusTierTypeId": 21,
                  "statusTierTypeName": "Sample Text Data",
                  "countingRuleTypeId": 19,
                  "countingRuleTypeName": "Sample Text Data",
                  "isActive": true,
                  "countIfUsage": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CountingRule object."
              }
            ],
            "description": "Retrieve an instance of the CountingRule object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "CountingRule/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CountingRule object."
              }
            ],
            "description": "Retrieve deep detail of the CountingRule object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchCountingruleById",
            "method": "PATCH",
            "path": "CountingRule/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchCountingruleByIdResult",
              "description": "Returns patchCountingruleById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "countingRule",
                      "instance": {
                        "identity": 1,
                        "ownerId": 24,
                        "ownerName": "Sample Text Data",
                        "name": "Sample Text Data",
                        "statusTierTypeId": 14,
                        "statusTierTypeName": "Sample Text Data",
                        "countingRuleTypeId": 12,
                        "countingRuleTypeName": "Sample Text Data",
                        "isActive": true,
                        "countIfUsage": true
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CountingRule object."
              }
            ],
            "properties": {
              "details": {},
              "countingRules": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "Sample Text Data",
                    "statusTierTypeId": 24,
                    "countingRuleTypeId": 15,
                    "isActive": true,
                    "countIfUsage": true
                  }
                ]
              }
            },
            "description": "Update or Add the CountingRule object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "CountingRule/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Sample Text Data",
              "statusTierTypeId": 6,
              "countingRuleTypeId": 10,
              "isActive": true,
              "countIfUsage": true
            },
            "description": "Create a new instance of the CountingRule object."
          },
          {
            "name": "updateCountingruleById",
            "method": "PUT",
            "path": "CountingRule/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CountingruleByIdResult",
              "description": "Returns updateCountingruleById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 18,
                      "ownerName": "Sample Text Data",
                      "name": "Sample Text Data",
                      "statusTierTypeId": 20,
                      "statusTierTypeName": "Sample Text Data",
                      "countingRuleTypeId": 10,
                      "countingRuleTypeName": "Sample Text Data",
                      "isActive": true,
                      "countIfUsage": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Sample Text Data",
              "statusTierTypeId": 23,
              "countingRuleTypeId": 22,
              "isActive": true,
              "countIfUsage": true
            },
            "description": "Update an existing instance of the CountingRule object."
          }
        ]
      },
      {
        "name": "Usage Bucket Shareplan",
        "source_file": "Usage-Bucket-SharePlan",
        "endpoints": [
          {
            "name": "deleteShareplanById",
            "method": "DELETE",
            "path": "Usage/Bucket/SharePlan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ShareplanByIdResult",
              "description": "Returns deleteShareplanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "usageBucketSharePlan"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageBucketSharePlan object."
              }
            ],
            "description": "Delete an instance of the UsageBucketSharePlan object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Usage/Bucket/SharePlan/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageBucketSharePlan objects."
          },
          {
            "name": "getForserviceById",
            "method": "GET",
            "path": "Usage/Bucket/SharePlan/ForService/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ForserviceByIdResult",
              "description": "Returns getForserviceById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 15,
                  "ownerName": "Sample Text Data",
                  "usageBucketShareLevelId": 8,
                  "usageBucketShareLevelName": "Sample Text Data",
                  "name": "Gold Plan Bucket",
                  "description": "100MB Inclusion",
                  "usageBucketSharePlanActivationTypeId": 11,
                  "usageBucketSharePlanActivationTypeName": "Sample Text Data",
                  "isActive": true,
                  "isAvailable": true,
                  "defaultServiceStatusTypeId": 1,
                  "defaultServiceStatusTypeName": "Sample Text Data",
                  "isPackageLevelParticipation": true,
                  "sharePlanTypeId": 0,
                  "sharePlanTypeName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Service object."
              }
            ],
            "description": "Return the UsageBucketSharePlan objects that are related to the specified Service."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Usage/Bucket/SharePlan/ForService/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Service object."
              }
            ],
            "description": "Return the UsageBucketSharePlan object details that are related to the specified Service. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Usage/Bucket/SharePlan/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageBucketSharePlan objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Usage/Bucket/SharePlan/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageBucketSharePlan objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getShareplanById",
            "method": "GET",
            "path": "Usage/Bucket/SharePlan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ShareplanByIdResult",
              "description": "Returns getShareplanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 26,
                  "ownerName": "Sample Text Data",
                  "usageBucketShareLevelId": 2,
                  "usageBucketShareLevelName": "Sample Text Data",
                  "name": "Gold Plan Bucket",
                  "description": "100MB Inclusion",
                  "usageBucketSharePlanActivationTypeId": 7,
                  "usageBucketSharePlanActivationTypeName": "Sample Text Data",
                  "isActive": true,
                  "isAvailable": true,
                  "defaultServiceStatusTypeId": 6,
                  "defaultServiceStatusTypeName": "Sample Text Data",
                  "isPackageLevelParticipation": true,
                  "sharePlanTypeId": 0,
                  "sharePlanTypeName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageBucketSharePlan object."
              }
            ],
            "description": "Retrieve an instance of the UsageBucketSharePlan object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Usage/Bucket/SharePlan/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageBucketSharePlan object."
              }
            ],
            "description": "Retrieve deep detail of the UsageBucketSharePlan object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchShareplanById",
            "method": "PATCH",
            "path": "Usage/Bucket/SharePlan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchShareplanByIdResult",
              "description": "Returns patchShareplanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "usageBucketSharePlan",
                      "instance": {
                        "identity": 1,
                        "ownerId": 4,
                        "ownerName": "Sample Text Data",
                        "usageBucketShareLevelId": 7,
                        "usageBucketShareLevelName": "Sample Text Data",
                        "name": "Gold Plan Bucket",
                        "description": "100MB Inclusion",
                        "usageBucketSharePlanActivationTypeId": 21,
                        "usageBucketSharePlanActivationTypeName": "Sample Text Data",
                        "isActive": true,
                        "isAvailable": true,
                        "defaultServiceStatusTypeId": 9,
                        "defaultServiceStatusTypeName": "Sample Text Data",
                        "isPackageLevelParticipation": true,
                        "sharePlanTypeId": 0,
                        "sharePlanTypeName": "Sample Text Data"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageBucketSharePlan object."
              }
            ],
            "properties": {
              "details": {},
              "usageBucketSharePlans": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "usageBucketShareLevelId": 26,
                    "name": "Gold Plan Bucket",
                    "description": "100MB Inclusion",
                    "usageBucketSharePlanActivationTypeId": 9,
                    "isActive": true,
                    "isAvailable": true,
                    "defaultServiceStatusTypeId": 23,
                    "isPackageLevelParticipation": true,
                    "sharePlanTypeId": 19
                  }
                ]
              }
            },
            "description": "Update or Add the UsageBucketSharePlan object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Usage/Bucket/SharePlan/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "usageBucketShareLevelId": 11,
              "name": "Gold Plan Bucket",
              "description": "100MB Inclusion",
              "usageBucketSharePlanActivationTypeId": 8,
              "isActive": true,
              "isAvailable": true,
              "defaultServiceStatusTypeId": 14,
              "isPackageLevelParticipation": true,
              "sharePlanTypeId": 20
            },
            "description": "Create a new instance of the UsageBucketSharePlan object."
          },
          {
            "name": "updateShareplanById",
            "method": "PUT",
            "path": "Usage/Bucket/SharePlan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ShareplanByIdResult",
              "description": "Returns updateShareplanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 25,
                      "ownerName": "Sample Text Data",
                      "usageBucketShareLevelId": 13,
                      "usageBucketShareLevelName": "Sample Text Data",
                      "name": "Gold Plan Bucket",
                      "description": "100MB Inclusion",
                      "usageBucketSharePlanActivationTypeId": 3,
                      "usageBucketSharePlanActivationTypeName": "Sample Text Data",
                      "isActive": true,
                      "isAvailable": true,
                      "defaultServiceStatusTypeId": 0,
                      "defaultServiceStatusTypeName": "Sample Text Data",
                      "isPackageLevelParticipation": true,
                      "sharePlanTypeId": 26,
                      "sharePlanTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "usageBucketShareLevelId": 10,
              "name": "Gold Plan Bucket",
              "description": "100MB Inclusion",
              "usageBucketSharePlanActivationTypeId": 11,
              "isActive": true,
              "isAvailable": true,
              "defaultServiceStatusTypeId": 18,
              "isPackageLevelParticipation": true,
              "sharePlanTypeId": 19
            },
            "description": "Update an existing instance of the UsageBucketSharePlan object."
          }
        ]
      },
      {
        "name": "Currency Exchange Detail",
        "source_file": "Currency-Exchange-Detail",
        "endpoints": [
          {
            "name": "deleteDetailById",
            "method": "DELETE",
            "path": "Currency/Exchange/Detail/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailByIdResult",
              "description": "Returns deleteDetailById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "currencyExchangeDetail"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CurrencyExchangeDetail object."
              }
            ],
            "description": "Delete an instance of the CurrencyExchangeDetail object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Currency/Exchange/Detail/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the CurrencyExchangeDetail objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Currency/Exchange/Detail/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the CurrencyExchangeDetail objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetailById",
            "method": "GET",
            "path": "Currency/Exchange/Detail/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailByIdResult",
              "description": "Returns getDetailById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "currencyId": 20,
                  "currencyName": "Sample Text Data",
                  "currencyExchangeId": 2,
                  "currencyExchangeName": "Sample Text Data",
                  "rate": 19,
                  "created": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "sampleSingleObject": {
                      "identity": 2,
                      "property1": "Sample Text",
                      "property2": "2021-04-26T15:25:29.117Z",
                      "property3": 2
                    },
                    "sampleMultipleObjects": {
                      "totalCount": 1,
                      "items": [
                        {
                          "identity": 2,
                          "property1": "Sample Text",
                          "property2": "2021-04-26T15:25:29.117Z",
                          "property3": 2
                        }
                      ]
                    }
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CurrencyExchangeDetail object."
              }
            ],
            "description": "Retrieve deep detail of the CurrencyExchangeDetail object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Currency/Exchange/Detail/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "currencyId": 20,
              "currencyExchangeId": 15,
              "rate": 9
            },
            "description": "Create a new instance of the CurrencyExchangeDetail object."
          },
          {
            "name": "updateDetailById",
            "method": "PUT",
            "path": "Currency/Exchange/Detail/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailByIdResult",
              "description": "Returns updateDetailById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "currencyId": 1,
                      "currencyName": "Sample Text Data",
                      "currencyExchangeId": 22,
                      "currencyExchangeName": "Sample Text Data",
                      "rate": 7,
                      "created": "2021-04-26T15:25:27.587Z"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "currencyId": 21,
              "currencyExchangeId": 0,
              "rate": 5
            },
            "description": "Update an existing instance of the CurrencyExchangeDetail object."
          }
        ]
      },
      {
        "name": "Account Shareplan Contribution",
        "source_file": "Account-SharePlan-Contribution",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Account/SharePlan/Contribution/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountSharePlanContribution objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/SharePlan/Contribution/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountSharePlanContribution objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getContributionById",
            "method": "GET",
            "path": "Account/SharePlan/Contribution/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ContributionByIdResult",
              "description": "Returns getContributionById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "accountSharePlanParticipationId": 0,
                  "accountSharePlanParticipationName": "Sample Text Data",
                  "accountServiceUsageBucketId": 26,
                  "accountServiceUsageBucketName": "Sample Text Data",
                  "isContributing": true,
                  "contributingAmount": 18,
                  "contributingUsageUnitId": 14,
                  "contributingUsageUnitName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountSharePlanContribution object."
              }
            ],
            "description": "Retrieve an instance of the AccountSharePlanContribution object by its ID."
          }
        ]
      },
      {
        "name": "Package",
        "source_file": "Package",
        "endpoints": [
          {
            "name": "deletePackageById",
            "method": "DELETE",
            "path": "Package/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PackageByIdResult",
              "description": "Returns deletePackageById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "package"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Package object."
              }
            ],
            "description": "Delete an instance of the Package object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Package/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Package objects."
          },
          {
            "name": "getCurrencyById",
            "method": "GET",
            "path": "Package/AvailableFor/Currency/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "CurrencyByIdResult",
              "description": "Returns getCurrencyById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "isActive": true,
                  "packageFrequencyId": 24,
                  "packageFrequencyName": "Sample Text Data",
                  "packageCurrencyId": 25,
                  "packageCurrencyName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "priceBookId": 0,
                  "priceBookName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Currency object."
              }
            ],
            "description": "Retrieve Package objects that are avaialable for the specified Currency."
          },
          {
            "name": "getParticipation",
            "method": "GET",
            "path": "Package/AvailableFor/SharePlan/Participation",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ParticipationResult",
              "description": "Returns getParticipation information"
            },
            "parameters": [],
            "description": "Internal endpoint that is not currently used."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Package/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Package objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Package/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Package objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getPackageById",
            "method": "GET",
            "path": "Package/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PackageByIdResult",
              "description": "Returns getPackageById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Gold Service Plan",
                  "ownerId": 0,
                  "ownerName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "start": "2021-04-26T15:25:27.587Z",
                  "expiry": "2021-04-26T15:25:27.587Z",
                  "fullPeriod": true,
                  "invoiceDetail": "Sample Text Data",
                  "postPaid": true,
                  "billOnAccountBillDay": true,
                  "defaultAccountPackageStatusTypeId": 8,
                  "defaultAccountPackageStatusTypeName": "Sample Text Data",
                  "packageCategoryId": 27,
                  "packageCategoryName": "Sample Text Data",
                  "chargeRecurringIfUsage": true,
                  "isGlobalAddOnEligible": true,
                  "description": "The best service plan available",
                  "isQuantityAllowed": false,
                  "id": 15
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Package object."
              }
            ],
            "description": "Retrieve an instance of the Package object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Package/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Package object."
              }
            ],
            "description": "Retrieve deep detail of the Package object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchPackageById",
            "method": "PATCH",
            "path": "Package/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchPackageByIdResult",
              "description": "Returns patchPackageById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "package",
                      "instance": {
                        "identity": 1,
                        "name": "Gold Service Plan",
                        "ownerId": 7,
                        "ownerName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "start": "2021-04-26T15:25:27.587Z",
                        "expiry": "2021-04-26T15:25:27.587Z",
                        "fullPeriod": true,
                        "invoiceDetail": "Sample Text Data",
                        "postPaid": true,
                        "billOnAccountBillDay": true,
                        "defaultAccountPackageStatusTypeId": 8,
                        "defaultAccountPackageStatusTypeName": "Sample Text Data",
                        "packageCategoryId": 7,
                        "packageCategoryName": "Sample Text Data",
                        "chargeRecurringIfUsage": true,
                        "isGlobalAddOnEligible": true,
                        "description": "The best service plan available",
                        "isQuantityAllowed": false,
                        "id": 7
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Package object."
              }
            ],
            "properties": {
              "details": {},
              "packages": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "Gold Service Plan",
                    "start": "2021-04-26T15:25:27.587Z",
                    "expiry": "2021-04-26T15:25:27.587Z",
                    "fullPeriod": true,
                    "invoiceDetail": "Sample Text Data",
                    "postPaid": true,
                    "billOnAccountBillDay": true,
                    "defaultAccountPackageStatusTypeId": 15,
                    "packageCategoryId": 2,
                    "chargeRecurringIfUsage": true,
                    "isGlobalAddOnEligible": true,
                    "description": "The best service plan available",
                    "isQuantityAllowed": false,
                    "id": 7
                  }
                ]
              }
            },
            "description": "Update or Add the Package object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Package/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Gold Service Plan",
              "start": "2021-04-26T15:25:27.587Z",
              "expiry": "2021-04-26T15:25:27.587Z",
              "fullPeriod": true,
              "invoiceDetail": "Sample Text Data",
              "postPaid": true,
              "billOnAccountBillDay": true,
              "defaultAccountPackageStatusTypeId": 3,
              "packageCategoryId": 3,
              "chargeRecurringIfUsage": true,
              "isGlobalAddOnEligible": true,
              "description": "The best service plan available",
              "isQuantityAllowed": false,
              "id": 13
            },
            "description": "Create a new instance of the Package object."
          },
          {
            "name": "updatePackageById",
            "method": "PUT",
            "path": "Package/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PackageByIdResult",
              "description": "Returns updatePackageById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Gold Service Plan",
                      "ownerId": 18,
                      "ownerName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "start": "2021-04-26T15:25:27.587Z",
                      "expiry": "2021-04-26T15:25:27.587Z",
                      "fullPeriod": true,
                      "invoiceDetail": "Sample Text Data",
                      "postPaid": true,
                      "billOnAccountBillDay": true,
                      "defaultAccountPackageStatusTypeId": 11,
                      "defaultAccountPackageStatusTypeName": "Sample Text Data",
                      "packageCategoryId": 16,
                      "packageCategoryName": "Sample Text Data",
                      "chargeRecurringIfUsage": true,
                      "isGlobalAddOnEligible": true,
                      "description": "The best service plan available",
                      "isQuantityAllowed": false,
                      "id": 5
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Gold Service Plan",
              "start": "2021-04-26T15:25:27.587Z",
              "expiry": "2021-04-26T15:25:27.587Z",
              "fullPeriod": true,
              "invoiceDetail": "Sample Text Data",
              "postPaid": true,
              "billOnAccountBillDay": true,
              "defaultAccountPackageStatusTypeId": 25,
              "packageCategoryId": 16,
              "chargeRecurringIfUsage": true,
              "isGlobalAddOnEligible": true,
              "description": "The best service plan available",
              "isQuantityAllowed": false,
              "id": 9
            },
            "description": "Update an existing instance of the Package object."
          }
        ]
      },
      {
        "name": "User Statustype",
        "source_file": "User-StatusType",
        "endpoints": [
          {
            "name": "deleteStatustypeById",
            "method": "DELETE",
            "path": "User/StatusType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "StatustypeByIdResult",
              "description": "Returns deleteStatustypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "userStatusType"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UserStatusType object."
              }
            ],
            "description": "Delete an instance of the UserStatusType object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "User/StatusType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UserStatusType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "User/StatusType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UserStatusType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getStatustypeById",
            "method": "GET",
            "path": "User/StatusType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "StatustypeByIdResult",
              "description": "Returns getStatustypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Active",
                  "ownerId": 16,
                  "ownerName": "Sample Text Data",
                  "statusTypeId": 14,
                  "statusTypeName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UserStatusType object."
              }
            ],
            "description": "Retrieve an instance of the UserStatusType object by its ID."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "User/StatusType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Active",
              "statusTypeId": 12
            },
            "description": "Create a new instance of the UserStatusType object."
          },
          {
            "name": "updateStatustypeById",
            "method": "PUT",
            "path": "User/StatusType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "StatustypeByIdResult",
              "description": "Returns updateStatustypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 14,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 20,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Active",
              "statusTypeId": 8
            },
            "description": "Update an existing instance of the UserStatusType object."
          }
        ]
      },
      {
        "name": "Usage Rate Plan",
        "source_file": "Usage-Rate-Plan",
        "endpoints": [
          {
            "name": "deletePlanById",
            "method": "DELETE",
            "path": "Usage/Rate/Plan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PlanByIdResult",
              "description": "Returns deletePlanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "usageRatePlan"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageRatePlan object."
              }
            ],
            "description": "Delete an instance of the UsageRatePlan object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Usage/Rate/Plan/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageRatePlan objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Usage/Rate/Plan/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageRatePlan objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Usage/Rate/Plan/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the UsageRatePlan objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getPlanById",
            "method": "GET",
            "path": "Usage/Rate/Plan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PlanByIdResult",
              "description": "Returns getPlanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 9,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageRatePlan object."
              }
            ],
            "description": "Retrieve an instance of the UsageRatePlan object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Usage/Rate/Plan/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageRatePlan object."
              }
            ],
            "description": "Retrieve deep detail of the UsageRatePlan object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchPlanById",
            "method": "PATCH",
            "path": "Usage/Rate/Plan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchPlanByIdResult",
              "description": "Returns patchPlanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "usageRatePlan",
                      "instance": {
                        "identity": 1,
                        "ownerId": 17,
                        "ownerName": "Sample Text Data",
                        "name": "All Data Rates",
                        "displayName": "Gold Rates",
                        "updated": "2021-04-26T15:25:27.587Z"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the UsageRatePlan object."
              }
            ],
            "properties": {
              "details": {},
              "usageRatePlans": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "All Data Rates",
                    "displayName": "Gold Rates",
                    "updated": "2021-04-26T15:25:27.587Z"
                  }
                ]
              }
            },
            "description": "Update or Add the UsageRatePlan object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Usage/Rate/Plan/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "All Data Rates",
              "displayName": "Gold Rates",
              "updated": "2021-04-26T15:25:27.587Z"
            },
            "description": "Create a new instance of the UsageRatePlan object."
          },
          {
            "name": "updatePlanById",
            "method": "PUT",
            "path": "Usage/Rate/Plan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PlanByIdResult",
              "description": "Returns updatePlanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 0,
                      "ownerName": "Sample Text Data",
                      "name": "All Data Rates",
                      "displayName": "Gold Rates",
                      "updated": "2021-04-26T15:25:27.587Z"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "All Data Rates",
              "displayName": "Gold Rates",
              "updated": "2021-04-26T15:25:27.587Z"
            },
            "description": "Update an existing instance of the UsageRatePlan object."
          }
        ]
      },
      {
        "name": "Currency Exchange",
        "source_file": "Currency-Exchange",
        "endpoints": [
          {
            "name": "deleteExchangeById",
            "method": "DELETE",
            "path": "Currency/Exchange/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ExchangeByIdResult",
              "description": "Returns deleteExchangeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "currencyExchange"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CurrencyExchange object."
              }
            ],
            "description": "Delete an instance of the CurrencyExchange object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Currency/Exchange/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the CurrencyExchange objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Currency/Exchange/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the CurrencyExchange objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Currency/Exchange/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the CurrencyExchange objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getExchangeById",
            "method": "GET",
            "path": "Currency/Exchange/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ExchangeByIdResult",
              "description": "Returns getExchangeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 18,
                  "ownerName": "Sample Text Data",
                  "name": "Canadian Rates",
                  "effective": "2021-04-26T15:25:27.587Z",
                  "created": "2021-04-26T15:25:27.587Z",
                  "createdByUserId": 18,
                  "createdByUserName": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CurrencyExchange object."
              }
            ],
            "description": "Retrieve an instance of the CurrencyExchange object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Currency/Exchange/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CurrencyExchange object."
              }
            ],
            "description": "Retrieve deep detail of the CurrencyExchange object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchExchangeById",
            "method": "PATCH",
            "path": "Currency/Exchange/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchExchangeByIdResult",
              "description": "Returns patchExchangeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "currencyExchange",
                      "instance": {
                        "identity": 1,
                        "ownerId": 21,
                        "ownerName": "Sample Text Data",
                        "name": "Canadian Rates",
                        "effective": "2021-04-26T15:25:27.587Z",
                        "created": "2021-04-26T15:25:27.587Z",
                        "createdByUserId": 27,
                        "createdByUserName": "Sample Text Data"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CurrencyExchange object."
              }
            ],
            "properties": {
              "details": {},
              "currencyExchanges": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "Canadian Rates",
                    "effective": "2021-04-26T15:25:27.587Z",
                    "createdByUserId": 23
                  }
                ]
              }
            },
            "description": "Update or Add the CurrencyExchange object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Currency/Exchange/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1
            },
            "description": "Create a new instance of the CurrencyExchange object."
          },
          {
            "name": "updateExchangeById",
            "method": "PUT",
            "path": "Currency/Exchange/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ExchangeByIdResult",
              "description": "Returns updateExchangeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 22,
                      "ownerName": "Sample Text Data",
                      "name": "Canadian Rates",
                      "effective": "2021-04-26T15:25:27.587Z",
                      "created": "2021-04-26T15:25:27.587Z",
                      "createdByUserId": 25,
                      "createdByUserName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "name": "Canadian Rates",
              "effective": "2021-04-26T15:25:27.587Z",
              "createdByUserId": 16
            },
            "description": "Update an existing instance of the CurrencyExchange object."
          }
        ]
      },
      {
        "name": "Account Priceplan",
        "source_file": "Account-PricePlan",
        "endpoints": [
          {
            "name": "deletePriceplanById",
            "method": "DELETE",
            "path": "Account/PricePlan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PriceplanByIdResult",
              "description": "Returns deletePriceplanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "delete",
                "results": {
                  "totalCount": 4,
                  "items": [
                    {
                      "identity": 1,
                      "action": "deleted",
                      "dtoTypeKey": "packageServicePricePlan"
                    },
                    {
                      "lhsId": 2,
                      "rhsId": 2,
                      "action": "detached",
                      "dtoTypeKey": "sampleObjectConnector"
                    },
                    {
                      "foreignKeyIdentity": 2,
                      "action": "deleted",
                      "dtoTypeKey": "sampleObject"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountPricePlan object."
              }
            ],
            "description": "Delete an instance of the AccountPricePlan object. Upon successful delete, this API will return a record of all of the related objects deleted with this operation. The specifics on which objects have been deleted will depend on which related objects have been populated in the system."
          },
          {
            "name": "get",
            "method": "GET",
            "path": "Account/PricePlan/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountPricePlan objects."
          },
          {
            "name": "getAccountById",
            "method": "GET",
            "path": "Account/PricePlan/ActiveFor/Account/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "AccountByIdResult",
              "description": "Returns getAccountById information"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              }
            ],
            "description": "Retrieve the AccountPricePlan that is active right now for an Account."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Account/PricePlan/ActiveFor/Account/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Account object."
              }
            ],
            "description": "Retrieve the deep detail of the AccountPricePlan that is active right now for an Account including sub accounts. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Account/PricePlan/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountPricePlan objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Account/PricePlan/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the AccountPricePlan objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getPriceplanById",
            "method": "GET",
            "path": "Account/PricePlan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PriceplanByIdResult",
              "description": "Returns getPriceplanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "packageServiceId": 20,
                  "packageServiceName": "Sample Text Data",
                  "packageFrequencyId": 16,
                  "packageFrequencyName": "Sample Text Data",
                  "packageCurrencyId": 23,
                  "packageCurrencyName": "Sample Text Data",
                  "accountPricePlanId": 12,
                  "accountPricePlanName": "Sample Text Data",
                  "accountProductCodeId": 8,
                  "accountProductCodeName": "Sample Text Data",
                  "priceBookId": 1,
                  "priceBookName": "Sample Text Data",
                  "pricePlanTypeId": 11,
                  "pricePlanTypeName": "Sample Text Data",
                  "effective": "Sample Text Data",
                  "priceChangeTrackingId": 13,
                  "priceChangeTrackingName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "updated": "2021-04-26T15:25:27.587Z"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountPricePlan object."
              }
            ],
            "description": "Retrieve an instance of the AccountPricePlan object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Account/PricePlan/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountPricePlan object."
              }
            ],
            "description": "Retrieve deep detail of the AccountPricePlan object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "patchPriceplanById",
            "method": "PATCH",
            "path": "Account/PricePlan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "patchPriceplanByIdResult",
              "description": "Returns patchPriceplanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "patch",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "action": "created",
                      "dtoTypeKey": "packageServicePricePlan",
                      "instance": {
                        "identity": 1,
                        "packageServiceId": 11,
                        "packageServiceName": "Sample Text Data",
                        "packageFrequencyId": 12,
                        "packageFrequencyName": "Sample Text Data",
                        "packageCurrencyId": 24,
                        "packageCurrencyName": "Sample Text Data",
                        "accountPricePlanId": 15,
                        "accountPricePlanName": "Sample Text Data",
                        "accountProductCodeId": 10,
                        "accountProductCodeName": "Sample Text Data",
                        "priceBookId": 3,
                        "priceBookName": "Sample Text Data",
                        "pricePlanTypeId": 15,
                        "pricePlanTypeName": "Sample Text Data",
                        "effective": "Sample Text Data",
                        "priceChangeTrackingId": 0,
                        "priceChangeTrackingName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z"
                      }
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountPricePlan object."
              }
            ],
            "properties": {
              "details": {},
              "accountPricePlans": {
                "items": [
                  {
                    "patchType": "create",
                    "patchClientId": 1,
                    "name": "Sample Text Data",
                    "accountId": 25,
                    "description": "Sample Text Data",
                    "start": "2021-04-26T15:25:27.587Z",
                    "end": "2021-04-26T15:25:27.587Z",
                    "isConsolidatedByInvoicer": true,
                    "includeChildAccounts": true
                  }
                ]
              }
            },
            "description": "Update or Add the AccountPricePlan object and optionally make changes to any child objects. Patch end points allow for adding/updating multiple related entities and the results of those changes will be reported in the response JSON payload in the items array."
          },
          {
            "name": "create",
            "method": "POST",
            "path": "Account/PricePlan/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns create information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "create",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Active",
                      "ownerId": 24,
                      "ownerName": "Sample Text Data",
                      "statusTypeId": 11,
                      "statusTypeName": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Sample Text Data",
              "accountId": 18,
              "description": "Sample Text Data",
              "start": "2021-04-26T15:25:27.587Z",
              "end": "2021-04-26T15:25:27.587Z",
              "isConsolidatedByInvoicer": true,
              "includeChildAccounts": true
            },
            "description": "Create a new instance of the AccountPricePlan object."
          },
          {
            "name": "createPatch",
            "method": "POST",
            "path": "Account/PricePlan/{id}/Patch",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PatchResult",
              "description": "Returns createPatch information"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the AccountPricePlan object."
              }
            ],
            "description": "This method is only created as work around in order to provide PATCH capability for Salesforce that can only submit POST calls. Typically an internal API with limited use."
          },
          {
            "name": "updatePriceplanById",
            "method": "PUT",
            "path": "Account/PricePlan/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PriceplanByIdResult",
              "description": "Returns updatePriceplanById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "packageServiceId": 6,
                      "packageServiceName": "Sample Text Data",
                      "packageFrequencyId": 23,
                      "packageFrequencyName": "Sample Text Data",
                      "packageCurrencyId": 21,
                      "packageCurrencyName": "Sample Text Data",
                      "accountPricePlanId": 0,
                      "accountPricePlanName": "Sample Text Data",
                      "accountProductCodeId": 2,
                      "accountProductCodeName": "Sample Text Data",
                      "priceBookId": 25,
                      "priceBookName": "Sample Text Data",
                      "pricePlanTypeId": 10,
                      "pricePlanTypeName": "Sample Text Data",
                      "effective": "Sample Text Data",
                      "priceChangeTrackingId": 21,
                      "priceChangeTrackingName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "updated": "2021-04-26T15:25:27.587Z"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "name": "Sample Text Data",
              "accountId": 18,
              "description": "Sample Text Data",
              "start": "2021-04-26T15:25:27.587Z",
              "end": "2021-04-26T15:25:27.587Z",
              "isConsolidatedByInvoicer": true,
              "includeChildAccounts": true
            },
            "description": "Update an existing instance of the AccountPricePlan object."
          }
        ]
      },
      {
        "name": "Credit Item",
        "source_file": "Credit-Item",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Credit/Item/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the CreditItem objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Credit/Item/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the CreditItem objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getItemById",
            "method": "GET",
            "path": "Credit/Item/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ItemByIdResult",
              "description": "Returns getItemById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "accountId": 11,
                  "accountName": "Sample Text Data",
                  "packageId": 16,
                  "packageName": "Sample Text Data",
                  "serviceId": 27,
                  "serviceName": "Sample Text Data",
                  "amount": 26,
                  "detail": "Sample Text Data",
                  "periodStart": "2021-04-26T15:25:27.587Z",
                  "periodEnd": "2021-04-26T15:25:27.587Z",
                  "prorated": true,
                  "date": "2021-04-26T15:25:27.587Z",
                  "accountPackageId": "Sample Text Data",
                  "accountPackageName": "Sample Text Data",
                  "accountServiceId": "Sample Text Data",
                  "accountServiceName": "Sample Text Data",
                  "posting": "2021-04-26T15:25:27.587Z",
                  "invoiceId": 22,
                  "invoiceName": "Sample Text Data",
                  "invoiceItemTypeId": 1,
                  "invoiceItemTypeName": "Sample Text Data",
                  "baseAmount": 16,
                  "invoiceAmount": 5,
                  "invoiceCurrencyExchangeDetailId": 14,
                  "invoiceCurrencyExchangeDetailName": "Sample Text Data",
                  "originalInvoiceItemId": 2,
                  "originalInvoiceItemName": "Sample Text Data",
                  "isManual": true,
                  "createdByUserId": 24,
                  "createdByUserName": "Sample Text Data",
                  "udrUsageIdentifier": "Sample Text Data",
                  "accountServiceTemporalId": "Sample Text Data",
                  "accountServiceTemporalName": "Sample Text Data",
                  "quantity": 9,
                  "price": 17,
                  "generalLedgerId": 15,
                  "generalLedgerName": "Sample Text Data",
                  "serviceTaxCategoryId": 22,
                  "serviceTaxCategoryName": "Sample Text Data",
                  "preDiscountAmount": 17,
                  "isTaxInclusive": true,
                  "invoicerAccountId": 1,
                  "invoicerAccountName": "Sample Text Data",
                  "created": "2021-04-26T15:25:27.587Z",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "isTaxedOnCreate": true,
                  "usageValue": "Sample Text Data",
                  "usageUnitId": 19
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the CreditItem object."
              }
            ],
            "description": "Retrieve an instance of the CreditItem object by its ID."
          }
        ]
      },
      {
        "name": "Invoice",
        "source_file": "Invoice",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Invoice/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Invoice objects."
          },
          {
            "name": "getByname",
            "method": "GET",
            "path": "Invoice/ByName",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "BynameResult",
              "description": "Returns getByname information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "accountId": 16,
                    "accountName": "Sample Text Data",
                    "name": "Sample Text Data",
                    "date": "2021-04-26T15:25:27.587Z",
                    "sent": "2021-04-26T15:25:27.587Z",
                    "due": "2021-04-26T15:25:27.587Z",
                    "lastChecked": "2021-04-26T15:25:27.587Z",
                    "invoiceStatusTypeId": 5,
                    "invoiceStatusTypeName": "Sample Text Data",
                    "processed": "2021-04-26T15:25:27.587Z",
                    "billRunHistoryId": 9,
                    "billRunHistoryName": "Sample Text Data",
                    "previousBalance": 102.52,
                    "balance": 202.52,
                    "created": "2021-04-26T15:25:27.587Z",
                    "closed": "2021-04-26T15:25:27.587Z",
                    "total": 100.15,
                    "totalCharge": 100.15,
                    "totalTax": 12.15,
                    "totalDiscount": 10.36,
                    "totalPaymentApplied": 12.36,
                    "totalCreditApplied": 11.36,
                    "totalPaymentAttached": 7.36,
                    "totalCreditAttached": 5.34,
                    "baseTotal": 100.15,
                    "baseTotalCharge": 100.15,
                    "baseTotalDiscount": 10.36,
                    "baseTotalPaymentApplied": 12.36,
                    "baseTotalCreditApplied": 11.36,
                    "baseTotalPaymentAttached": 7.36,
                    "baseTotalCreditAttached": 5.34,
                    "baseBalance": 5.34,
                    "baseTotalTax": 12.15,
                    "basePreviousBalance": 102.52,
                    "isVoid": true,
                    "isVoiding": true,
                    "doNotDeliver": true,
                    "updated": "2021-04-26T15:25:27.587Z"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Invoice objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Invoice/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Invoice objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Invoice/Paged/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the Invoice objects in a paged fashion with all object details. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getInvoiceById",
            "method": "GET",
            "path": "Invoice/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "InvoiceByIdResult",
              "description": "Returns getInvoiceById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "accountId": 9,
                  "accountName": "Sample Text Data",
                  "name": "Sample Text Data",
                  "date": "2021-04-26T15:25:27.587Z",
                  "sent": "2021-04-26T15:25:27.587Z",
                  "due": "2021-04-26T15:25:27.587Z",
                  "lastChecked": "2021-04-26T15:25:27.587Z",
                  "invoiceStatusTypeId": 1,
                  "invoiceStatusTypeName": "Sample Text Data",
                  "processed": "2021-04-26T15:25:27.587Z",
                  "billRunHistoryId": 27,
                  "billRunHistoryName": "Sample Text Data",
                  "previousBalance": 102.52,
                  "balance": 202.52,
                  "created": "2021-04-26T15:25:27.587Z",
                  "closed": "2021-04-26T15:25:27.587Z",
                  "total": 100.15,
                  "totalCharge": 100.15,
                  "totalTax": 12.15,
                  "totalDiscount": 10.36,
                  "totalPaymentApplied": 12.36,
                  "totalCreditApplied": 11.36,
                  "totalPaymentAttached": 7.36,
                  "totalCreditAttached": 5.34,
                  "baseTotal": 100.15,
                  "baseTotalCharge": 100.15,
                  "baseTotalDiscount": 10.36,
                  "baseTotalPaymentApplied": 12.36,
                  "baseTotalCreditApplied": 11.36,
                  "baseTotalPaymentAttached": 7.36,
                  "baseTotalCreditAttached": 5.34,
                  "baseBalance": 5.34,
                  "baseTotalTax": 12.15,
                  "basePreviousBalance": 102.52,
                  "isVoid": true,
                  "isVoiding": true,
                  "doNotDeliver": true,
                  "updated": "2021-04-26T15:25:27.587Z"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Invoice object."
              }
            ],
            "description": "Retrieve an instance of the Invoice object by its ID."
          },
          {
            "name": "getDetail",
            "method": "GET",
            "path": "Invoice/{id}/Detail",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DetailResult",
              "description": "Returns getDetail information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 8,
                  "ownerName": "Sample Text Data",
                  "name": "All Data Rates",
                  "displayName": "Gold Rates",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "details": {
                    "usageRateGroups": [
                      {
                        "identity": 26,
                        "name": "Sample Text Data",
                        "start": "2021-04-26T15:25:27.587Z",
                        "end": "2021-04-26T15:25:27.587Z",
                        "useForCost": true,
                        "timePeriodId": 72,
                        "timePeriodName": "Sample Text Data",
                        "displayName": "Sample Text Data",
                        "currencyId": 73,
                        "currencyName": "Sample Text Data",
                        "isAggregated": true,
                        "priority": 35,
                        "isPassThrough": true,
                        "amountPrecision": 89,
                        "roundingMethodTypeId": 53,
                        "roundingMethodTypeName": "Sample Text Data",
                        "created": "2021-04-26T15:25:27.587Z",
                        "updated": "2021-04-26T15:25:27.587Z",
                        "generalLedgerId": 94,
                        "generalLedgerName": "Sample Text Data",
                        "isTaxInclusive": true,
                        "aggregationTypeId": 51,
                        "aggregationTypeName": "Sample Text Data",
                        "createdByUserId": 30,
                        "createdByUserName": "Sample Text Data",
                        "updatedByUserId": 67,
                        "updatedByUserName": "Sample Text Data",
                        "isAggregatedByInvoicer": true,
                        "currencyCode": "Sample Text Data"
                      }
                    ]
                  }
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Invoice object."
              }
            ],
            "description": "Retrieve deep detail of the Invoice object by its ID. This endpoint returns additional detailed data related to this object. The specifics on which data is returned will depend on which related objects have been populated in the system."
          },
          {
            "name": "getDownload",
            "method": "GET",
            "path": "Invoice/{id}/Download",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DownloadResult",
              "description": "Returns getDownload information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "ownerId": 16,
                  "ownerName": "Sample Text Data",
                  "name": "Montly Sales Summary",
                  "reportFolderId": 12,
                  "reportFolderName": "Sample Text Data",
                  "title": "Montly Sales Results",
                  "repeatTitle": true,
                  "isLocked": true,
                  "isActive": true,
                  "created": "2021-04-26T15:25:27.587Z",
                  "createdByUserId": 15,
                  "createdByUserName": "Sample Text Data",
                  "updated": "2021-04-26T15:25:27.587Z",
                  "updatedByUserId": 14,
                  "updatedByUserName": "Sample Text Data",
                  "reportDefinitionTypeId": 3,
                  "reportDefinitionTypeName": "Sample Text Data",
                  "useReportingDatabase": true
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Invoice object."
              }
            ],
            "description": "Returns the byte array of the PDF version of the specified Invoice"
          },
          {
            "name": "createDelivery",
            "method": "POST",
            "path": "Invoice/{id}/Delivery",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DeliveryResult",
              "description": "Returns createDelivery information",
              "status_code": 200,
              "body": {
                "trackingId": "7c52fda0-b212-4a1a-88b6-2eb0e35fe06b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 155,
                      "action": "messageSent",
                      "dtoTypeKey": "invoice"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Invoice object."
              }
            ],
            "properties": {},
            "description": "Delivers the specified Invoice to its recipients."
          },
          {
            "name": "createRerender",
            "method": "POST",
            "path": "Invoice/{id}/ReRender",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "RerenderResult",
              "description": "Returns createRerender information"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Invoice object."
              }
            ],
            "properties": {},
            "description": "Requests the system to re-render the specified Invoice"
          },
          {
            "name": "createVoid",
            "method": "POST",
            "path": "Invoice/{id}/Void",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "VoidResult",
              "description": "Returns createVoid information"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the Invoice object."
              }
            ],
            "properties": {},
            "description": "Void the specified Invoice."
          },
          {
            "name": "updateInvoiceById",
            "method": "PUT",
            "path": "Invoice/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "InvoiceByIdResult",
              "description": "Returns updateInvoiceById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "type": "update",
                "results": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "ownerId": 7,
                      "ownerName": "Sample Text Data",
                      "name": "12 months",
                      "dateFormat": "dd-MMM-yyyy",
                      "dateTimeFormat": "dd-MMM-yyyy HH:mm:ss",
                      "description": "Sample Text Data",
                      "localeId": 6,
                      "localeName": "Sample Text Data",
                      "currencyPrecision": "2",
                      "createdByUserId": 18,
                      "createdByUserName": "Sample Text Data",
                      "created": "2021-04-26T15:25:27.587Z",
                      "updatedByUserId": 11,
                      "updatedByUserName": "Sample Text Data",
                      "updated": "2021-04-26T15:25:27.587Z",
                      "templateTypeId": 6,
                      "templateTypeName": "Sample Text Data",
                      "excludeZeroValueInvoiceItems": true,
                      "documentStorageLocationId": 2,
                      "documentStorageLocationName": "Sample Text Data",
                      "fileName": "Sample Text Data",
                      "documentIdentifier": "32bb4ce1-cc03-4eb1-9d3b-381f74a1fa1f",
                      "isCore": true
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "properties": {
              "identity": 1,
              "accountId": 24,
              "name": "Sample Text Data",
              "date": "2021-04-26T15:25:27.587Z",
              "sent": "2021-04-26T15:25:27.587Z",
              "due": "2021-04-26T15:25:27.587Z",
              "lastChecked": "2021-04-26T15:25:27.587Z",
              "invoiceStatusTypeId": 5,
              "processed": "2021-04-26T15:25:27.587Z",
              "billRunHistoryId": 4,
              "previousBalance": 102.52,
              "balance": 202.52,
              "closed": "2021-04-26T15:25:27.587Z",
              "total": 100.15,
              "totalCharge": 100.15,
              "totalTax": 12.15,
              "totalDiscount": 10.36,
              "totalPaymentApplied": 12.36,
              "totalCreditApplied": 11.36,
              "totalPaymentAttached": 7.36,
              "totalCreditAttached": 5.34,
              "baseTotal": 100.15,
              "baseTotalCharge": 100.15,
              "baseTotalDiscount": 10.36,
              "baseTotalPaymentApplied": 12.36,
              "baseTotalCreditApplied": 11.36,
              "baseTotalPaymentAttached": 7.36,
              "baseTotalCreditAttached": 5.34,
              "baseBalance": 5.34,
              "baseTotalTax": 12.15,
              "basePreviousBalance": 102.52,
              "isVoid": true,
              "isVoiding": true,
              "doNotDeliver": true,
              "updated": "2021-04-26T15:25:27.587Z"
            },
            "description": "Update an existing instance of the Invoice object."
          }
        ]
      },
      {
        "name": "Discounttype",
        "source_file": "DiscountType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "DiscountType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the DiscountType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "DiscountType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the DiscountType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getDiscounttypeById",
            "method": "GET",
            "path": "DiscountType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "DiscounttypeByIdResult",
              "description": "Returns getDiscounttypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Sample Text Data"
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the DiscountType object."
              }
            ],
            "description": "Retrieve an instance of the DiscountType object by its ID."
          }
        ]
      },
      {
        "name": "Extension Attribute Listtype",
        "source_file": "Extension-Attribute-ListType",
        "endpoints": [
          {
            "name": "get",
            "method": "GET",
            "path": "Extension/Attribute/ListType/",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "Result",
              "description": "Returns get information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "totalCount": 1,
                "items": [
                  {
                    "identity": 1,
                    "name": "Sample Text Data"
                  }
                ]
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ExtensionAttributeListType objects."
          },
          {
            "name": "getPaged",
            "method": "GET",
            "path": "Extension/Attribute/ListType/Paged",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "PagedResult",
              "description": "Returns getPaged information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "pagination": {
                  "pageNumber": 1,
                  "pageSize": 20,
                  "excludeTotalCount": false
                },
                "pagedResults": {
                  "totalCount": 1,
                  "items": [
                    {
                      "identity": 1,
                      "name": "Sample Text Data"
                    }
                  ]
                }
              },
              "content_type": "application/json"
            },
            "parameters": [],
            "description": "Retrieve all of the ExtensionAttributeListType objects in a paged fashion. This endpoint implements pagination for its results. Individual pages can be requested to return a particular paged set in the list of results.  To learn more, see details on working with paginated endpoints."
          },
          {
            "name": "getListtypeById",
            "method": "GET",
            "path": "Extension/Attribute/ListType/{id}",
            "errors": [
              "InternalServerError"
            ],
            "response": {
              "type": "ListtypeByIdResult",
              "description": "Returns getListtypeById information",
              "status_code": 200,
              "body": {
                "trackingId": "d2ae5304-2355-44eb-a328-272f02935f8b",
                "instance": {
                  "identity": 1,
                  "name": "Multi-Select",
                  "sortOrder": 6
                }
              },
              "content_type": "application/json"
            },
            "parameters": [
              {
                "name": "id",
                "type": "ID!",
                "required": true,
                "description": "Unique identifier for the ExtensionAttributeListType object."
              }
            ],
            "description": "Retrieve an instance of the ExtensionAttributeListType object by its ID."
          }
        ]
      }
    ]
  }