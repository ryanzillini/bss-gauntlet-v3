{
  "api": "TMF678_Customer_Bill",
  "version": "v4.0.0",
  "endpoints": [
    {
      "name": "listCustomerBillOnDemand",
      "type": "GET",
      "path": "/customerBillOnDemand",
      "description": "Fetches a list of CustomerBillOnDemand entities. You can filter the results by specifying parameters.",
      "parameters": [
        {
          "name": "fields",
          "type": "string",
          "required": false,
          "description": "Specify the properties you want to include in the response, separated by commas."
        },
        {
          "name": "offset",
          "type": "integer",
          "required": false,
          "description": "The starting index from where the list of resources will be returned in the response."
        },
        {
          "name": "limit",
          "type": "integer",
          "required": false,
          "description": "The maximum number of resources to be returned in the response."
        }
      ],
      "response": {
        "type": "object",
        "description": "Returns a list of CustomerBillOnDemand entities."
      },
      "errors": [
        "400: Bad Request",
        "401: Unauthorized",
        "403: Forbidden",
        "404: Not Found",
        "405: Method Not allowed",
        "409: Conflict",
        "500: Internal Server Error"
      ]
    },
    {
      "name": "createCustomerBillOnDemand",
      "type": "POST",
      "path": "/customerBillOnDemand",
      "description": "Creates a new CustomerBillOnDemand entity and returns the created entity.",
      "parameters": [
        {
          "name": "customerBillOnDemand",
          "required": true,
          "description": "The CustomerBillOnDemand entity to be created. This should be included in the request body.",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/CustomerBillOnDemand_Create"
          }
        }
      ],
      "response": {
        "type": "object",
        "description": "Returns the created CustomerBillOnDemand entity."
      },
      "errors": [
        "400: Bad Request",
        "401: Unauthorized",
        "403: Forbidden",
        "405: Method Not allowed",
        "409: Conflict",
        "500: Internal Server Error"
      ]
    },
    {
      "name": "retrieveCustomerBillOnDemand",
      "type": "GET",
      "path": "/customerBillOnDemand/{id}",
      "description": "Fetches a specific CustomerBillOnDemand entity by its ID. You can specify the attributes you want to include in the response.",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "description": "The ID of the CustomerBillOnDemand entity to be retrieved."
        },
        {
          "name": "fields",
          "type": "string",
          "required": false,
          "description": "Specify the properties you want to include in the response, separated by commas."
        }
      ],
      "response": {
        "type": "object",
        "description": "Returns the requested CustomerBillOnDemand entity."
      },
      "errors": [
        "400: Bad Request",
        "401: Unauthorized",
        "403: Forbidden",
        "404: Not Found",
        "405: Method Not allowed",
        "409: Conflict",
        "500: Internal Server Error"
      ]
    },
    {
      "name": "listCustomerBill",
      "type": "GET",
      "path": "/customerBill",
      "description": "Fetches a list of CustomerBill entities. You can filter the results by specifying parameters.",
      "parameters": [
        {
          "name": "fields",
          "type": "string",
          "required": false,
          "description": "Specify the properties you want to include in the response, separated by commas."
        },
        {
          "name": "offset",
          "type": "integer",
          "required": false,
          "description": "The starting index from where the list of resources will be returned in the response."
        },
        {
          "name": "limit",
          "type": "integer",
          "required": false,
          "description": "The maximum number of resources to be returned in the response."
        }
      ],
      "response": {
        "type": "object",
        "description": "Returns a list of CustomerBill entities."
      },
      "errors": [
        "400: Bad Request",
        "401: Unauthorized",
        "403: Forbidden",
        "404: Not Found",
        "405: Method Not allowed",
        "409: Conflict",
        "500: Internal Server Error"
      ]
    },
    {
      "name": "retrieveCustomerBill",
      "type": "GET",
      "path": "/customerBill/{id}",
      "description": "Fetches a specific CustomerBill entity by its ID. You can specify the attributes you want to include in the response.",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "description": "The ID of the CustomerBill entity to be retrieved."
        },
        {
          "name": "fields",
          "type": "string",
          "required": false,
          "description": "Specify the properties you want to include in the response, separated by commas."
        }
      ],
      "response": {
        "type": "object",
        "description": "Returns the requested CustomerBill entity."
      },
      "errors": [
        "400: Bad Request",
        "401: Unauthorized",
        "403: Forbidden",
        "404: Not Found",
        "405: Method Not allowed",
        "409: Conflict",
        "500: Internal Server Error"
      ]
    },
    {
      "name": "patchCustomerBill",
      "type": "PATCH",
      "path": "/customerBill/{id}",
      "description": "This endpoint allows for partial updates to a specific CustomerBill entity, identified by its unique ID.",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "description": "The unique identifier of the CustomerBill that needs to be updated."
        },
        {
          "name": "customerBill",
          "type": "object",
          "required": true,
          "description": "The CustomerBill object containing the updated information."
        }
      ],
      "response": {
        "type": "object",
        "description": "Returns the updated CustomerBill object."
      },
      "errors": [
        "400: Bad Request - The request could not be understood or was missing required parameters.",
        "401: Unauthorized - Authentication failed or user doesn't have permissions for the requested operation.",
        "403: Forbidden - Authentication succeeded but authenticated user doesn't have access to the resource.",
        "404: Not Found - Resource could not be found.",
        "405: Method Not allowed - Requested method is not supported for the specified resource.",
        "409: Conflict - The request could not be completed due to a conflict with the current state of the resource.",
        "500: Internal Server Error - The request was not completed due to an internal error on the server side."
      ]
    },
    {
      "name": "listAppliedCustomerBillingRate",
      "type": "GET",
      "path": "/appliedCustomerBillingRate",
      "description": "This endpoint retrieves a list of AppliedCustomerBillingRate entities. You can specify certain fields to be included in the response, and control pagination through 'offset' and 'limit' parameters.",
      "parameters": [
        {
          "name": "fields",
          "type": "string",
          "required": false,
          "description": "A comma-separated list of properties to be included in the response."
        },
        {
          "name": "offset",
          "type": "integer",
          "required": false,
          "description": "The starting index from where the list of resources should be returned."
        },
        {
          "name": "limit",
          "type": "integer",
          "required": false,
          "description": "The maximum number of resources to be returned in the response."
        }
      ],
      "response": {
        "type": "object",
        "description": "Returns a list of AppliedCustomerBillingRate entities."
      },
      "errors": [
        "400: Bad Request - The request could not be understood or was missing required parameters.",
        "401: Unauthorized - Authentication failed or user doesn't have permissions for the requested operation.",
        "403: Forbidden - Authentication succeeded but authenticated user doesn't have access to the resource.",
        "404: Not Found - Resource could not be found.",
        "405: Method Not allowed - Requested method is not supported for the specified resource.",
        "409: Conflict - The request could not be completed due to a conflict with the current state of the resource.",
        "500: Internal Server Error - The request was not completed due to an internal error on the server side."
      ]
    },
    {
      "name": "retrieveAppliedCustomerBillingRate",
      "type": "GET",
      "path": "/appliedCustomerBillingRate/{id}",
      "description": "This endpoint retrieves a specific AppliedCustomerBillingRate entity, identified by its unique ID. You can specify certain fields to be included in the response.",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "description": "The unique identifier of the AppliedCustomerBillingRate to be retrieved."
        },
        {
          "name": "fields",
          "type": "string",
          "required": false,
          "description": "A comma-separated list of properties to be included in the response."
        }
      ],
      "response": {
        "type": "object",
        "description": "Returns the requested AppliedCustomerBillingRate entity."
      },
      "errors": [
        "400: Bad Request - The request could not be understood or was missing required parameters.",
        "401: Unauthorized - Authentication failed or user doesn't have permissions for the requested operation.",
        "403: Forbidden - Authentication succeeded but authenticated user doesn't have access to the resource.",
        "404: Not Found - Resource could not be found.",
        "405: Method Not allowed - Requested method is not supported for the specified resource.",
        "409: Conflict - The request could not be completed due to a conflict with the current state of the resource.",
        "500: Internal Server Error - The request was not completed due to an internal error on the server side."
      ]
    },
    {
      "name": "listBillCycle",
      "type": "GET",
      "path": "/billCycle",
      "description": "This endpoint retrieves a list of BillCycle entities. You can specify certain fields to be included in the response, and control pagination through 'offset' and 'limit' parameters.",
      "parameters": [
        {
          "name": "fields",
          "type": "string",
          "required": false,
          "description": "A comma-separated list of properties to be included in the response."
        },
        {
          "name": "offset",
          "type": "integer",
          "required": false,
          "description": "The starting index from where the list of resources should be returned."
        },
        {
          "name": "limit",
          "type": "integer",
          "required": false,
          "description": "The maximum number of resources to be returned in the response."
        }
      ],
      "response": {
        "type": "object",
        "description": "Returns a list of BillCycle entities."
      },
      "errors": [
        "400: Bad Request - The request could not be understood or was missing required parameters.",
        "401: Unauthorized - Authentication failed or user doesn't have permissions for the requested operation.",
        "403: Forbidden - Authentication succeeded but authenticated user doesn't have access to the resource.",
        "404: Not Found - Resource could not be found.",
        "405: Method Not allowed - Requested method is not supported for the specified resource.",
        "409: Conflict - The request could not be completed due to a conflict with the current state of the resource.",
        "500: Internal Server Error - The request was not completed due to an internal error on the server side."
      ]
    },
    {
      "name": "retrieveBillCycle",
      "type": "GET",
      "path": "/billCycle/{id}",
      "description": "This endpoint retrieves a specific BillCycle entity, identified by its unique ID. You can specify certain fields to be included in the response.",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "description": "The unique identifier of the BillCycle to be retrieved."
        },
        {
          "name": "fields",
          "type": "string",
          "required": false,
          "description": "A comma-separated list of properties to be included in the response."
        }
      ],
      "response": {
        "type": "object",
        "description": "Returns the requested BillCycle entity."
      },
      "errors": [
        "400: Bad Request - The request could not be understood or was missing required parameters.",
        "401: Unauthorized - Authentication failed or user doesn't have permissions for the requested operation.",
        "403: Forbidden - Authentication succeeded but authenticated user doesn't have access to the resource.",
        "404: Not Found - Resource could not be found.",
        "405: Method Not allowed - Requested method is not supported for the specified resource.",
        "409: Conflict - The request could not be completed due to a conflict with the current state of the resource.",
        "500: Internal Server Error - The request was not completed due to an internal error on the server side."
      ]
    },
    {
      "name": "listBillCycleSpecification",
      "type": "GET",
      "path": "/billCycleSpecification",
      "description": "This endpoint retrieves a list of BillCycleSpecification entities. It allows you to filter the results by specifying certain fields, offset, and limit in the query parameters.",
      "parameters": [
        {
          "name": "fields",
          "type": "string",
          "required": false,
          "description": "Specify the properties you want to include in the response. These should be comma-separated."
        },
        {
          "name": "offset",
          "type": "integer",
          "required": false,
          "description": "The starting index from where the list of resources will be returned in the response."
        },
        {
          "name": "limit",
          "type": "integer",
          "required": false,
          "description": "The maximum number of resources to be returned in the response."
        }
      ],
      "response": {
        "type": "object",
        "description": "A successful response will return an object containing the requested BillCycleSpecification entities."
      },
      "errors": [
        "400: Bad Request",
        "401: Unauthorized",
        "403: Forbidden",
        "404: Not Found",
        "405: Method Not allowed",
        "409: Conflict",
        "500: Internal Server Error"
      ]
    },
    {
      "name": "retrieveBillCycleSpecification",
      "type": "GET",
      "path": "/billCycleSpecification/{id}",
      "description": "This endpoint retrieves a specific BillCycleSpecification entity based on the provided id. You can also specify certain fields to be included in the response.",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "description": "The unique identifier of the BillCycleSpecification entity you want to retrieve."
        },
        {
          "name": "fields",
          "type": "string",
          "required": false,
          "description": "Specify the properties you want to include in the response. These should be comma-separated."
        }
      ],
      "response": {
        "type": "object",
        "description": "A successful response will return an object containing the requested BillCycleSpecification entity."
      },
      "errors": [
        "400: Bad Request",
        "401: Unauthorized",
        "403: Forbidden",
        "404: Not Found",
        "405: Method Not allowed",
        "409: Conflict",
        "500: Internal Server Error"
      ]
    },
    {
      "name": "registerListener",
      "type": "POST",
      "path": "/hub",
      "description": "This endpoint allows you to set a communication endpoint for the service instance to deliver information about its health state, execution state, failures, and metrics.",
      "parameters": [
        {
          "name": "data",
          "required": true,
          "description": "The data should contain the callback endpoint where the service instance will deliver the information.",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/EventSubscriptionInput"
          }
        }
      ],
      "response": {
        "type": "object",
        "description": "A successful response indicates that the listener has been registered and will receive updates."
      },
      "errors": [
        "400: Bad Request",
        "401: Unauthorized",
        "403: Forbidden",
        "404: Not Found",
        "405: Method Not allowed",
        "409: Conflict",
        "500: Internal Server Error"
      ]
    },
    {
      "name": "unregisterListener",
      "type": "DELETE",
      "path": "/hub/{id}",
      "description": "This endpoint allows you to remove a previously set communication endpoint, stopping the service instance from delivering information to it.",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "description": "The unique identifier of the listener you want to unregister."
        }
      ],
      "response": {
        "type": "object",
        "description": "A successful response indicates that the listener has been unregistered and will no longer receive updates."
      },
      "errors": [
        "400: Bad request",
        "401: Unauthorized",
        "403: Forbidden",
        "404: Not Found",
        "405: Method not allowed",
        "500: Internal Server Error"
      ]
    }
  ]
}