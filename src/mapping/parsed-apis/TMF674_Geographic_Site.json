{
  "api": "TMF674_Geographic_Site",
  "version": "v4.0.0",
  "endpoints": [
    {
      "name": "listGeographicSite",
      "type": "GET",
      "path": "/geographicSite",
      "description": "This endpoint retrieves a list of GeographicSite entities. It can also be used to find specific GeographicSite entities based on certain criteria.",
      "parameters": [
        {
          "name": "fields",
          "type": "string",
          "required": false,
          "description": "Specify the properties you want to be included in the response. These properties should be comma-separated."
        },
        {
          "name": "offset",
          "type": "integer",
          "required": false,
          "description": "Use this parameter to set the starting point within the list of resources for the response."
        },
        {
          "name": "limit",
          "type": "integer",
          "required": false,
          "description": "Use this parameter to limit the number of resources returned in the response."
        }
      ],
      "response": {
        "type": "object",
        "description": "A successful response will return an object containing the requested GeographicSite entities."
      },
      "errors": [
        "400: Bad Request",
        "401: Unauthorized",
        "403: Forbidden",
        "404: Not Found",
        "405: Method Not allowed",
        "409: Conflict",
        "500: Internal Server Error"
      ]
    },
    {
      "name": "createGeographicSite",
      "type": "POST",
      "path": "/geographicSite",
      "description": "This endpoint creates a new GeographicSite entity.",
      "parameters": [
        {
          "name": "geographicSite",
          "required": true,
          "description": "The GeographicSite entity to be created. This should be included in the request body.",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/GeographicSite_Create"
          }
        }
      ],
      "response": {
        "type": "object",
        "description": "A successful response will return an object containing the details of the created GeographicSite entity."
      },
      "errors": [
        "400: Bad Request",
        "401: Unauthorized",
        "403: Forbidden",
        "405: Method Not allowed",
        "409: Conflict",
        "500: Internal Server Error"
      ]
    },
    {
      "name": "retrieveGeographicSite",
      "type": "GET",
      "path": "/geographicSite/{id}",
      "description": "This endpoint retrieves a specific GeographicSite entity based on its identifier. You can also specify which attributes to include in the response.",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "description": "The identifier of the GeographicSite entity to be retrieved. This should be included in the path."
        },
        {
          "name": "fields",
          "type": "string",
          "required": false,
          "description": "Specify the properties you want to be included in the response. These properties should be comma-separated."
        }
      ],
      "response": {
        "type": "object",
        "description": "A successful response will return an object containing the details of the requested GeographicSite entity."
      },
      "errors": [
        "400: Bad Request",
        "401: Unauthorized",
        "403: Forbidden",
        "404: Not Found",
        "405: Method Not allowed",
        "409: Conflict",
        "500: Internal Server Error"
      ]
    },
    {
      "name": "patchGeographicSite",
      "type": "PATCH",
      "path": "/geographicSite/{id}",
      "description": "This endpoint updates a specific GeographicSite entity partially based on its identifier.",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "description": "The identifier of the GeographicSite entity to be updated. This should be included in the path."
        },
        {
          "name": "geographicSite",
          "required": true,
          "description": "The GeographicSite entity to be updated. This should be included in the request body.",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/GeographicSite_Update"
          }
        }
      ],
      "response": {
        "type": "object",
        "description": "A successful response will return an object containing the details of the updated GeographicSite entity."
      },
      "errors": [
        "400: Bad Request",
        "401: Unauthorized",
        "403: Forbidden",
        "404: Not Found",
        "405: Method Not allowed",
        "409: Conflict",
        "500: Internal Server Error"
      ]
    },
    {
      "name": "deleteGeographicSite",
      "type": "DELETE",
      "path": "/geographicSite/{id}",
      "description": "This endpoint deletes a specific GeographicSite entity based on its identifier.",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "description": "The identifier of the GeographicSite entity to be deleted. This should be included in the path."
        }
      ],
      "errors": [
        "400: Bad Request",
        "401: Unauthorized",
        "403: Forbidden",
        "404: Not Found",
        "405: Method Not allowed",
        "409: Conflict",
        "500: Internal Server Error"
      ]
    },
    {
      "name": "registerListener",
      "type": "POST",
      "path": "/hub",
      "description": "This endpoint is used to set the communication endpoint address that the service instance will use to deliver updates about its health state, execution state, failures, and metrics.",
      "parameters": [
        {
          "name": "data",
          "type": "object",
          "required": true,
          "description": "This parameter contains the callback endpoint data that will be used to deliver the information. The data should adhere to the EventSubscriptionInput schema."
        }
      ],
      "response": {
        "type": "object",
        "description": "Returns an object indicating that the listener has been successfully subscribed."
      },
      "errors": [
        "400: Bad Request - The request could not be understood or was missing required parameters.",
        "401: Unauthorized - Authentication failed or user doesn't have permissions for the requested operation.",
        "403: Forbidden - Authentication succeeded but authenticated user doesn't have access to the resource.",
        "404: Not Found - Resource could not be found.",
        "405: Method Not allowed - Requested method is not supported for the specified resource.",
        "409: Conflict - The request could not be completed due to a conflict with the current state of the resource.",
        "500: Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request."
      ]
    },
    {
      "name": "unregisterListener",
      "type": "DELETE",
      "path": "/hub/{id}",
      "description": "This endpoint is used to reset the communication endpoint address that the service instance uses to deliver updates about its health state, execution state, failures, and metrics.",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "description": "This parameter is the unique identifier of the registered listener that needs to be unregistered."
        }
      ],
      "response": {
        "type": "object",
        "description": "Returns an object indicating that the listener has been successfully unsubscribed."
      },
      "errors": [
        "400: Bad request - The request could not be understood or was missing required parameters.",
        "401: Unauthorized - Authentication failed or user doesn't have permissions for the requested operation.",
        "403: Forbidden - Authentication succeeded but authenticated user doesn't have access to the resource.",
        "404: Not Found - Resource could not be found.",
        "405: Method not allowed - Requested method is not supported for the specified resource.",
        "500: Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request."
      ]
    },
    {
      "name": "listenToGeographicSiteCreateEvent",
      "type": "POST",
      "path": "/listener/geographicSiteCreateEvent",
      "description": "This endpoint is an example of a client listener that receives the GeographicSiteCreateEvent notification.",
      "parameters": [
        {
          "name": "data",
          "type": "object",
          "required": true,
          "description": "This parameter contains the event data for the GeographicSiteCreateEvent. The data should adhere to the GeographicSiteCreateEvent schema."
        }
      ],
      "response": {
        "type": "object",
        "description": "Returns an object indicating that the GeographicSiteCreateEvent has been successfully received and processed."
      },
      "errors": [
        "400: Bad Request - The request could not be understood or was missing required parameters.",
        "401: Unauthorized - Authentication failed or user doesn't have permissions for the requested operation.",
        "403: Forbidden - Authentication succeeded but authenticated user doesn't have access to the resource.",
        "404: Not Found - Resource could not be found.",
        "405: Method Not allowed - Requested method is not supported for the specified resource.",
        "409: Conflict - The request could not be completed due to a conflict with the current state of the resource.",
        "500: Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request."
      ]
    },
    {
      "name": "listenToGeographicSiteAttributeValueChangeEvent",
      "type": "POST",
      "path": "/listener/geographicSiteAttributeValueChangeEvent",
      "description": "This endpoint is an example of a client listener that receives the GeographicSiteAttributeValueChangeEvent notification.",
      "parameters": [
        {
          "name": "data",
          "type": "object",
          "required": true,
          "description": "This parameter contains the event data for the GeographicSiteAttributeValueChangeEvent. The data should adhere to the GeographicSiteAttributeValueChangeEvent schema."
        }
      ],
      "response": {
        "type": "object",
        "description": "Returns an object indicating that the GeographicSiteAttributeValueChangeEvent has been successfully received and processed."
      },
      "errors": [
        "400: Bad Request - The request could not be understood or was missing required parameters.",
        "401: Unauthorized - Authentication failed or user doesn't have permissions for the requested operation.",
        "403: Forbidden - Authentication succeeded but authenticated user doesn't have access to the resource.",
        "404: Not Found - Resource could not be found.",
        "405: Method Not allowed - Requested method is not supported for the specified resource.",
        "409: Conflict - The request could not be completed due to a conflict with the current state of the resource.",
        "500: Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request."
      ]
    },
    {
      "name": "listenToGeographicSiteStatusChangeEvent",
      "type": "POST",
      "path": "/listener/geographicSiteStatusChangeEvent",
      "description": "This endpoint is an example of a client listener that receives the GeographicSiteStatusChangeEvent notification.",
      "parameters": [
        {
          "name": "data",
          "type": "object",
          "required": true,
          "description": "This parameter contains the event data for the GeographicSiteStatusChangeEvent. The data should adhere to the GeographicSiteStatusChangeEvent schema."
        }
      ],
      "response": {
        "type": "object",
        "description": "Returns an object indicating that the GeographicSiteStatusChangeEvent has been successfully received and processed."
      },
      "errors": [
        "400: Bad Request - The request could not be understood or was missing required parameters.",
        "401: Unauthorized - Authentication failed or user doesn't have permissions for the requested operation.",
        "403: Forbidden - Authentication succeeded but authenticated user doesn't have access to the resource.",
        "404: Not Found - Resource could not be found.",
        "405: Method Not allowed - Requested method is not supported for the specified resource.",
        "409: Conflict - The request could not be completed due to a conflict with the current state of the resource.",
        "500: Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request."
      ]
    },
    {
      "name": "listenToGeographicSiteDeleteEvent",
      "type": "POST",
      "path": "/listener/geographicSiteDeleteEvent",
      "description": "Example of a client listener for receiving the notification GeographicSiteDeleteEvent",
      "parameters": [
        {
          "name": "data",
          "required": true,
          "description": "The event data",
          "in": "body",
          "schema": {
            "$ref": "#/definitions/GeographicSiteDeleteEvent"
          }
        }
      ],
      "tags": [
        "notification listeners (client side)"
      ],
      "response": {
        "type": "object",
        "description": "Notified"
      },
      "errors": [
        "400: Bad Request",
        "401: Unauthorized",
        "403: Forbidden",
        "404: Not Found",
        "405: Method Not allowed",
        "409: Conflict",
        "500: Internal Server Error"
      ]
    }
  ]
}